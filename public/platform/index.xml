<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
&lt;?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Platforms on Monax Industries</title>
    <link>http://localhost/platform/</link>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://localhost/platform/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>eris:cli</title>
      <link>http://localhost/platform/eriscli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/platform/eriscli/</guid>
      <description>

&lt;pre&gt;&lt;code&gt;Eris is a platform for building, testing, maintaining, and operating distributed applications with a blockchain backend. Eris makes it easy and simple to wrangle the dragons of smart contract blockchains.
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;the-eris-platform&#34;&gt;The Eris Platform&lt;/h1&gt;

&lt;p&gt;eris helps developers build applications which leverage a software design paradigm we call &lt;strong&gt;Participatory Architecture&lt;/strong&gt;. Using distributed and peer-to-peer systems, eris allows the creation of data-driven, interactive distributed applications that can be safely, securely, and reliably deployed and managed.&lt;/p&gt;

&lt;p&gt;eris significantly lowers the barrier to entry for the production, distribution and maintenance of distributed applications. All while allowing users or other orgnaizations to easily and simply participate in the scaling and data security of the application.&lt;/p&gt;

&lt;h1 id=&#34;features&#34;&gt;Features&lt;/h1&gt;

&lt;p&gt;eris:cli is the gateway to the eris platform. The &lt;code&gt;eris&lt;/code&gt; tool is centered around a very few concepts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;services&lt;/code&gt; &amp;ndash; things that you turn on or off&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chains&lt;/code&gt; &amp;ndash; develop permissioned chains&lt;/li&gt;
&lt;li&gt;&lt;code&gt;contracts&lt;/code&gt; &amp;ndash; our smart contract tool chain&lt;/li&gt;
&lt;li&gt;&lt;code&gt;actions&lt;/code&gt; &amp;ndash; step by step processes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These concepts (along with a few other goodies) provide the core functionality of what we think a true distributed application would look like.&lt;/p&gt;

&lt;p&gt;Please see the documentation for more on eris:cli.&lt;/p&gt;

&lt;p&gt;&lt;a class=&#34;action-big&#34; href=&#34;https://docs.erisindustries.com/tutorials/getting-started/&#34;&gt;Get Started Using eris&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>eris:db</title>
      <link>http://localhost/platform/erisdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/platform/erisdb/</guid>
      <description>

&lt;h1 id=&#34;the-blockchain-client-for-information-age-organizations&#34;&gt;The Blockchain Client for Information Age Organizations&lt;/h1&gt;

&lt;p&gt;eris:db is Eris Industries&amp;rsquo; blockchain client.&lt;/p&gt;

&lt;p&gt;It is a controllable (permissionable), smart contract-enabled, proof-of-stake based blockchain design. eris:db can be configured to work with a wide variety of individual blockchain networks. As such, it was, and continues to be, the first blockchain client designed from the ground up to be a multi-network blockchain client.&lt;/p&gt;

&lt;p&gt;Developers who use a eris:db blockchain client along with the eris platform to manage their blockchains are able to benefit from having an access control layer through the use of smart contracts.&lt;/p&gt;

&lt;p&gt;eris:db was designed for deployment in a variety of contexts, from locked-down internal corporate deployments to deployments of a consortium of enterprises, to more decentralized and public deployments, to deployments which require the use of tokens of value, to those that only require the utility of a blockchain but not monetized tokenization. A single eris:db client is all that is required in order to participate in all of these blockchains.&lt;/p&gt;

&lt;p&gt;eris:db is ready for business. We have designed it so that commercial entities who have hesitated to embrace participatory architecture and blockchain technology can feel comfortable in their ability to control the blockchain while still allowing for the other benefits which come with participatory architecture design.&lt;/p&gt;

&lt;p&gt;With one eris:db client, commercial entities will be able to control an innumerable amount of blockchains, each purpose built to solve a particular enterprise challenge.&lt;/p&gt;

&lt;h2 id=&#34;consensus&#34;&gt;Consensus&lt;/h2&gt;

&lt;p&gt;eris:db uses the Tendermint Consensus engine, a deposit based proof of stake protocol which is much more environmentally friendly, decentralisable, speedy, and certain than proof of work.&lt;/p&gt;

&lt;h2 id=&#34;interface&#34;&gt;Interface&lt;/h2&gt;

&lt;p&gt;eris:db comes with a range of interfaces from CLI tooling to RPCs. See our &lt;a href=&#34;https://docs.erisindustries.com/documentation&#34; target=&#34;_blank&#34;&gt;comprehensive documentation&lt;/a&gt; for more.&lt;/p&gt;

&lt;h2 id=&#34;virtual-machine&#34;&gt;Virtual Machine&lt;/h2&gt;

&lt;p&gt;eris:db comes with a built-to-specification Ethereum Virtual Machine. It runs any contract which has been compiled with the eris:compilers or any of Ethereum&amp;rsquo;s compilers.&lt;/p&gt;

&lt;h2 id=&#34;permission-layer&#34;&gt;Permission Layer&lt;/h2&gt;

&lt;p&gt;Permissioning your blockchains is more than simply running them behind a gated VPN if one is running eris:db.&lt;/p&gt;

&lt;p&gt;eris:db comes with a &lt;a href=&#34;https://docs.erisindustries.com/documentation/eris-db-permissions/&#34; target=&#34;_blank&#34;&gt;capabilities-based, evolvable permissioning layer&lt;/a&gt; - the first of its kind on the market, and by far, still the most sophisticated.&lt;/p&gt;

&lt;h2 id=&#34;best-of-all&#34;&gt;Best of All&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;It&amp;rsquo;s Free, Open Source, and Usable&lt;/strong&gt; &lt;code&gt;today&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;eris-db-versus&#34;&gt;eris:db versus &amp;hellip;&lt;/h1&gt;

&lt;div&gt;
  &lt;!-- Nav tabs --&gt;
  &lt;ul class=&#34;nav nav-tabs&#34; role=&#34;tablist&#34; id=&#34;competitionTabs&#34;&gt;
    &lt;li role=&#34;presentation&#34; class=&#34;active&#34;&gt;&lt;a href=&#34;#geth&#34; aria-controls=&#34;geth&#34; role=&#34;tab&#34; data-toggle=&#34;tab&#34;&gt;eris:db v. geth&lt;/a&gt;&lt;/li&gt;
    &lt;li role=&#34;presentation&#34;&gt;&lt;a href=&#34;#strato&#34; aria-controls=&#34;strato&#34; role=&#34;tab&#34; data-toggle=&#34;tab&#34;&gt;eris:db v. strato&lt;/a&gt;&lt;/li&gt;
    &lt;li role=&#34;presentation&#34;&gt;&lt;a href=&#34;#btcd&#34; aria-controls=&#34;btcd&#34; role=&#34;tab&#34; data-toggle=&#34;tab&#34;&gt;eris:db v. btcd&lt;/a&gt;&lt;/li&gt;
    &lt;li role=&#34;presentation&#34;&gt;&lt;a href=&#34;#ripple&#34; aria-controls=&#34;ripple&#34; role=&#34;tab&#34; data-toggle=&#34;tab&#34;&gt;eris:db v. ripple&lt;/a&gt;&lt;/li&gt;
    &lt;li role=&#34;presentation&#34;&gt;&lt;a href=&#34;#dah&#34; aria-controls=&#34;dah&#34; role=&#34;tab&#34; data-toggle=&#34;tab&#34;&gt;eris:db v. hyperledger&lt;/a&gt;&lt;/li&gt;
    &lt;li role=&#34;presentation&#34;&gt;&lt;a href=&#34;#chain&#34; aria-controls=&#34;chain&#34; role=&#34;tab&#34; data-toggle=&#34;tab&#34;&gt;eris:db v. chain.com&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

  &lt;!-- Tab panes --&gt;
  &lt;div class=&#34;tab-content&#34;&gt;
    &lt;div role=&#34;tabpanel&#34; class=&#34;tab-pane fade in active&#34; id=&#34;geth&#34;&gt;
      &lt;div class=&#34;table-responsive&#34;&gt;
        &lt;table class=&#34;table table-hover&#34;&gt;
          &lt;tr&gt;
            &lt;th&gt;&lt;/th&gt;
            &lt;th&gt;eris:db&lt;/th&gt;
            &lt;th&gt;geth (by EthDev)&lt;/th&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;td&gt;Consensus&lt;/td&gt;
            &lt;td&gt;Tendermint Consensus Engine&lt;br /&gt;Deposit based Proof of Stake&lt;br /&gt;PBFT Algorithm &lt;/td&gt;
            &lt;td&gt;Ethereumâ€™s Consensus Engine&lt;br /&gt;Proof of Work&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;td&gt;Interfaces to Client&lt;/td&gt;
            &lt;td&gt;Websockets JSON-RPC&lt;br /&gt;HTTPS JSON-RPC&lt;br /&gt;Command line tooling&lt;/td&gt;
            &lt;td&gt;HTTPS JSON-RPC&lt;br /&gt;Js Console&lt;br /&gt;Command line tooling&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;td&gt;Key Types&lt;/td&gt;
            &lt;td&gt;ECDSA ed22519 curve (same as PGP, SSH, SSL, etc.)&lt;/td&gt;
            &lt;td&gt;ECDSA secp2k1 curve (same as Bitcoin, etc.)&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;td&gt;Virtual Machine&lt;/td&gt;
            &lt;td&gt;Built to Specification EVM&lt;/td&gt;
            &lt;td&gt;Built to Specification EVM&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;td&gt;Permission Layer&lt;/td&gt;
            &lt;td&gt;&lt;a href=&#34;https://docs.erisindustries.com/documentation/eris-db-permissions/&#34;&gt;Yes&lt;/a&gt;&lt;/td&gt;
            &lt;td&gt;n/a&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;td&gt;Works with eris:cli&lt;/td&gt;
            &lt;td&gt;Yes&lt;/td&gt;
            &lt;td&gt;Yes&lt;/td&gt;
          &lt;/tr&gt;
          &lt;tr&gt;
            &lt;td&gt;Free and Open Source?&lt;/td&gt;
            &lt;td&gt;Yes&lt;/td&gt;
            &lt;td&gt;Yes&lt;/td&gt;
          &lt;/tr&gt;
        &lt;/table&gt;
      &lt;/div&gt;
    &lt;/div&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div role=&amp;quot;tabpanel&amp;quot; class=&amp;quot;tab-pane fade&amp;quot; id=&amp;quot;strato&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;table-responsive&amp;quot;&amp;gt;
    &amp;lt;table class=&amp;quot;table table-hover&amp;quot;&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;eris:db&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;strato (by BlockApps/Consensys)&amp;lt;/th&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Consensus&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Tendermint Consensus Engine&amp;lt;br /&amp;gt;Deposit based Proof of Stake&amp;lt;br /&amp;gt;PBFT Algorithm &amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Ethereumâ€™s Consensus Engine&amp;lt;br /&amp;gt;Proof of Work&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Interfaces to Client&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Websockets JSON-RPC&amp;lt;br /&amp;gt;HTTPS JSON-RPC&amp;lt;br /&amp;gt;Command line tooling&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;WebApp Interface&amp;lt;br /&amp;gt;?&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Key Types&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;ECDSA ed22519 curve (same as PGP, SSH, SSL, etc.)&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;ECDSA secp2k1 curve (same as Bitcoin, etc.)&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Virtual Machine&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Built to Specification EVM&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Built to Specification EVM&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Permission Layer&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://docs.erisindustries.com/documentation/eris-db-permissions/&amp;quot;&amp;gt;Yes&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;unclear&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Works with eris:cli&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;not yet&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Free and Open Source?&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
    &amp;lt;/table&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div role=&amp;quot;tabpanel&amp;quot; class=&amp;quot;tab-pane fade&amp;quot; id=&amp;quot;btcd&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;table-responsive&amp;quot;&amp;gt;
    &amp;lt;table class=&amp;quot;table table-hover&amp;quot;&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;eris:db&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;btcd (Bitcoinâ€™s Go Client)&amp;lt;/th&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Consensus&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Tendermint Consensus Engine&amp;lt;br /&amp;gt;Deposit based Proof of Stake&amp;lt;br /&amp;gt;PBFT Algorithm &amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Bitcoin&#39;s Consensus Engine&amp;lt;br /&amp;gt;Proof of Work&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Interfaces to Client&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Websockets JSON-RPC&amp;lt;br /&amp;gt;HTTPS JSON-RPC&amp;lt;br /&amp;gt;Command line tooling&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;HTTPS JSON-RPC&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Key Types&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;ECDSA ed22519 curve (same as PGP, SSH, SSL, etc.)&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;ECDSA secp2k1 curve (same as Bitcoin, etc.)&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Virtual Machine&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Built to Specification EVM&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;n/a&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Permission Layer&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://docs.erisindustries.com/documentation/eris-db-permissions/&amp;quot;&amp;gt;Yes&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;n/a&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Works with eris:cli&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Free and Open Source?&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
    &amp;lt;/table&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div role=&amp;quot;tabpanel&amp;quot; class=&amp;quot;tab-pane fade&amp;quot; id=&amp;quot;ripple&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;table-responsive&amp;quot;&amp;gt;
    &amp;lt;table class=&amp;quot;table table-hover&amp;quot;&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;eris:db&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;ripple&amp;lt;/th&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Consensus&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Tendermint Consensus Engine&amp;lt;br /&amp;gt;Deposit based Proof of Stake&amp;lt;br /&amp;gt;PBFT Algorithm &amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Rippleâ€™s Consensus Engine&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Interfaces to Client&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Websockets JSON-RPC&amp;lt;br /&amp;gt;HTTPS JSON-RPC&amp;lt;br /&amp;gt;Command line tooling&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;WebSocket API&amp;lt;br /&amp;gt;HTTP/S JSON-RPC&amp;lt;br /&amp;gt;Command line tooling&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Key Types&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;ECDSA ed22519 curve (same as PGP, SSH, SSL, etc.)&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;ECDSA secp2k1 curve (same as Bitcoin, etc.)&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Virtual Machine&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Built to Specification EVM&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;n/a&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Permission Layer&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://docs.erisindustries.com/documentation/eris-db-permissions/&amp;quot;&amp;gt;Yes&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Ripple Gateway Permissioning&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Works with eris:cli&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;not yet&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Free and Open Source?&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
    &amp;lt;/table&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div role=&amp;quot;tabpanel&amp;quot; class=&amp;quot;tab-pane fade&amp;quot; id=&amp;quot;dah&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;table-responsive&amp;quot;&amp;gt;
    &amp;lt;table class=&amp;quot;table table-hover&amp;quot;&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;eris:db&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;hyperledger (by DAH)&amp;lt;/th&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Consensus&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Tendermint Consensus Engine&amp;lt;br /&amp;gt;Deposit based Proof of Stake&amp;lt;br /&amp;gt;PBFT Algorithm &amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;unclear&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Interfaces to Client&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Websockets JSON-RPC&amp;lt;br /&amp;gt;HTTPS JSON-RPC&amp;lt;br /&amp;gt;Command line tooling&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;unclear&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Key Types&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;ECDSA ed22519 curve (same as PGP, SSH, SSL, etc.)&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;unclear&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Virtual Machine&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Built to Specification EVM&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;n/a&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Permission Layer&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://docs.erisindustries.com/documentation/eris-db-permissions/&amp;quot;&amp;gt;Yes&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;unclear&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Works with eris:cli&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;not yet&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Free and Open Source?&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;unclear&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
    &amp;lt;/table&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div role=&amp;quot;tabpanel&amp;quot; class=&amp;quot;tab-pane fade&amp;quot; id=&amp;quot;chain&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;table-responsive&amp;quot;&amp;gt;
    &amp;lt;table class=&amp;quot;table table-hover&amp;quot;&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;eris:db&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;chain (by Chain.com)&amp;lt;/th&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Consensus&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Tendermint Consensus Engine&amp;lt;br /&amp;gt;Deposit based Proof of Stake&amp;lt;br /&amp;gt;PBFT Algorithm &amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;unclear&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Interfaces to Client&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Websockets JSON-RPC&amp;lt;br /&amp;gt;HTTPS JSON-RPC&amp;lt;br /&amp;gt;Command line tooling&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;unclear&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Key Types&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;ECDSA ed22519 curve (same as PGP, SSH, SSL, etc.)&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;unclear&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Virtual Machine&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Built to Specification EVM&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;n/a&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Permission Layer&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;&amp;lt;a href=&amp;quot;https://docs.erisindustries.com/documentation/eris-db-permissions/&amp;quot;&amp;gt;Yes&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;unclear&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Works with eris:cli&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;not yet&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
      &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;Free and Open Source?&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;Yes&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;unclear&amp;lt;/td&amp;gt;
      &amp;lt;/tr&amp;gt;
    &amp;lt;/table&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class=&#34;action-big&#34; href=&#34;https://docs.erisindustries.com/tutorials/getting-started/&#34;&gt;Get Started Using eris:db&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>eris:legal</title>
      <link>http://localhost/platform/erislegal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/platform/erislegal/</guid>
      <description>

&lt;h1 id=&#34;putting-the-contracts-in-smart-contracts&#34;&gt;Putting The Contracts in Smart Contracts&lt;/h1&gt;

&lt;p&gt;The eris:legal_markdown system is the backbone of the Distributed Application Software Stackâ€™s legal compliance strategy. When combined with the other elements of the eris platform, ELM provides an ability to link legal contractual agreements to smart contract architecture so that the legal contractâ€™s provisions can be incorporated into the smart contract mechanics.&lt;/p&gt;

&lt;p&gt;To bridge the gap between the legal niceties required in order to enforce an actual contract in an actual court with the automation assistance which comes when using smart contracts to administer an agreement we have built a Go port of Legal Markdown and integrated it into the eris platform.&lt;/p&gt;

&lt;p&gt;The process of ensuring that there is a real world legal contract overlay fused onto a specific smart contract which is built to administer a data-driven interaction we call &lt;strong&gt;dual integration&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&#34;what-is-dual-integration&#34;&gt;What is Dual Integration?&lt;/h1&gt;

&lt;p&gt;Dual integration is the process of integrating a specific legal contract (which can be built with Legal Markdown or any other contract building system) into a specific smart contract which runs on a distributed data store such as Eris Industries&amp;rsquo; &lt;a href=&#34;http://localhost/platform/erisdb/&#34;&gt;eris:db&lt;/a&gt;. The idea of dual integration is to allow users to be able to have the certainty of having a real world contract which can be taken to a court and enforced using established dispute resolution processes in the jurisdiction(s) of the user(s) while also using a smart contract as the primary mechanism for administering the data-driven interaction which attends to the agreement between the parties. For another system which is also seeking to bridge this gap see Primavera de Filippi&amp;rsquo;s Draft &lt;a href=&#34;http://p2pfoundation.net/Legal_Framework_For_Crypto-Ledger_Transactions&#34; target=&#34;_blank&#34;&gt;Legal Framework For Crypto-Ledger Transactions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The reason Eris Industries recommends to all users of Distributed Technology, and particularly smart contracts, to dual-integrate their smart contracts with real world legal contracts built by lawyers qualified in the jurisdiction(s) that will be relevant to the agreement, is simple. Smart contracts are necessarily limited. As they are, at their core, just scripts which live in a distributed data store, the pure code of a smart contract has a limited ability to &amp;ldquo;reach&amp;rdquo; outside the context of their data store to incorporate a legally-binding contractual understanding. While they are capable of being structured in a manner which would automatically administer a data-driven interaction and ensure harmony of the data set in which the smart contracts reside (if they have permissions to do so), judges are unlikely, for the foreseeable future, to be able to easily resolve disputes stemming from smart contracts solely on the basis of their coded parameters (meaning without an integrated legal contract) without simply applying the commercial defaults for the agreement in the jurisdiction &amp;ndash; an end that is unlikely to reflect the intention of the parties to the agreement in question. For these reasons of the limited reach of smart contracts and the limited enforceability of smart contracts, we &lt;strong&gt;highly&lt;/strong&gt; encourage all smart contract systems developers to utilize dual integration of some kind.&lt;/p&gt;

&lt;p&gt;Once the dual integration process is finished the result will be a smart contract which references a specific fingerprint of a real world contract (this is called the &lt;code&gt;hash&lt;/code&gt; of a file, or sometimes it is called the &lt;code&gt;checksum&lt;/code&gt; of a file) and a real world contract which integrates the specific fingerprint of a smart contract (this utilizes the &lt;code&gt;chainID&lt;/code&gt; of the distributed data store which the smart contract runs on as well as the &lt;code&gt;contractAddress&lt;/code&gt; of the specific smart contract). This circular reference ensures &amp;ndash; &lt;strong&gt;to a cryptographic certainty&lt;/strong&gt; &amp;ndash; that the specific file which contains the real world contract and the specific smart contract both properly reference one another.&lt;/p&gt;

&lt;p&gt;To perform a dual integration one would simply take the following steps.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Deploy a smart contract&lt;/li&gt;
&lt;li&gt;Reference the &lt;code&gt;chainId&lt;/code&gt; and &lt;code&gt;contractAddress&lt;/code&gt; of the deployed smart contract in the final draft of the real world contract.&lt;/li&gt;
&lt;li&gt;Finalize the real world contract and find its digital fingerprint.&lt;/li&gt;
&lt;li&gt;Send a transaction logging the &lt;code&gt;checksum&lt;/code&gt; of the real world contract into the storage of the smart contract.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That&amp;rsquo;s it. If those steps are followed then there will be a cryptographically-certain dual integration.&lt;/p&gt;

&lt;h2 id=&#34;elm-s-role-in-dual-integration&#34;&gt;ELM&amp;rsquo;s Role in Dual Integration&lt;/h2&gt;

&lt;p&gt;Eris&amp;rsquo; Legal Markdown greatly assists in the dual integration process by providing an interface for lawyers to work with coders to develop automated transactional solutions for clients. In general, most transactional law follows a similar pattern to how templating works in software development. The idea generally is that a template is developed and then an &amp;ldquo;instance&amp;rdquo; of that template is deployed based on a set of &amp;ldquo;parameters&amp;rdquo;. ELM embraces this idea by providing a very simple way to send a set of parameters to both an ELM template and a smart contract and dual integrate those.&lt;/p&gt;

&lt;p&gt;Legal Markdown is one of the few legal templating systems which works from plain-text documents which can be &lt;strong&gt;much more easily&lt;/strong&gt; dealt with programmatically than a document system like PDFs or DOCXs, but which also integrates prosaic language which is useful to (and understood by) most lawyers.&lt;/p&gt;

&lt;h1 id=&#34;elm-s-design-philosophy&#34;&gt;ELM&amp;rsquo;s Design Philosophy&lt;/h1&gt;

&lt;p&gt;This library was built specifically to empower the creation of structured legal documents using simple text based documents rather than bloated word processor files. This library provides the user with access to structured headers, internal cross references, optional clauses, mixins, and other features that will greatly empower the use of text based documents to create and maintain structured legal documents from template files in simple text based documents.&lt;/p&gt;

&lt;p&gt;This library will parse YAML and JSON Front Matter of Markdown and other Text Based Documents. &lt;strong&gt;It will work with more than only markdown&lt;/strong&gt;. Despite its name, Legal Markdown is not actually dependent upon markdown if used as a preprocessor. If used as a full text processor it is linked to common markdown syntax.&lt;/p&gt;

&lt;h1 id=&#34;designed-with-lawyers-in-mind&#34;&gt;Designed with Lawyers in Mind&lt;/h1&gt;

&lt;p&gt;Some may argue that lawyers are incapable of learning &lt;em&gt;any system&lt;/em&gt; which is not a popular, closed-source word processor tool. At Eris Industries we do not accept that. Lawyers are craftshumans and documents are (predominantly) our craft. Word processors are fine tools, but they are tools which were not engineered specifically for lawyers and they are not very adaptable to different contexts.&lt;/p&gt;

&lt;p&gt;Text editors, on the other hand, are more simple and purposefully built to be extendable and configurable, and are a joy to work with for text-based documents. Text editors can also be much more easily integrated with process and workflow tools than a closed-source word processor that only has a limited API. While working from a text editor does require a cognitive load to learn, for lawyers who do make the plunge the payoff is a drastically improved working experience.&lt;/p&gt;

&lt;p&gt;ELM, Eris Industries&amp;rsquo; implementation of Legal Markdown, not only assists with dual integration of smart contracts and real world contracts, but at its core it was built to simplify the workflow for any transactional documents. It has a range of features which are not only simple to use from a text editor but also will make transactional document creation and maintenance simple and fun.&lt;/p&gt;

&lt;p&gt;&lt;a class=&#34;action-big&#34; href=&#34;https://docs.erisindustries.com/tutorials/erislegal/&#34;&gt;Get Started Using eris:legal&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>eris:platform</title>
      <link>http://localhost/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/platform/</guid>
      <description>&lt;p&gt;Eris is a platform which includes the following components:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://localhost/platform/eriscli/&#34;&gt;eris:cli&lt;/a&gt; &amp;ndash; The command line interface to the eris platform&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://localhost/platform/erisdb/&#34;&gt;eris:db&lt;/a&gt; &amp;ndash; A permissionable smart contracts machine with an enterprise grade API server&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://localhost/platform/epm/&#34;&gt;eris:pm&lt;/a&gt; &amp;ndash; A smart contracts package manager&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://localhost/platform/erislegal/&#34;&gt;eris:legal&lt;/a&gt; &amp;ndash; Eris&amp;rsquo; implementation of Legal Markdown document assembly mechanism&lt;/p&gt;

&lt;p&gt;The Eris platform is built to enpower rapid prototyping, and smooth operation, of smart contract backed applications. It utilizes the following concepts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Services&lt;/code&gt; &amp;ndash; processes or tools which a smart contract backed application needs to have running on a given node in order to properly conduct its business. Services can be public blockchains, distributed file storage systems, middleware components, key servers, or any other process which is Docker compatible and needed for a given application.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Chains&lt;/code&gt; &amp;ndash; permissioned smart contract networks which a smart contract backed application needs to have running on a given node in order to properly conduct its business. Chains utilize the flexible and stable eris:db container to reduce the complexity of working with permissioned smart contract networks.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Contracts&lt;/code&gt; &amp;ndash; smart contract packages are, by definition, needed for a smart contract backed application; this portion of the eris platform reduces the complexity of testing and deploying smart contract packages needed for the application.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Files&lt;/code&gt; &amp;ndash; smart contract applications often are paired with a distributed file storage system. Eris provides harmonized, reduced complexity access to the &lt;a href=&#34;https://ipfs.io&#34; target=&#34;_blank&#34;&gt;IPFS&lt;/a&gt; protocol for distributed file storage system.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Actions&lt;/code&gt; &amp;ndash; flexible step-by-step processes needed for the application.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>eris:pm</title>
      <link>http://localhost/platform/epm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/platform/epm/</guid>
      <description>

&lt;h1 id=&#34;the-smart-contract-package-manager&#34;&gt;The Smart Contract Package Manager&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;The Eris Package Manager Deploys and Tests Smart Contract Systems
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The eris:pm is our &lt;a href=&#34;https://docs.erisindustries.com/explainers/smart_contracts/&#34; target=&#34;_blank&#34;&gt;smart contract&lt;/a&gt; package manager. eris:pm allows developers to easily and simply compile, deploy, and test suites of smart contracts in a cohesive manner.&lt;/p&gt;

&lt;p&gt;eris:pm is a high level tool which provides easy access to most of the eris:db tooling. eris:pm is used to deploy and test suites of smart contracts. In general it will wrap the mint-client tooling, along with eris-keys and eris-compilers to provide a harmonized interface to the modular components of the &lt;a href=&#34;https://docs.erisindustries.com&#34; target=&#34;_blank&#34;&gt;eris&lt;/a&gt; open source platform.&lt;/p&gt;

&lt;p&gt;eris:pm is closer to an ansible or chef like tool than it is NPM in that it is a deployment sequence and testing tool. eris:pm uses an &lt;strong&gt;epm definition file&lt;/strong&gt; to tell the package manager what jobs should be ran and in what order.&lt;/p&gt;

&lt;p&gt;In eris:pm a &lt;em&gt;job&lt;/em&gt; is a single action which is performed (such as a transaction, a contract deployment, a call to a smart contract, or a query of information). The results of these jobs are then kept in variables and may be used in later jobs.&lt;/p&gt;

&lt;p&gt;Please see the documentation for more on eris:pm.&lt;/p&gt;

&lt;p&gt;&lt;a class=&#34;action-big&#34; href=&#34;https://docs.erisindustries.com/tutorials/getting-started/&#34;&gt;Get Started Using eris:pm&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>