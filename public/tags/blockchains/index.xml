<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
&lt;?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blockchains on Monax Industries</title>
    <link>http://localhost/tags/blockchains/</link>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Jan 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost/tags/blockchains/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Blockchains and Banks, or Why Hearn&#39;s Post Isn&#39;t a PR Stunt</title>
      <link>http://localhost/2016/01/17/blockchains-and-banks/</link>
      <pubDate>Sun, 17 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2016/01/17/blockchains-and-banks/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/jakerust/16826216252/&#34; target=&#34;_blank&#34;&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/banks-blockchains.jpg&amp;rsquo; | img }}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is a subjective piece full of selection bias and my own experiences. Take it for what it is worth: one human&amp;rsquo;s experiences and opinions. It is no more, nor less, than that.&lt;/strong&gt; It&amp;rsquo;s also quite inside baseball for many who are not entrenched in the blockchains space. If you find yourself reading this and do not know what I&amp;rsquo;m talking about, then this post probably wasn&amp;rsquo;t written with you in mind.&lt;/p&gt;

&lt;p&gt;Mike Hearn recently wrote a piece which has the bitcoin and blockchain communities all aflutter. For different reasons. If you don&amp;rsquo;t know what I&amp;rsquo;m talking about then please see above (tl;dr, this post probably wasn&amp;rsquo;t written with you in mind).&lt;/p&gt;

&lt;p&gt;As far as I have seen those who identify themselves as capital &amp;ldquo;B&amp;rdquo; Bitcoiners have negatively reacted to Mike&amp;rsquo;s post in a few ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;good riddance&lt;/code&gt; you jerk. never liked you anyway.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bitcoin can&#39;t die&lt;/code&gt; you jerk. &lt;sticks head back in sand&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;banks are behind this&lt;/code&gt; you jerk. I see what you&amp;rsquo;re up to.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As to the first, I personally think it is shameful of many in the bitcoin community to discount Mike&amp;rsquo;s many contributions to the bitcoin ecosystem over the years simply because he wrote a piece breaking up with bitcoin. Sure it was a very public breakup, but Mike&amp;rsquo;s a passionate, opinionated, driven guy. Everyone can see that. Did anyone expect differently no matter whether he and bitcoin stayed together, stayed friends with benefits, or broke up? I followed it on both /r/bitcoin and on /r/btc. The difference between the responses was staggering. If one wants to see the humanly decent parts of the bitcoin community, I would encourage them &lt;em&gt;not&lt;/em&gt; to look at one of those two subreddits.&lt;/p&gt;

&lt;p&gt;As to the second, bitcoin has issues. These are issues because bitcoin as both one blockchain and as some applications atop it (the bitcoin currency, among others such as ascribe, open bazaar, etc.) are reaching the thresholds of what its base blockchain can do.&lt;/p&gt;

&lt;p&gt;On the one hand, &lt;em&gt;great&lt;/em&gt;! Exciting! Good news. On the other hand, the system&amp;rsquo;s gotta upgrade. Somehow, someway. And soon. As with all collective decision making processes, it won&amp;rsquo;t be easy. After doing governance reform for years and working on political decentralization for nearly a decade I can say, though, that Andreas, respectfully, I have &lt;strong&gt;never&lt;/strong&gt; seen this actually work:&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Bitcoin&amp;#39;s invention was an engineering solution to a governance problem. We can solve bitcoin&amp;#39;s governance challenges with more engineering&lt;/p&gt;&amp;mdash; AndreasMAntonopoulos (@aantonop) &lt;a href=&#34;https://twitter.com/aantonop/status/688111075389120518&#34;&gt;January 15, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;But I&amp;rsquo;ve seen that sentiment &lt;strong&gt;many&lt;/strong&gt; times. Collective decision making was the &lt;a href=&#34;https://github.com/project-douglas/eris&#34; target=&#34;_blank&#34;&gt;first big problem&lt;/a&gt; which hooked me on this technology. It is a hard, hard problem. And it is &lt;em&gt;only partially&lt;/em&gt; an engineering problem.&lt;/p&gt;

&lt;p&gt;As to the third, well the rest of this post is about that.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/dionyziz/d0372c3a633a7784fb91&#34; target=&#34;_blank&#34;&gt;@dionyziz, wrote an interesting post&lt;/a&gt;. It was one of the most level pieces I&amp;rsquo;ve read and does not really fall into any of the big traps listed above. Indeed, after I read it I was going to leave a comment with a shorter version of this post, but instead of &amp;ldquo;polluting&amp;rdquo; his voice with my own, I decided to post here. Also I had more thoughts than I originally guessed I would.&lt;/p&gt;

&lt;p&gt;In the piece @dionyziz writes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;His involvement in the bitcoin community was huge and I think we should all appreciate what he did without dismissing his work as many tend to do now that he&amp;rsquo;s distancing himself from the project. Despite the fun googler bitcoin meetups we&amp;rsquo;ve had with Mike in ZÃ¼rich, I want to make sure everyone is aware of his current involvement with 30 large centralized banks including ING, Goldman Sachs, Bank of America, and JP Morgan through his key professional position at R3. It is clear that there is conflict of interest between his blockchain work with these banks, where decentralization is undesired, and the democratized blockchain for the people in modern cryptocurrencies. His blogs and publications must be read critically and keeping this in mind, even if he denies conflict of interest.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I agree with the final sentence and believe that &lt;em&gt;everyone&amp;rsquo;s&lt;/em&gt; blogs and publications should be read critically and with the author&amp;rsquo;s biases in mind. Including my own. Now to my real critique of the quote.&lt;/p&gt;

&lt;p&gt;Despite the fact that I seriously doubt a single member of the bitcoin community does &lt;em&gt;not&lt;/em&gt; know that Mike works for R3, of course it is fine to point it out. Albeit, &lt;strong&gt;I&lt;/strong&gt; want to make sure everyone is aware that R3&amp;rsquo;s involvement is with &lt;em&gt;more&lt;/em&gt; than 30 large banks. Indeed, &lt;a href=&#34;http://www.coindesk.com/twelve-banks-blockchain-consortium-r3/&#34; target=&#34;_blank&#34;&gt;IIRC the number is 42&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s start there with that number. 42. 42 of the largest, most powerful, most driven, most competitive organizations on earth. Each individual bank may or may not care about decentralization, but if R3 is going to effectively navigate the waters they are embarking upon, R3 better understand peer-to-peer communication systems, distributed governance &amp;amp; rulemaking, as well as p2p incentive mechanisms. If they do not they will be unsuccessful.&lt;/p&gt;

&lt;p&gt;Which is a harder challenge? Wrangling 42 of the most competitive organizations in the world to collaborate on a product you hope to be in the business of selling them for the foreseeable future, or being a bitcoin core developer and accountable to&amp;hellip;? Three or four mining pools and four or five wallets/exchanges? And being accountable how&amp;hellip;? Twitter and Reddit aren&amp;rsquo;t exactly known for providing accountability mechanisms.&lt;/p&gt;

&lt;p&gt;Now to the part of the quote which led to this post. The normative statement &lt;code&gt;It is clear that there is conflict of interest between his blockchain work with these banks, where decentralization is undesired&lt;/code&gt;. This is an assumption. The author very obviously does not speak for the individuals who work at banks, nor for their boards&lt;/p&gt;

&lt;p&gt;In my experience that statement is not only an assumption, it is patently untrue. I say this based on Eris&amp;rsquo; working with many of the same banks as R3 and many of the same bankers (albeit at different levels). Read Alex Batlin&amp;rsquo;s work (which is on &lt;a href=&#34;https://twitter.com/alexbatlin/status/589062280152743936&#34; target=&#34;_blank&#34;&gt;LinkedIn&lt;/a&gt; ). Read &lt;a href=&#34;http://www.sytaylor.net/&#34; target=&#34;_blank&#34;&gt;Simon Taylor&lt;/a&gt;&amp;rsquo;s work. To name a few that are mentally handy. Many within banks who are leading the experiments with this technology do not take the perspective that &lt;code&gt;decentralization is undesired&lt;/code&gt;. That is a normative judgment, and an assumption, made from afar.&lt;/p&gt;

&lt;p&gt;Banks are large, complex organizations. As I have argued in the past, a modern bank is much more decentralized than a small business is. Indeed I would argue that Brian Armstrong likely has much more &amp;ldquo;centralized&amp;rdquo; control over what Coinbase does than Brian Moynihan has over what BoA does. Do we claim that Coinbase does not desire decentralization because Brian Armstrong centralizes some decision making in himself as the CEO of his company? If not then I do not see why the counterargument does not hold. At least if we&amp;rsquo;re being intellectually honest and not just &amp;ldquo;hating on bankers&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;But all that aside, let&amp;rsquo;s look at what banks are &lt;em&gt;actually&lt;/em&gt; doing with this technology rather than what we &lt;em&gt;think&lt;/em&gt; they&amp;rsquo;re doing with it.&lt;/p&gt;

&lt;p&gt;What banks are doing, today, with blockchain technology is &lt;a href=&#34;https://twitter.com/gendal/status/688434789855145985&#34; target=&#34;_blank&#34;&gt;orthogonal&lt;/a&gt; (at best), &lt;a href=&#34;https://erisindustries.com/use_cases/bankers/&#34; target=&#34;_blank&#34;&gt;completely different&lt;/a&gt; (at worst) to what decentralized cryptocurrencies are trying to achieve. Banks do not necessarily view the technology as a technical backbone for a new monetary ecosystem. Some do. At least until their risk and compliance departments get involved. But this technology, when viewed as &lt;a href=&#34;https://docs.erisindustries.com/explainers/smart_contracts/&#34; target=&#34;_blank&#34;&gt;business process improvement software which cuts across stakeholders&lt;/a&gt;, has little to nothing to do with money on the internet. Why? Three big reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;cryptocurrencies solve a problem that some users some of the time have, but banks themselves don&amp;rsquo;t have a payments problem and the user base of all of crytocurrency is a drop in the ocean for a large, traditional bank&lt;/li&gt;
&lt;li&gt;compliance with regulation is a challenge for bitcoin companies, who have a political belief in the technology. Without that religio-political bias and without a sufficient user base, it likely isn&amp;rsquo;t worth a bank&amp;rsquo;s time&lt;/li&gt;
&lt;li&gt;even if a bank used a cryptocurrency backend, even a public one, its core functions of providing financial services would largely remain unchanged&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I find it utterly amusing that folks who have been around the world of bitcoin think that the banks are working on an &amp;ldquo;altCoin&amp;rdquo; which will somehow compete with bitcoin.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Good luck banks in developing your bankCoin&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They say smugly to themselves on Twitter and Reddit to a stream of retweets and upvotes. In response I smile and think of the above. Banks don&amp;rsquo;t &lt;em&gt;need&lt;/em&gt; a &amp;ldquo;coin&amp;rdquo; whether it&amp;rsquo;s bitcoin or JPMorganCoin or R3Coin. It wouldn&amp;rsquo;t actually &lt;em&gt;do&lt;/em&gt; anything for them. Sure, many banks are exploring &lt;a href=&#34;https://docs.erisindustries.com/explainers/contracts_v_tokens/&#34; target=&#34;_blank&#34;&gt;tokenized solutions around specific domains&lt;/a&gt;, but this has absolutely nothing to do with currency. Large traditional banks make very little money via currency itself and much more money around creating, trading, administering, and servicing complex financial assets.&lt;/p&gt;

&lt;p&gt;If what a bank is doing with blockchain technology competes with a public blockchain ecosystem (and I do not think it does) it is much more likely to be competing with ethereum&amp;rsquo;s than it is bitcoin&amp;rsquo;s. Bitcoin&amp;rsquo;s network simply does not have the complex logic which is required to provide the step change necessary for systems to be taken to production. And before the responses come in about &amp;ldquo;well this will be fixed by&amp;hellip;&amp;rdquo; a magic wand? I will be quick to respond that if the block size &amp;ldquo;debate&amp;rdquo; is any indication of bitcoin&amp;rsquo;s ability to upgrade itself I do not hold hope for massive improvements in its VM any time soon. &lt;a href=&#34;https://twitter.com/compleatang/status/685342421429927936&#34; target=&#34;_blank&#34;&gt;Shameless plug, the Eris blockchain application platform runs all these blockchains just fine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s move to the second bullet point. Should the regulatory environment change with respect to cryptocurrencies, and should cryptocurrencies continue to gain adoption, I would not be surprised if some bankers open up services around cryptocurrencies. Let us imagine that world for a second. And if some get their druthers it is a world which will happen. Let us then ask ourselves what would be the difference between &lt;a href=&#34;https://www.fidorbank.uk/&#34; target=&#34;_blank&#34;&gt;Fidor&lt;/a&gt; and &lt;a href=&#34;https://www.coinbase.com/&#34; target=&#34;_blank&#34;&gt;Coinbase&lt;/a&gt; in such a world? Would they provide differentiated services? I will go on the record and say that in such a world they are much more likely to be direct competitors of one another than not. Why? Well, that brings us to the third bullet point.&lt;/p&gt;

&lt;p&gt;Cryptocurrencies, even if we accept the &amp;ldquo;be your own bank line&amp;rdquo;, do not do away with the need for &lt;em&gt;financial services&lt;/em&gt; that banks routinely provide. This is a very important point and one that is under talked about. And both challenger banks and large bitcoin companies will converge around providing consumer facing financial services for millennials.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;As (I think) &lt;a href=&#34;https://twitter.com/nivertech&#34;&gt;@nivertech&lt;/a&gt; first said: &lt;a href=&#34;https://twitter.com/hashtag/reintermediation?src=hash&#34;&gt;#reintermediation&lt;/a&gt; &lt;a href=&#34;https://t.co/3Qfcd2TbaC&#34;&gt;https://t.co/3Qfcd2TbaC&lt;/a&gt;&lt;/p&gt;&amp;mdash; Casey Kuhlman (@compleatang) &lt;a href=&#34;https://twitter.com/compleatang/status/678180902955036672&#34;&gt;December 19, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;If one looks closely at, and abstracts the methodology of delivering, the service suite being provided by the large bitcoin companies and the small challenger banks, one would have a hard time finding the points of differentiation. Save for the fact that one goes all in on a decentralized cryptocurrency of course &amp;ndash; which ultimately is simply a methodology of delivering services. In other words, I think it&amp;rsquo;s safe to say that as Coinbase continues to grow vis a vis the number of downloads of bitcoin-qt that we are moving into a world of #reintermediation not #disintermediation.&lt;/p&gt;

&lt;p&gt;These are two independent vectors here. On the one hand, what traditional banks are doing with this technology is not about moving tokens of endogenous value between nodes on a network. On the other hand, large bitcoin companies are looking more and more like small banks by the day. This gets us to my final point of response.&lt;/p&gt;

&lt;p&gt;There is a massive difference between a traditional bank and a challenger bank. Not only in customer base, but also in business mix. Challenger banks are largely focused on winning the consumer markets. This is what, in the bank world, is called a retail bank. Traditional, large banks, sure they have consumer accounts, but that is not where they make most of their money. They make money by providing financial services (which is &lt;strong&gt;much&lt;/strong&gt; more than simply moving currencies around) to large corporations. Within a traditional large bank, providing consumer facing depository services is simply a loss leader. Of course it is fair to critique that, but if one wants to critique it one should come at the critique from a point of knowledge rather than a point of ignorance.&lt;/p&gt;

&lt;p&gt;My point here, I guess, is that if the bitcoin community feels it has competition from the banking sector, that competition is coming from challenger banks, not the large traditional banks the community so loves to &amp;ldquo;hate on&amp;rdquo;. Perhaps instead of wringing its hands about what JP Morgan does with blockchain it should worry about what Fidor is doing (:heart: Fidor, by the way, &lt;a href=&#34;http://www.anthemis.com/our-portfolio/&#34; target=&#34;_blank&#34;&gt;a fellow Anthemis&lt;/a&gt; portfolio company).&lt;/p&gt;

&lt;p&gt;Some will argue, well, if we move to a world where cryptocurrencies dominate over fiat currencies then the banks can&amp;rsquo;t do what they&amp;rsquo;re currently doing around money creation and fractional reserve banking. And I would call that person a partial ignoramus. Look at the many bitcoin exchange failure who admitted in public that they did do fractional reserve &amp;ldquo;banking&amp;rdquo;. And that&amp;rsquo;s simply what we know of. It is not only possible, it has happened. Repeatedly.&lt;/p&gt;

&lt;p&gt;Money creation, indeed is a point of difference between fiat and cryptocurrencies. But I fail to find a consensus within economics which says this is a normative good or a normative bad. There is certainly consensus within some individual schools of economic thought; particularly within those lauded by crytocurrency advocates. But within the fuller spectrum of economics I do not find a consensus that it would be better for economies if the money creation process were algorithmic rather than federated. Or, as David Galbraith put it more succintly:&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Bitcoin: standards central; creation distributed; processing monopoly. Fiat: standards central; creation franchised; processing distributed&lt;/p&gt;&amp;mdash; David Galbraith (@daveg) &lt;a href=&#34;https://twitter.com/daveg/status/687949541082017792&#34;&gt;January 15, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The central point of this piece is basically to say this. Calm down bitcoin. It&amp;rsquo;s gonna be alright. No single banker I&amp;rsquo;ve met, and I&amp;rsquo;ve met and work with plenty, has ever said to me that they were in competition with bitcoin. Indeed, most find this idea laughable.&lt;/p&gt;

&lt;p&gt;They have much bigger, more immediate problems to solve. Problems which the raw blockchain and smart contract technology is better suited to help them with than any one application built on the technological core.&lt;/p&gt;

&lt;p&gt;And. Now. For some be happy music.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/UQ48Oj4ZNvA&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/jakerust/&#34; target=&#34;_blank&#34;&gt;(Photo credit: CC-BY: www.gotcredit.com )&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On 2016 Blockchain Clients</title>
      <link>http://localhost/2015/12/31/on-blockchain-clients-in-2016/</link>
      <pubDate>Thu, 31 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/12/31/on-blockchain-clients-in-2016/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/42988571@N08/8545407174/&#34; target=&#34;_blank&#34;&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/blockchain_clients_2016.jpg&amp;rsquo; | img }}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we reflect on what has been accomplished by the blockchain community in 2015 and look forward to 2016 I&amp;rsquo;m forced to reflect on where we are in blockchain-land.&lt;/p&gt;

&lt;p&gt;This post is a fairly technical post which will look at two critical aspects of blockchain client design moving forward. We will cover how Eris will be approaching an increase to the modularity of our blockchain client: eris:db, as well as how we approach permissioning which is essential for properly running anything but a public blockchain.&lt;/p&gt;

&lt;h2 id=&#34;increasing-modularity&#34;&gt;Increasing Modularity&lt;/h2&gt;

&lt;p&gt;One of the most important aspects of blockchain-ing which we have been pursuing for a long time at Eris is the idea of breaking down the monolithic tendencies of blockchains into a more modular format.&lt;/p&gt;

&lt;p&gt;In the Fall of 2014 Ethan and I were already telling Zach how we wanted to take a ninja sword to all of the pieces of the blockchain client.&lt;/p&gt;

&lt;p&gt;Why? Well, in general modularity is a good thing for software design. Even amongst unichain folks (meaning, those who singularly believe that one blockchain network will become the &amp;ldquo;internet of value&amp;rdquo; and become the only ledger the world needs) there is a realization that the clients operating the network need to be built to be very modular in their design. Amir Taaki was arguing this as far back as early 2014 IIRC. Others continue to argue for the increased modularity of blockchain clients.&lt;/p&gt;

&lt;p&gt;For those of us in the plurality of chains camp, the camp who feels that blockchains are more like databases than they are like TCP-IP and because of that do not think that the world will settle on one particular blockchain but rather that there will be millions of blockchains, for us modularity is even more important because each of these blockchains will be meant to do different things and will have very different network dynamics.&lt;/p&gt;

&lt;p&gt;Despite the differences in philosophies between the unichain folks and the plurality of chains folks as to the blockchain &lt;em&gt;networks&lt;/em&gt;, when it comes to blockchain &lt;em&gt;clients&lt;/em&gt; and modularity, this is something where we can, and should, all agree. This being blockchains, the most religious software camp I&amp;rsquo;ve ever seen, I&amp;rsquo;m not going to hold my breathe for consensus here. But I do feel that all of the community can benefit from it.&lt;/p&gt;

&lt;h3 id=&#34;blockchain-clients-now&#34;&gt;Blockchain Clients Now&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s look at a typical blockchain client as currently conceived from a functional point of view.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/blockchain_clients_2016_old_style.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;Almost every single blockchain client runs as a singular process which is usually RPC-ed into by its &amp;ldquo;clients&amp;rdquo; (meaning middleware or frontends which need to connect into the blockchain client itself). The single process typically will be responsible for managing a whole range of activities including what I call the &lt;strong&gt;big three&lt;/strong&gt;, namely:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Signing (meaning, transactions which come in via the RPC, and blocks mostly, but also other things depending on the blockchain client in question);&lt;/li&gt;
&lt;li&gt;Business logic (meaning, verifying signatures, running through the &amp;ldquo;features&amp;rdquo; portions of the blockchain client, or in a smart contract enabled blockchain, running through the &amp;ldquo;smart contract machine&amp;rdquo; or VM); and&lt;/li&gt;
&lt;li&gt;Consensus logic (namely coordinating with other blockchain clients within the blockchain network to ensure that the world state of data amongst all of the nodes is kept in sync, resolving forks according to a pre-programmed fork choice rule, and performing a few other functions necessary at the consensus level).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Blockchain clients are also responsible for maintaining the history of blocks locally as well as building up the &amp;ldquo;state&amp;rdquo; (namely, what the data &amp;ldquo;is&amp;rdquo;).&lt;/p&gt;

&lt;h3 id=&#34;where-we-see-blockchain-clients-going&#34;&gt;Where We See Blockchain Clients Going&lt;/h3&gt;

&lt;p&gt;I referenced above the &amp;ldquo;big three&amp;rdquo; because these are the three portions of a blockchain client which I think are candidates to move away from a core blockchain client platform. In other words, in 2016, what we at Eris are hoping to achieve is a blockchain client which looks more like this:&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/blockchain_clients_2016_new_style.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;What we will be doing in 2016 is working to move the &amp;ldquo;big three&amp;rdquo; into their own container instances.&lt;/p&gt;

&lt;h4 id=&#34;signing-container&#34;&gt;Signing Container&lt;/h4&gt;

&lt;p&gt;Work has already been well underway to move signing into a standalone signer. The advantages here are clear. In order to enable as wide a range of possible application configurations for which eris:db can support we need to think of signing as happening not within the blockchain client, but rather within a standalone signer. The standalone signer should be booted and available to the core node (or, as we are moving towards calling it, &amp;ldquo;the kernel&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;This opens up a great amount of flexibility because, for example, users can move their signers into HSM modules or in other highly secure zones of their data centers whereas the rest of the blockchain client need not operate in such a location.&lt;/p&gt;

&lt;p&gt;Moving signing out of process also opens up the playing field as we move into a stage of worrying about hardening cryptographic protocols against quantum computing. It means that blockchain designers such as eris, or the bitcoin core developers, or the ethereum core team (such that it currently is) can move away from having to reinvent cryptographic protocols (which is never a good idea, and to be clear very few currently do this) as well as necessarily determining which cryptographic protocols are used by the signing (as long as the VM container, dealt with below, knows how to verify signatures; and the consensus container, also dealt with below, knows as well).&lt;/p&gt;

&lt;p&gt;The added modularity here means that specialization in cryptographic protocols can be isolated and managed by those who understand the intricacies of such matters without having to impact those who are interested in understanding how application states work, or how consensus operates.&lt;/p&gt;

&lt;h4 id=&#34;consensus-container&#34;&gt;Consensus Container&lt;/h4&gt;

&lt;p&gt;Work has also been well underway for us to move consensus into its own container. This will allow us to build a blockchain client with &amp;ldquo;pluggable consensus&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;We aren&amp;rsquo;t the only ones moving in this direction. It is likely that, due to the complexity of Casper, that most of the ethereum clients will move to an out of process &amp;ldquo;consensus engine&amp;rdquo; where one authenticated Casper engine (as we understand it, to be built in Scala) is utilized out of process as a standalone container by ethereum clients. One could also think of the delegated witness project within the bitcoin community as moving in this direction, although it is a different system than what we&amp;rsquo;re talking about here.&lt;/p&gt;

&lt;p&gt;Moving consensus into its own, standalone engine, will allow eris:db to, for example, allow users to utilize a Casper consensus engine, a Tendermint consensus engine, or any other consensus engine which will fulfill the interfaces we put within eris:db. This is will give users a very powerful methodology for running different consensus engines when necessary to connect into different blockchain networks.&lt;/p&gt;

&lt;p&gt;Stemming from the Thelonious days (which was one of our very early efforts in the direction of separating out consensus) we have always been interested in opening up the space for consensus research to happen and moving consensus into its own engine which is utilized by the &amp;ldquo;blockchain kernel&amp;rdquo; will move us fully in that direction.&lt;/p&gt;

&lt;h4 id=&#34;virtual-machine-container&#34;&gt;Virtual Machine Container&lt;/h4&gt;

&lt;p&gt;We have not yet begun, but intend to move toward the final out of process containers of the &amp;ldquo;big three&amp;rdquo; moving the business logic of a particular blockchain network into its own container. This will allow for both &amp;ldquo;generalized&amp;rdquo; smart contract machines, such as an ethereum virtual machine or other metered virtual machines we are aware of, as well as more &amp;ldquo;packaged&amp;rdquo; solutions, such as blockchains which have hard coded &amp;ldquo;features&amp;rdquo; or require faster, native based logic mechanisms.&lt;/p&gt;

&lt;p&gt;Moving the VM into its own engine will not only open up the playing field significantly for a broad range of smart contract based solutions, but it will also lessen the reliance upon the vagaries of the smart contract programming languages which are currently still very immature because business logic will be able to be built in a wider variety of languages than only the current (quite limited) range of smart contract programming languages.&lt;/p&gt;

&lt;h3 id=&#34;blockchain-clients-reconsidered&#34;&gt;Blockchain Clients, Reconsidered&lt;/h3&gt;

&lt;p&gt;This modularity, taken together, will dramatically open up the space for specialization and innovation within the various modules without requiring drastic overhauling of a single blockchain client.&lt;/p&gt;

&lt;p&gt;What is the best metaphor for what we see blockchain clients becoming? We see blockchain clients themselves being akin to what in the linux world are called &amp;ldquo;distros&amp;rdquo;, or distributions. Distros are opinionated, but flexible, packaged mechanisms which allow users to leverage the linux kernel, along with a range of very low level primitives that are added together to formulate a cohesive operating system.&lt;/p&gt;

&lt;p&gt;Distribution owners work to ensure that all of the isolated packages work flawlessly as a collective. This is where we, as Eris, will be putting our efforts as we work to refactor eris:db over the coming months and thereafter.&lt;/p&gt;

&lt;p&gt;Who, then, will build the &amp;ldquo;kernel&amp;rdquo;? We hope, &lt;a href=&#34;http://www.linuxfoundation.org/news-media/announcements/2015/12/linux-foundation-unites-industry-leaders-advance-blockchain&#34; target=&#34;_blank&#34;&gt;these folks&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;permissioning-properly&#34;&gt;Permissioning Properly&lt;/h2&gt;

&lt;p&gt;Lots of movement has happened over 2015 around the idea of less than fully public blockchains. No matter what we call them, less than fully public blockchains require a permission module in order to operate properly.&lt;/p&gt;

&lt;p&gt;But where does one&amp;rsquo;s permission module reside (in a VPN? using some middleware? in the blockchain&amp;rsquo;s VM?) is a crucial question as more and more enterprises come online using permissioned blockchains.&lt;/p&gt;

&lt;h3 id=&#34;a-background-story&#34;&gt;A Background Story&lt;/h3&gt;

&lt;p&gt;Folks that know me, know that I used to be an infantry officer in the United States Marine Corps. During that time, I had the interesting &amp;ldquo;pleasure&amp;rdquo; of being present in the square in 2003 when this happened:&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/firdos.jpg&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;It was a very interesting time. An incredibly difficult time actually. While the few hours in the square when the statute was getting pulled down was a moment of communal celebration (at least for those in the square), the rest of Baghdad was an utter clusterf*ck. Prisoners had been released, old scores were being settled, banks were getting robbed, an absolute mess.&lt;/p&gt;

&lt;p&gt;The way that we dealt with this was by taking our zone and subdividing that zone into various levels. Within each subdivided area we had folks from our unit who were in charge of specific zones. They were out in the community operating with the people.&lt;/p&gt;

&lt;p&gt;As Marines, we had been constantly trained in how to deal with very fluid situations. At the time we called this the &amp;ldquo;three block war&amp;rdquo; where in a single patrol you can go from: (block 1) humanitarian efforts to (block 2) peacekeeping efforts to (block 3) combat efforts all in a very short amount of space and time. We were also trained to be ruthless when we need to take action of the combat variety, but otherwise to have empathy for what was happening around us.&lt;/p&gt;

&lt;p&gt;Taken together this gives Marines a particular reputation within the military. When the situation is volatile, Marines are what you want. But we don&amp;rsquo;t have the formalisms and sheer numbers that were required to &amp;ldquo;police Baghdad&amp;rdquo;. So the decision was made that we would not stay in Baghdad and would be replaced by units from the US Army.&lt;/p&gt;

&lt;p&gt;When we were handing over our areas to the Army unit that was replacing us, friends and I gave our replacements a &amp;ldquo;tour&amp;rdquo; of the zone. Pointing out houses we had been watching, introducing elders and other power brokers we had met, etc. Generally giving them the lay of the land. But the replacements didn&amp;rsquo;t want meet any of these people or to see any of the suspected areas. They simply wanted to know where was the &amp;ldquo;base&amp;rdquo;; where was the safe zones. These questions were antithetical to us in the Marines who are trained to operated not from &amp;ldquo;safe zones&amp;rdquo; but wherever we currently were.&lt;/p&gt;

&lt;p&gt;Our training had given us the confidence to integrate with the community. We knew that when push came to shove if we needed to fight we could. But we also knew that what we were there to do was much more complicated than simply fighting and what was essentially required was that we be as integrated into the community as possible.&lt;/p&gt;

&lt;p&gt;We left. Things went south (for a whole host of reasons I&amp;rsquo;ll leave to historians).&lt;/p&gt;

&lt;p&gt;Fast forward to 2008. I was visiting Aspen where I had lived for a while between the Marines and going to law school and I watched a film with friends. It was a hippy film where a musician had gone to visit Baghdad at the height of when things were bad (2006-2007 was the visit IIRC). One scene in particular stood out to me. The musician asked his cab driver when things had &amp;ldquo;gotten bad&amp;rdquo; in Baghdad. His answer will stick with me until the day I die:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Well, when the Marines were here things were actually OK. They were integrated into the community, they were not scared of us, they treated us like, well, human beings. But when they were replaced by the Army everything changed. Suddenly the Americans became scared, they weren&amp;rsquo;t integrated into the community, and they treated us all like enemies.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What the hell does this have to do with blockchains? I&amp;rsquo;m getting to that just now.&lt;/p&gt;

&lt;h3 id=&#34;permissioning-blockchain-clients&#34;&gt;Permissioning Blockchain Clients&lt;/h3&gt;

&lt;p&gt;When we put an unpermissionable blockchain client behind a VPN we &lt;em&gt;can&lt;/em&gt; achieve &lt;em&gt;some&lt;/em&gt; level of permissionability. The problem is that when we run blockchains in this manner, we&amp;rsquo;re really forced to &amp;ldquo;find the base&amp;rdquo;. This is because when you take a blockchain client which does not have a permission module built into the client and you try to make a permissioned blockchain network with it then you are forced to rely upon the &amp;ldquo;base&amp;rdquo; of the VPN. The &amp;ldquo;safe zone&amp;rdquo; if you will.&lt;/p&gt;

&lt;p&gt;There is an oft cited critique of permissioned blockchain networks that they are less secure that public blockchains due to &lt;a href=&#34;https://db.erisindustries.com/blockchain%20design/2015/09/26/on-permissioned-blockchains/index.html#securing-permissioned-blockchains&#34; target=&#34;_blank&#34;&gt;their lower hashing power&lt;/a&gt;. This critique holds &lt;strong&gt;only&lt;/strong&gt; under the following scenario: where you have a blockchain client that does not have a permission module, is POW, and a significant amount of hashing power is able to get behind the VPN. Outside of that scenario, the critique as an attack says more about the knowledge level of the attacker than actually communicates something important. If an enterprise has taken a POW based blockchain without a permission module and properly runs it behind a rock solid VPN then the critique is misplaced.&lt;/p&gt;

&lt;p&gt;Yet, and here is the critical point from our point of view at Eris, that enterprise who had taken a POW based blockchain client without a permission module and ran it behind a VPN, is making its blockchain clients operate like the Army officers in the above story. These blockchain clients are susceptible to attack if they are not &amp;ldquo;inside their base&amp;rdquo;. As such, they lose a good amount of their utility.&lt;/p&gt;

&lt;h3 id=&#34;a-vpn-v-a-permission-module&#34;&gt;A VPN v. A Permission Module&lt;/h3&gt;

&lt;p&gt;eris:db is a blockchain client which has a built in permission layer, still one of the only such blockchain clients currently in open source. We have designed eris:db to &amp;ldquo;go into the wild&amp;rdquo; rather than to &amp;ldquo;go to its base&amp;rdquo;. Because of the rock solid, granular, key-driven, capabilities-based permission layer built into eris:db, these blockchains are meant to easily operate outside a VPN without having to worry about mining attacks or other attacks which would mess up the operational consensus.&lt;/p&gt;

&lt;p&gt;This is an incredibly important difference because one of the main benefits of blockchains (in our view) is to provide &lt;strong&gt;increased verifiability over business processes that cut across stakeholders&lt;/strong&gt; and in order to achieve that VPNs likely will get in our way. Perhaps not at first during the experimentation phase, but eventually they will certainly get in our way.&lt;/p&gt;

&lt;p&gt;With an eris:db chain we use key-driven permissioning which means that the same key you use to sign whatever interactions you are sending to the blockchain network also determines your level of permissions (assuming the permission layer is active for a given blockchain network; it can be turned off when it gets in the way). This increases dramatically the overall, systemic verifiability vis a vis having two analog systems which need to operate in parallel (the key-based blockchain network and the &lt;em&gt;usually&lt;/em&gt; password-based VPN).&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s say an organization begins with their blockchain network behind a VPN but uses an unpermissioned blockchain. Over time, as the contracts are stable and as the enterprise wants to increase the access to the other stakeholders involved in the process, the organization decides that it wants to open up the blockchain network to a wide variety of other participants with various levels of permissions. In order to do that the VPN would become so riddled with exceptions and access points as to no longer really be doing its job. And that VPN overload would be simply because the blockchain client chosen did not have a proper permission layer built in that would allow the blockchain client to &amp;ldquo;go out into the population&amp;rdquo; like my fellow Marines had done in Baghdad.&lt;/p&gt;

&lt;p&gt;On the other hand, take the same exact system and change out the blockchain client to one which has a permission layer and when the organization seeks to open up the blockchain network to a wide variety of participants it can simply not run the network behind the VPN any more and send simple, verifiable, and transparent permission altering transactions to the blockchain which will open up various capabilities of the chain.&lt;/p&gt;

&lt;p&gt;What do you see happening in blockchains going forward? Let us know in the comments.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/42988571@N08/&#34; target=&#34;_blank&#34;&gt;(Photo credit: CC-BY: David Luders @ Flickr )&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On Licensing: Why Eris is GPLv3</title>
      <link>http://localhost/2015/08/30/on-licensing/</link>
      <pubDate>Sun, 30 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/08/30/on-licensing/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/adulau/3011878917/&#34; target=&#34;_blank&#34;&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/licensing.jpg&amp;rsquo; | img }}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/adulau/&#34; target=&#34;_blank&#34;&gt;(Photo credit: CC-BY-SA: Alexandre Dulaunoy @ Flickr )&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Over the course of this weekend Preston and I have spent most of our time reviewing our licensing posture. As we are preparing for future growth of not only our company, but indeed the permissioned smart contract network space generally, it was important to us to make sure that we had released all of our effort using a proper licensing structure.&lt;/p&gt;

&lt;p&gt;Getting licensing right, for an open source company, is a necessary (if wholly insufficient) component to success of that company. There are a number of considerations to take into account when licensing open source software. Every project is unique, and you should not read this post as advocacy for any particular licensing framework (although we have a soft spot for the venerable GPL licence series), so every project should take into considerations all of its context, get a lawyer, and figure out what is sensible for that project. Basically, this is not legal advice and your mileage may vary depending on your project&amp;rsquo;s goals.&lt;/p&gt;

&lt;h2 id=&#34;step-1-set-the-goals&#34;&gt;Step 1: Set The Goals&lt;/h2&gt;

&lt;p&gt;And &lt;code&gt;goals&lt;/code&gt; we think are the right place to start when thinking through licensing of open source software. At Eris our goals are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;make smart contract technology usable for a broad range of developers;&lt;/li&gt;
&lt;li&gt;work within an ecosystem that makes this technology usable for larger, regulated enterprises;&lt;/li&gt;
&lt;li&gt;be as open as we can; and&lt;/li&gt;
&lt;li&gt;support tooling and infrastructure which is built as free and open software.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With our goals clearly defined then we moved along to thinking through what we build and the various tensions which bely various open source licences.&lt;/p&gt;

&lt;h2 id=&#34;step-2-understand-the-licences&#34;&gt;Step 2: Understand The Licences&lt;/h2&gt;

&lt;p&gt;There are five &amp;ldquo;major&amp;rdquo; licences for open source software:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;MIT&lt;/li&gt;
&lt;li&gt;Apache&lt;/li&gt;
&lt;li&gt;LGPL&lt;/li&gt;
&lt;li&gt;GPL&lt;/li&gt;
&lt;li&gt;AGPL&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;each of which has its own unique characteristics, requirements, and limitations. There have been arguments for, quite literally, decades between these licences; much of that debate (for me) centers around the idea of what is the best way to support the development and maintenance of software which is then given away. For two (now historical) views on this debate please read &lt;a href=&#34;http://www.gnu.org/philosophy/enforcing-gpl.en.html&#34; target=&#34;_blank&#34;&gt;this GPL focused post&lt;/a&gt; and &lt;a href=&#34;http://blog.p2pfoundation.net/why-apache-defeated-the-gpl-license-developer-freedom-vs-user-freedom/2013/01/21&#34; target=&#34;_blank&#34;&gt;this Apache focused post&lt;/a&gt;. Both of those pieces are an excellent read.&lt;/p&gt;

&lt;p&gt;The difference between these licences usually boils down to one question:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;What happens with changes I make to the software?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;m greatly summarizing here but the answers to these questions roughly boil down to the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. MIT -- who gives a shit
2. Apache -- you can make proprietary changes, sell them, and keep them closed
3. LGPL -- you can make proprietary changes and (sometimes) keep them closed
4. GPL -- you can make proprietary changes and must keep them open if you &amp;quot;distribute&amp;quot; the software
5. APLG -- mostly the same as GPL but if you&#39;re running a web service which uses the licensed software you are &amp;quot;distributing&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is one more subtle and important question which appears during licensing discussions, especially in an increasingly open source world where software is built on software is built on software all of which may have various licensing components. This is generally called &amp;ldquo;embedding&amp;rdquo; software. The basic question folks must understand is this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;If I use other software to build my software does that affect my ability to license the software?
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;*GPL&lt;/code&gt; series is known to have &amp;ldquo;infection&amp;rdquo; properties. This means if your program &amp;ldquo;embeds&amp;rdquo; software which has one of the &lt;code&gt;*GPL&lt;/code&gt; licenses then the &amp;ldquo;whole damn thing&amp;rdquo; is &lt;code&gt;*GPL&lt;/code&gt; licensed.&lt;/p&gt;

&lt;p&gt;So to summarize, if your software &amp;ldquo;embeds&amp;rdquo; (also known as &amp;ldquo;imports&amp;rdquo; or &amp;ldquo;links&amp;rdquo; in various programming languages) software that is licensed using one of the these licences this will &lt;em&gt;usually&lt;/em&gt; be the result (again, I am generalizing here and this is not legal advice; mileage may vary)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. MIT -- who gives a shit
2. Apache -- no infection, end result can be any licence
3. LGPL -- LGPL infects; all importing or embedding software becomes LGPL
4. GPL -- GPL infects; all importing or embedding software becomes GPL
5. AGPL -- AGPL infects; all importing or embedding software becomes AGPL
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Embedding used to be an extremely complicated concept with numerous challenges across programming languages. Modern microservices architecture simplifies this to a certain degree simply because there is less need to &amp;ldquo;embed&amp;rdquo; software within other software.&lt;/p&gt;

&lt;h2 id=&#34;step-3-review-what-other-similar-projects-have-done&#34;&gt;Step 3: Review What Other Similar Projects Have Done&lt;/h2&gt;

&lt;p&gt;We are in the smart contracts and blockchains business. In our view the closest analogies to the software we&amp;rsquo;re building can be found in the area of databases. So let&amp;rsquo;s look at the licensing structures for various databases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.postgresql.org/about/licence/&#34; target=&#34;_blank&#34;&gt;Postgresql&lt;/a&gt; &amp;ndash; Proprietary license; similar to MIT&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mysql.com/about/legal/&#34; target=&#34;_blank&#34;&gt;Mysql&lt;/a&gt; &amp;ndash; Commercial licensed with a &lt;a href=&#34;http://www.mysql.com/about/legal/licensing/foss-exception/&#34; target=&#34;_blank&#34;&gt;FOSS exception&lt;/a&gt; to that license that is compatible with a variety of other open source licenses but leans GPL. Mysql has attempted to confine the &amp;ldquo;infection&amp;rdquo; of its code is how I read the FOSS exception. A throwback to its older nature.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mongodb.org/about/licensing/&#34; target=&#34;_blank&#34;&gt;MongoDB&lt;/a&gt; &amp;ndash; AGPL license with commercial exception for not open sourced changes.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.microsoft.com/en-us/Licensing/product-licensing/sql-server-2014.aspx#tab=2&#34; target=&#34;_blank&#34;&gt;Microsoft SQL Server&lt;/a&gt; &amp;ndash; Proprietary, commercial only licence&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.oracle.com/database/121/DBLIC/editions.htm#DBLIC116&#34; target=&#34;_blank&#34;&gt;Oracle&lt;/a&gt; &amp;ndash; proprietary licence&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But there are two major components to consider when thinking about a database backend. There is the database itself, surveyed above, but there are also the database drivers and connectors which are used by other programs to connect to the database. Generally, if a programming language wants to be able to have programmatic access to a database it must have a driver available, native to that programming language, which can be used by other programs to talk to the database. Most of the drivers for databases are released with fewer restrictions because it is generally more accepted that simply using the drivers in a validly proprietary piece of software should not infect the whole piece.&lt;/p&gt;

&lt;p&gt;MongoDB&amp;rsquo;s licensing (which, personally, I think is quite elegant) makes the explicit assumption that its core database is AGPL while the drivers for that database are licensed Apache (presumably, to limit the infection of other, validly proprietary software, which needs to talk to the database). This strikes an elegant balance because rarely, if ever, should a company using MongoDB have to make changes to the MongoDB binary itself. Modern database software does not need as many changes at the core database level as older database technology does for most usage.&lt;/p&gt;

&lt;h2 id=&#34;step-4-decide-what-works-for-your-project&#34;&gt;Step 4: Decide What Works For Your Project&lt;/h2&gt;

&lt;p&gt;Given our approach to blockchaining is not very different that MongoDB&amp;rsquo;s we have taken a similar approach to licensing. For example our eris:db product (a robust server around a permissioned smart contract machine) is licensed GPL3 (more on this in a minute) while our client libraries (which are made to be importable by middleware and browser level javascript suites) are (currently) licenced LGPL. The client libraries &lt;em&gt;may&lt;/em&gt; move to Apache in order to enable non-disclosure of changes to the client libraries.&lt;/p&gt;

&lt;p&gt;The question in all software that the licensor must ask themselves is fundamentally, what needs to be changed in this cohesive software project? From our perspective, we hope very little. Our whole goal with the eris stack is to make these systems work in a variety of contexts with very little modification. We, mostly, take a &lt;code&gt;configuration over modification&lt;/code&gt; approach to our blockchain and tooling work.&lt;/p&gt;

&lt;p&gt;Those coming from a world where forking BTC is the start of any blockchain client may not understand this, but for us we have moved so much of the functionality of &amp;ldquo;what you want to do with the blockchain client&amp;rdquo; &lt;strong&gt;out of the client itself&lt;/strong&gt; and into different layers, for example the EVM smart contract interpreter, or the genesis permissions options available on the Tendermint blockchain via &lt;code&gt;snatives&lt;/code&gt; contracts.&lt;/p&gt;

&lt;p&gt;Given that very little functionality need to be changed to the eris:db itself, and if those changes were made, the community should be able to take the benefit from it; given that the eris:db binary imports a variety of base libraries with varied licensing; given that we want to make this server be changeable and used for web services without triggering the distribution requirement (it is, fundamentally, a server afterall); given that we default to as open as possible, we have settled on GPLv3 for the eris:db container.&lt;/p&gt;

&lt;p&gt;For &lt;code&gt;eris&lt;/code&gt; itself we have arrived at the same conclusion albeit with different considerations. Eris is, fundamentally, a convenience wrapper around Docker (&lt;a href=&#34;https://github.com/docker/docker/blob/master/LICENSE&#34; target=&#34;_blank&#34;&gt;as of this writing, licenced Apache&lt;/a&gt;) optimized for blockchain and smart contract applications, we view it as &amp;ldquo;infrastructure tooling&amp;rdquo;. Or, the confluence of two lines of software development we feel should be licenced as openly as possible. Tooling is a bit of a challenge with trying to keep your software open because of the infection principles of GPL.&lt;/p&gt;

&lt;p&gt;Before proceeding one must consider some of the history of free software thinking; which means we have to start with someone like &lt;a href=&#34;https://en.wikipedia.org/wiki/Richard_Stallman&#34; target=&#34;_blank&#34;&gt;Stallman&lt;/a&gt;. For someone who thinks like Stallman licensing would probably break down like this: &lt;code&gt;MIT &amp;lt; Apache &amp;lt; LGPL &amp;lt; GPL &amp;lt; AGPL&lt;/code&gt;. However, many modern open source proponents would reverse those arrows to make the sequencing look like this: &lt;code&gt;MIT &amp;gt; Apache &amp;gt; LGPL &amp;gt; GPL &amp;gt; AGPL&lt;/code&gt;. The difference really boils down to whether you want to &lt;strong&gt;retain the right to enforce that changes to your software be disclosed&lt;/strong&gt;. As explained in the p2p blog post linked to above, for many developers, the second interpretation is better (admittedly, MIT is sometimes left out of that array because of its lack of patent protections) because there is less of a consideration as to the infection and embedding questions. As I said before some of the consideration is technical and, modern, microservice architecture hedges some of the embedding concerns which would be raised by the above as it has generally been settled that talking to a program over an API is &lt;strong&gt;not&lt;/strong&gt; embedding.&lt;/p&gt;

&lt;p&gt;For these reasons, at Eris we would lean toward the Stallman approach with the carve out that we think, for the purposes of Eris&amp;rsquo; products, AGPL goes too far.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;We proudly default our products to GPL licences because, for us, it mostly strikes the correct balance of openness.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An Ecosystems Approach to Blockchaining</title>
      <link>http://localhost/2015/08/25/on-blockchain-ecosystems/</link>
      <pubDate>Tue, 25 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/08/25/on-blockchain-ecosystems/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/pierrepocs/5480153734/&#34; target=&#34;_blank&#34;&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/ecosystems.jpg&amp;rsquo; | img }}&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;

&lt;p&gt;One of the reasons I knew that Anthemis would be a good institutional partner for building Eris is they believe deeply in the idea that business is best when it is conducted using an ecosystems approach. After many, many years working with small businesses, diaspora groups, small business investors, and regulators in Somaliland, I had come to appreciate what this means, because this is how business in Africa works. And indeed, it is how business just &lt;em&gt;should&lt;/em&gt; work in my opinion.&lt;/p&gt;

&lt;p&gt;Relatedly, the other day, I was talking to an acquaintance about something and I said that I don&amp;rsquo;t like the tendency I see within the blockchain community to have labels as reductive as &amp;ldquo;competitor&amp;rdquo; v. &amp;ldquo;collaborator&amp;rdquo;. I get of course that the verbs are applicable to any one interaction amongst folks within the ecosystem, but to reduce the complex relationships necessary to be developed if this technology is going to become more widely accepted (&lt;a href=&#34;https://twitter.com/compleatang/status/635568543501840384&#34; target=&#34;_blank&#34;&gt;a goal we&amp;rsquo;ve always been explicitly trying to achieve&lt;/a&gt;) into this binary question is unhelpful in the opinion of this correspondent. The reality is that talent is too slim, the technology is too new, and a few other relavant reasons for any single actor in the blockchain community to fracture relationships between potential allies without a cost both to the single actor as well as the ecosystem.&lt;/p&gt;

&lt;p&gt;That said, the rest of this post is gonna talk about tech.&lt;/p&gt;

&lt;h1 id=&#34;tenet-1-of-an-ecosystems-approach-to-blockchaining&#34;&gt;Tenet 1 of an Ecosystems Approach to Blockchaining&lt;/h1&gt;

&lt;h2 id=&#34;modularize-all-the-things-but-mostly-the-runtimes&#34;&gt;Modularize all the Things (but mostly the runtimes)&lt;/h2&gt;

&lt;p&gt;The promise that smart contract backed systems have is they have deterministic runtimes. There&amp;rsquo;s a lot of interesting things this can do. Particularly when you start thinking about how to better the various &amp;ldquo;engines&amp;rdquo; on which your business&amp;rsquo;s process and data management solutions rely.&lt;/p&gt;

&lt;p&gt;The promise that docker backed systems have is they have deterministic runtimes. There&amp;rsquo;s a lot of interesting things this can do. Particularly when you start thinking about how to better the infrastructure on which your business&amp;rsquo;s data and process management solutions rely.&lt;/p&gt;

&lt;p&gt;The reason we have built &lt;code&gt;eris&lt;/code&gt; the way that we have is to support organizations who are interested in a variety of distributed technology tools. Not only those of the blockchains world, but also those from the &amp;ldquo;cloudy&amp;rdquo; world. Because these two groups have a lot to learn from each other.&lt;/p&gt;

&lt;p&gt;No matter whether your application needs smart contracts or just docker based services, it needs modular, reliable runtimes. To see more about what I mean see our &lt;a href=&#34;https://docs.erisindustries.com&#34; target=&#34;_blank&#34;&gt;getting started documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;tenet-2-of-an-ecosystems-approach-to-blockchaining&#34;&gt;Tenet 2 of an Ecosystems Approach to Blockchaining&lt;/h1&gt;

&lt;h2 id=&#34;configs-are-a-challenge-but-a-doable-challenge&#34;&gt;Configs Are a Challenge, but a Doable Challenge&lt;/h2&gt;

&lt;p&gt;When running a distributed application, one needs an ability to give the runtimes a configuration when they &amp;ldquo;boot&amp;rdquo;. This configuration includes things like, &amp;ldquo;who am i?&amp;rdquo;, &amp;ldquo;where am i?&amp;rdquo;, &amp;ldquo;who am i supposed to talk to?&amp;rdquo;, &amp;ldquo;what private key am i supposed to sign these ssl requests with&amp;rdquo;, etc.&lt;/p&gt;

&lt;p&gt;The way that docker images are generally created gives us an ability to boot up runtimes which answer all of those questions on behalf of users of the eris tooling. That could be an eth chain booting up to talk to the mainnet or to talk to a private net, that could be ipfs doing its thing, that could be a bitcoin node (&lt;a href=&#34;https://twitter.com/eris_ltd/status/632853195673497600&#34; target=&#34;_blank&#34;&gt;or a bitcoinXT if you prefer&lt;/a&gt;), whatever you, your developers, and your users would need to &amp;ldquo;get the things turned on&amp;rdquo; you should be able to do with Eris (given the docker containers were built correctly).&lt;/p&gt;

&lt;p&gt;Wanna share your private config? Encrypt the file to a keybase contact&amp;rsquo;s public key (or oneName, or however you share pgp keys) and:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;eris files put ENCRYPTED_CONFIG.toml.asc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;ll give you a hash, send it to them over slack (or IRC) and the collaborator does&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;eris services import thing_to_boot HASH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We are also working on a solution we call &lt;code&gt;etcb&lt;/code&gt; (like CoreOS&amp;rsquo;s &lt;code&gt;etcd&lt;/code&gt; but &lt;code&gt;b&lt;/code&gt; &amp;hellip; because its on a blockchain) which will enable better group sharing of configuration files.&lt;/p&gt;

&lt;p&gt;We don&amp;rsquo;t really &amp;ldquo;boot&amp;rdquo; smart contracts themselves and so they do not really need a configuration so to say. But we have built &lt;a href=&#34;https://docs.erisindustries.com/documentation/eris-cli/latest/eris_actions/&#34; target=&#34;_blank&#34;&gt;&lt;code&gt;eris actions&lt;/code&gt;&lt;/a&gt; which allows for a prebuilding of complex transaction sequences which would be needed to interact with and test various smart contract suites.&lt;/p&gt;

&lt;h1 id=&#34;tenet-3-of-an-ecosystems-approach-to-blockchaining&#34;&gt;Tenet 3 of an Ecosystems Approach to Blockchaining&lt;/h1&gt;

&lt;h2 id=&#34;the-pipes-matter&#34;&gt;The Pipes Matter&lt;/h2&gt;

&lt;p&gt;For distributed applications to operate correctly, all the things have to know how to talk to the things they&amp;rsquo;re supposed to talk to. This is a non-trivial challenge when you are trying to build applications which will run the same on laptops, cloud instances, and corporate environments.&lt;/p&gt;

&lt;p&gt;Luckily using modern cloud computing techniques provided by Docker, piping things together with Eris is ultra simple. When you build a service definition file, simply add:&lt;/p&gt;
[services]
dependencies = [ &#34;thing_i_want_on_and_to_talk_to&#34; ]

&lt;p&gt;then in the code, or in the configuration or wherever the bit is that tells the thing who to talk to you just add:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;http://thing_i_want_on_and_to_talk_to&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Because of the way that docker cleverly manipulates /etc/hosts it makes it very easy when the service which wanted the thing on and to talk to gets booted it will be able to rely that the other thing is on and is ready to be talked.&lt;/p&gt;

&lt;h1 id=&#34;tenet-4-of-an-ecosystems-approach-to-blockchaining&#34;&gt;Tenet 4 of an Ecosystems Approach to Blockchaining&lt;/h1&gt;

&lt;h2 id=&#34;what-blockchain-the-contracts-run-on-is-an-ops-consideration&#34;&gt;What Blockchain the contracts run on is an Ops Consideration&lt;/h2&gt;

&lt;p&gt;The bottom line is that the EVM is the best design (so far) for a distributed logic gateway processor. See etherparty, eris, ethereum, tendermint, (at a minimum). The only difference between these being the consensus layer on which the world state of the network resides.&lt;/p&gt;

&lt;p&gt;This is exciting for smart contract developers, because they shouldn&amp;rsquo;t have to give a shit what the world state harmonization layer for the production application is. All they should be caring about is whether the suite of contracts works and testing those against throwaway chains. Over time, as that smart contract developer is ready to open up to more collaboration he may set up a permissioned smart contract network to control development and access to alpha and beta level subscribers and eventually he may go directly to the eth chain (cause not doing proper prototyping is a bad idea).&lt;/p&gt;

&lt;p&gt;Or not.&lt;/p&gt;

&lt;p&gt;Perhaps that developer finds themself in a corporate context. Perhaps they will start with some throwaway chains to test their contracts and then that will go into a tightly controlled permissioned network that bank level security built around it.&lt;/p&gt;

&lt;p&gt;Or not.&lt;/p&gt;

&lt;p&gt;Perhaps that developer is that guy who just flings crappy contracts onto the eth main chain, posts on reddit, and realizes they had a fatal flaw in their contract.&lt;/p&gt;

&lt;p&gt;But either way, the eventual chain on which the production application is running is an operational consideration, not a developer concern. This is exciting because it lowers the barrier to entry and enables specialization within the blockchain and smart contract network community.&lt;/p&gt;

&lt;h2 id=&#34;postscript&#34;&gt;Postscript&lt;/h2&gt;

&lt;p&gt;It is these four tenets which we think will enable to a vibrant ecosystem which will separate out the power structures between those at the infrastructure layer (a blockchain/smart contract network protocol, or a distributed file system, etc.) and those at the platform layer (the things that run the things you wanna run) and those at the application layer to allow collaboration where necessary and competition where necessary.&lt;/p&gt;

&lt;p&gt;Happy Contract Writing!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How I (currently) Explain The State of Blockchains To Executives and Researchers</title>
      <link>http://localhost/2015/08/10/how-i-current-explain-blockchains/</link>
      <pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/08/10/how-i-current-explain-blockchains/</guid>
      <description>

&lt;p&gt;Seems everyone these days is getting into the game of providing frameworks for thinking about blockchains and trying to convince others that their definitions are the correct definitions. Into that marketplace of metaphors, I provide this entry.&lt;/p&gt;

&lt;p&gt;When I look at the development of the sector generally, what I see is roughly two &amp;ldquo;types&amp;rdquo; of blockchains and within each of those types, two &amp;ldquo;flavours&amp;rdquo; of blockchains. These types and flavours can be graphically depicted using two dimensions.&lt;/p&gt;

&lt;p&gt;On the X axis of the diagram we can formulate a spectrum of permission-able-ness. These permissions are usually capabilities based permissions, meaning the permission is to interact with a capability of what the blockchain can do. Whether a blockchain design is capable of being put into permissioned mode or not is an important operational consideration for application developers (whether those are startups or enterprises). That permission layer may provide an advantage in censorship resistance (if it is absent) or in compliance risk mitigation (if it is present).&lt;/p&gt;

&lt;p&gt;On the Y axis of the diagram we can formulate a spectrum of optimizations. These optimizations are roughly binary at this point, although we fully expect that it will be more of a spectrum that will develop over time. On one side we have transactional optimized blockchains. These are the chain designs which have been developed to support digital cash and are now being permissioned and built to provide clearing and settlement solutions. On the other side we have logic optimized blockchains. These blockchains have been optimized to provide an arbitrary framework for running small scripts which are saved onto the blockchain (which we call &amp;ldquo;smart contracts&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;In total, my mental diagram looks like this:&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/blockchain-quadrant.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;While the above may not perfectly capture all of the blockchains in existence, I think it does a fairly good job of providing a framework for placing most of the space into some easier to consume boxes.&lt;/p&gt;

&lt;h2 id=&#34;the-optimization-spectrum&#34;&gt;The Optimization Spectrum&lt;/h2&gt;

&lt;p&gt;On the lower half of the quadrant we have blockchains which give application developers a clear and efficient way to verifiably track title transfers in a distributed environment. Whether these blockchains are permissioned or unpermissioned, they are a good fit for application developers seeking to build transfer mechanisms, clearing and settlement, and provenance applications. In other words, they&amp;rsquo;re really interesting property registers. These blockchain designs &amp;ndash; to some extent or another depending on the blockchain in question &amp;ndash; do provide some limited logic capabilities (bitcoin, famously, has its multi-signature capacity which operates in a similar area to logic). However, they really have been optimized to track movement of title over &amp;ldquo;property&amp;rdquo; from one node on the network to another.&lt;/p&gt;

&lt;p&gt;On the upper half of the quadrant we have blockchains which give application developers a clear and efficient way to verifiably track business and governance process logic in a distributed environment. Whether these blockchains are permissioned or unpermissioned, they are a good fit for application developers seeking to build complicated business process mechanisms. In other words, they&amp;rsquo;re really interesting process auditors. Similarly to transaction optimized blockchain designs, they have capabilities of supporting verifiable title transfers, but they have really been optimized to run arbitrary business logic.&lt;/p&gt;

&lt;h2 id=&#34;the-permissioned-spectrum&#34;&gt;The Permissioned Spectrum&lt;/h2&gt;

&lt;p&gt;On the left half of the quandrant we have unpermissioned blockchains. These blockchains lack an access control layer and as such handle anti-spam and consensus via purely economic mechanisms. We may not like to have to pay a bank a fee to update our address in their database, but if our bank operates on a public blockchain that&amp;rsquo;s basically what we&amp;rsquo;d have to do in order to overcome the necessary anti-spam protections (and other protections) which have been put in place to protect these unpermissioned blockchains. These blockchains are the best solution for censorship resistance. If someone needs data to exist forever in a rock solid vault of math and environmental degradation, then public blockchains are the place for that data. Public blockchains also have public governance mechanisms, as we are finding out with the blockchain debate. Whether the increased uncertainty which is the current state of the public blockchain governance oligarchy is a good or a bad thing remains to be seen. Lastly, public blockchains have been designed to provide the backbone for a variety of applications. That means that they were probably not well suited for any one type of application. Depending on what application one is seeking to build this may be a benefit or a detriment.&lt;/p&gt;

&lt;p&gt;On the right half of the quandrant we have blockchains which are capable of being put into a permissioned mode. Generally speaking, permissions can be made fully public, or use whitelisting to control who can validate batches of transactions, who can add functionality to the blockchain in the form of smart contracts, and who can transact with the chain. These chains are not susceptible to external attack by unknown actors because the clients running the chain will reject blocks from not-whitelisted nodes (if the client is running in &amp;ldquo;permissioned&amp;rdquo; mode for a particular blockchain in question). These chains also may have slight performance advantages over public blockchains because they are only dealing with the functionality required for that chain rather than all the functionality for all of the people for all of the time. While permissioned chains have some upsides, they also have some downsides of course. The downsides include a reduction in censorship resistance, and an increase in responsibility for application developers (who now have to also have &lt;em&gt;some&lt;/em&gt; operational responsibilities).&lt;/p&gt;

&lt;p&gt;Hope that helps your own mental framing of the state of blockchain technology.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Casey Goes to Switzerland to Talk Eris</title>
      <link>http://localhost/2015/05/27/casey-in-switzerland/</link>
      <pubDate>Wed, 27 May 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/05/27/casey-in-switzerland/</guid>
      <description>&lt;p&gt;Casey was recently in Switzerland to give two talks. The production quality of these videos is not great (and I&amp;rsquo;m to blame). My phone recorder needed a paid upgrade to save more than three minutes of an .ogg file &amp;ndash; which I only realized after the first talk. We will be working on adding in some additional content to help understand what was happening on the slides and whiteboard.&lt;/p&gt;

&lt;p&gt;While both videos are posted here, most said that the second (the technical side) was much more helpful than the first (the political and social side which underpins the Eris development and design philosophy).&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;div class=&#34;video-wrap&#34;&gt;
    &lt;iframe src=&#34;//www.youtube.com/embed/z5iTNP3W9Kg?rel=0;modestbranding=1;autohide=1;showinfo=0;controls=1;color=white;theme=dark;&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://whatis.eris.industries&#34; target=&#34;_blank&#34;&gt;The slides for this video are available here&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;video-wrap&#34;&gt;
    &lt;iframe src=&#34;//www.youtube.com/embed/XB0pHaghPIg?rel=0;modestbranding=1;autohide=1;showinfo=0;controls=1;color=white;theme=dark;&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://socscience.eris.industries&#34; target=&#34;_blank&#34;&gt;The slides for this video are available here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/eris-ltd/2gather&#34; target=&#34;_blank&#34;&gt;The 2gather video sharing DApp used in the demo is available here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ethan Lectures At Blockchain U: Eris, Ethereum, and Tendermint</title>
      <link>http://localhost/2015/05/12/ethan-at-blockchain-u/</link>
      <pubDate>Tue, 12 May 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/05/12/ethan-at-blockchain-u/</guid>
      <description>&lt;p&gt;Ethan was recently at BlockchainU to give two lectures. Enjoy!&lt;/p&gt;

&lt;div class=&#34;video-wrap&#34;&gt;
    &lt;iframe src=&#34;//www.youtube.com/embed/6nRQhkja1do?rel=0;modestbranding=1;autohide=1;showinfo=0;controls=1;color=white;theme=dark;&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;div class=&#34;video-wrap&#34;&gt;
    &lt;iframe src=&#34;//www.youtube.com/embed/8KCCg67-2OY?rel=0;modestbranding=1;autohide=1;showinfo=0;controls=1;color=white;theme=dark;&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>On Blockchains</title>
      <link>http://localhost/2015/04/30/on-blockchains/</link>
      <pubDate>Thu, 30 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/04/30/on-blockchains/</guid>
      <description>

&lt;p&gt;Much digital ink has been spilled over the past couple weeks concerning the relevance, necessity, use cases, and definition of that most remarkable piece of technology: the blockchain. Much of it was perhaps provoked by the &lt;a href=&#34;https://twitter.com/prestonjbyrne/&#34; target=&#34;_blank&#34;&gt;cuddly marmoteering of our very own Marmot Byrne&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To be honest, I think we could all benefit from a little more cuddly marmoteering in our professional and working lives, but I&amp;rsquo;ll be the first to admit that a cuddly marmot may not quite know exactly what he is talking about all the time ;)&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s cut to the chase. Blockchain-like datastructures innovate in at least three distinct ways over their classical database counterparts:&lt;/p&gt;

&lt;p&gt;1) They emphasize a fork choice rule to resolve consensus conflicts via a schelling game wherein a co-ordinated choice is motivated by some value at stake.&lt;/p&gt;

&lt;p&gt;2) They emphasize the use of public yet distinct administrative domains within a single database secured by collission proof assertions over hashes, timestamps, and digital signatures.&lt;/p&gt;

&lt;p&gt;3) They emphasize formal internet protocols built above TCP/IP that act as alternatives to HTTP to enable enhanced peer-2-peer support for commerce, publishing, legal process, and other forms of socioeconomic and political co-ordination at global scale.&lt;/p&gt;

&lt;p&gt;The introduction of these three emphases simultaneously in a single package in early 2009 in the form of Bitcoin was undoubtedly a historic event. Most discussions tend to revolve almost entirely around &lt;code&gt;(1)&lt;/code&gt;. But there&amp;rsquo;s more happening here. Let&amp;rsquo;s unravel them a bit, beginning with &lt;code&gt;(2)&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;emphasizing-distinct-public-administrative-domains-within-a-single-database&#34;&gt;Emphasizing Distinct, Public Administrative Domains Within a Single Database&lt;/h2&gt;

&lt;p&gt;On the surface, &lt;code&gt;(2)&lt;/code&gt; is nothing special. Pieces of the idea have been around for decades in the form of PGP and software checksums. But the tooling is notoriously difficult to use and there is little motivating the uptake and development of the tools other than the committment of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Cypherpunk&#34; target=&#34;_blank&#34;&gt;cypher punks&lt;/a&gt; on the one hand, and the &lt;a href=&#34;https://www.nsa.gov/&#34; target=&#34;_blank&#34;&gt;spooks&lt;/a&gt; on the other.&lt;/p&gt;

&lt;p&gt;The way a blockchain uses these primitives to divide the state into explicit administrative domains, each controlled by scripts validating cryptographic assertions about the kinds of state transitions they are permitted to carry out, recasts the story of permission systems from concentric rings to a more fine grained and arguably more secure &lt;a href=&#34;https://en.wikipedia.org/wiki/Capability-based_security&#34; target=&#34;_blank&#34;&gt;capabilities based approach&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If blockchains do anything, they introduce a re-tooling of the basic crypto primitives and motivate a whole new flurry of research into their analyses, implementations, and further application. This is a welcome breath of fresh air. If we end up dropping &lt;code&gt;(1)&lt;/code&gt; and &lt;code&gt;(3)&lt;/code&gt; but manage to make the global professional culture more cryptographically competent then the human species has gained tremendously; hallelujah.&lt;/p&gt;

&lt;h2 id=&#34;emphasizing-formalized-protocols-built-on-tcp-ip-for-enhanced-p2p-support&#34;&gt;Emphasizing Formalized Protocols Built on TCP/IP for Enhanced &lt;code&gt;p2p&lt;/code&gt; Support&lt;/h2&gt;

&lt;p&gt;Onto &lt;code&gt;(3)&lt;/code&gt;. Work on this goal has been underway for much shorter time than &lt;code&gt;(2)&lt;/code&gt;, though it has seen particularly explosive interest in the last few years, with a flurry of new protocols and tools for distributed computing. While &lt;code&gt;(3)&lt;/code&gt; has traditionally enabled decentralized storage and retrieval, most protocols built to address this goal have been unable to maintain a decentralized index of the data it makes available &amp;ndash; hence the trouble with the Pirate Bay. The problem is solved almost trivially by &lt;code&gt;(1)&lt;/code&gt;, and becomes enormously more mature with the further addition of &lt;code&gt;(2)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t know what I mean, you should &lt;strong&gt;consider the way Eris built &lt;a href=&#34;https://github.com/eris-ltd/2gather&#34; target=&#34;_blank&#34;&gt;2gather&lt;/a&gt;, a distributed video sharing application we&amp;rsquo;re not allowed to call YouTube.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Content is hosted on &lt;a href=&#34;http://ipfs.io/&#34; target=&#34;_blank&#34;&gt;IPFS&lt;/a&gt; (a &lt;em&gt;much&lt;/em&gt; better bittorrent) and references to the content (hashes) are stored in and managed by contracts on a &lt;a href=&#34;https://erisindustries.com/components/erisdb&#34; target=&#34;_blank&#34;&gt;eris:db blockchain&lt;/a&gt;, with user accounts secured by their private key. Since the blockchain is shared state, anyone can see those references, and with the right tooling and design, can understand that they refer to such-and-such a video. A similar application would give you a decentralized Pirate Bay.&lt;/p&gt;

&lt;p&gt;Now, to the credit of IPFS, it&amp;rsquo;s actually remarkable how much you can do without even using a blockchain, if you beef up on &lt;code&gt;(2)&lt;/code&gt; a bit. In other words, you use public keys as indices to the data published by the owners of the keys (they call it IPNS). So you can do decentralized blogging and content curation sites, and even host a personal Pirate Bay. But while the network co-operates for storage and retrieval according to a file blob&amp;rsquo;s checksum hash and/or the uploader&amp;rsquo;s public key, it does not co-operate to process a sequence of transactions, and has no conception of a shared state machine. This is of course the meat and potatoes of &lt;code&gt;(1)&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;emphasizing-a-fork-choice-rule&#34;&gt;Emphasizing a Fork Choice Rule&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;(1)&lt;/code&gt; has a long and troubled history that dates back to an obscure form of &lt;a href=&#34;http://research.microsoft.com/en-us/um/people/lamport/pubs/lamport-paxos.pdf&#34; target=&#34;_blank&#34;&gt;ancient Greek parliamentary decisionmaking&lt;/a&gt; that, after being reconceputialized in the late eighties by &lt;a href=&#34;http://research.microsoft.com/en-us/um/people/lamport/pubs/pubs.html&#34; target=&#34;_blank&#34;&gt;Leslie Lamport&lt;/a&gt;, would go on to become the foundational consensus algorithm for distributed databases in industry - namely, &lt;a href=&#34;https://en.wikipedia.org/wiki/Paxos_%28computer_science%29&#34; target=&#34;_blank&#34;&gt;Paxos&lt;/a&gt;. The problem with Paxos is it grew out of a tradition that built algorithms for consensus that begin by trying to get consensus on a single bit.&lt;/p&gt;

&lt;p&gt;Hence it&amp;rsquo;s become something of a black art to go from single bit to transaction log, and the ecosystem of consensus software tends to be &lt;em&gt;ad hoc&lt;/em&gt;, overly complex, and under specified.&lt;/p&gt;

&lt;p&gt;A couple years back, Paxos was revisited and reformalized from scratch with an explicit goal of understandability, leading to a simpler and more understandable consensus algorithm called &lt;a href=&#34;https://raftconsensus.github.io/&#34; target=&#34;_blank&#34;&gt;Raft&lt;/a&gt;, of which there are by now dozens of implementations. The key is this: &amp;ldquo;If a series of decisions must be made, it is simpler and faster to first elect a leader, then have the leader coordinate the decisions.&amp;rdquo; In typical Raft, if the leader never goes down, then he can persist potentially indefinetly, making it vulnerable to Byzantine behaviour.&lt;/p&gt;

&lt;p&gt;So a blockchain takes the added step of having non-deterministic quasi-leaders that propose a &amp;ldquo;block&amp;rdquo; of decisions at once, and fuzzes the certainty of their election by a fork choice rule, allowing their decisions to potentially be reverted or ignored. So the whole matter then becomes a question of fork choice rule.&lt;/p&gt;

&lt;p&gt;Satoshi&amp;rsquo;s brilliant insight was that he could turn the fork choice rule into a schelling game by requiring proposers to commit proofs of expenditure of electricity along side their proposals for the next set of transactions. The expenditure creates a major opportunity cost to not doing the &amp;ldquo;right&amp;rdquo; thing, and so convergence on a single history is rapidly achieved, namely, the one with the most expenditure.&lt;/p&gt;

&lt;p&gt;Furthermore, the expenditure is motivated by a reward, in the form of both inflation and transaction fees. Presumably, if it wasn&amp;rsquo;t, it wouldn&amp;rsquo;t be done. Or perhaps it would be, but not nearly at the scale at which mining occurs today.&lt;/p&gt;

&lt;h2 id=&#34;blockchains-without-valuable-tokens&#34;&gt;Blockchains Without Valuable Tokens&lt;/h2&gt;

&lt;p&gt;So the point is really this: Satoshi introduced two distinct innovations to consensus science in 2009 (the two halves of &lt;code&gt;(1)&lt;/code&gt;)): a leaderless election via blocks and fork choice rules on the one hand (ie. a blockchain), and an economic solution to the consensus problem on the other.&lt;/p&gt;

&lt;p&gt;The former, alone, creates systems resembling Raft, but promises greater availabity (at the expense of some consistency),
while the latter enables political decentralization of the consensus. This distinction is expounded further in an upcoming publication on the reformalization of consensus science by &lt;a href=&#34;https://twitter.com/VladZamfir&#34; target=&#34;_blank&#34;&gt;Vlad Zamfir&lt;/a&gt;. But furthermore, by employing &lt;code&gt;(2)&lt;/code&gt; and &lt;code&gt;(3)&lt;/code&gt;, blockchains promote a culture of openness and transparency, and offer far superior potential for auditing and evidencing malfeasance within and across businesses and sectors.&lt;/p&gt;

&lt;p&gt;Consider the boost to fair legal process: on a blockchain, no evidence is inadmissable. If the end result of currency-less blockchains in private enterprise is that more evidence is able to be brought to trials to prove particular malfeasances (and thus the perpatrators have a higher chance of paying for their crime with more than a slap on the wrist), hallelujah.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t think it&amp;rsquo;s difficult to imagine how multiple businesses might spring up to cater entirely to those last two sentences.&lt;/p&gt;

&lt;p&gt;At the end of the day, some still feel like this is all nonsense, and blockchains will have limited applicability outside of politically decentralized currencies, mostly because of their overhead, and the drain in efficiency. Perhaps. But consider this: democracy can be orders of magnitude less efficient at governing large bodies of humans than hierarchical dictatorships, but for one reason or another countries continue to turn to democracy (granted, weak forms of it) rather than dictatorship because of the kind of culture it produces. Blockchain technology may have a very similar impact on humans: even though they are less efficient than their counterparts at the typical things their counterparts were optimized for, they impose new structural paradigms on human interactions that may be valuable in and of themselves, regardless of the performance of the database, and especially if they result in human behavioural patterns that make culture as a whole more efficient.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s really what we&amp;rsquo;re in it for.&lt;/p&gt;

&lt;p&gt;So instead of saying &amp;ldquo;do this and we&amp;rsquo;ll pay you with a new construction that exists so we can pay you&amp;rdquo;, we could say &amp;ldquo;do this because doing it contributes to a shared good&amp;rdquo;, like bittorrent seeding or running Folding@Home or SETI@Home. Apparently, for a bitcoin maximalist, that&amp;rsquo;s blasphemy.&lt;/p&gt;

&lt;p&gt;Meh. I prefer to think of blockchains as platforms for experimenting in shared goods. Shared-Goods-Infrastructure-as-a-Service, if you will.&lt;/p&gt;

&lt;p&gt;So if you don&amp;rsquo;t think blockchains will be useful without a bitcoin, that&amp;rsquo;s fine. Just please get out of our way while we sneak the underlying principles of openness, transparency, and collaborative decision making into the rest of society.&lt;/p&gt;

&lt;p&gt;Cheers.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Roll Your Own (Thelonious) Chain</title>
      <link>http://localhost/2015/04/25/make-thelonious-chain/</link>
      <pubDate>Sat, 25 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/04/25/make-thelonious-chain/</guid>
      <description>&lt;p&gt;We have been updating our messaging to &lt;a href=&#34;https://docs.erisindustries.com/tutorials/getting-started/&#34; target=&#34;_blank&#34;&gt;a simple three step process&lt;/a&gt; for getting up to speed with our stack:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install&lt;/li&gt;
&lt;li&gt;Roll&lt;/li&gt;
&lt;li&gt;Build&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thelonious is no longer supported. Please see the tutorial series linked to above for working with the Eris platform.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How We Set Up Peer Server Networks Using Tutum and Docker</title>
      <link>http://localhost/2015/04/01/peer-server-networks-current-paradigm/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/04/01/peer-server-networks-current-paradigm/</guid>
      <description>

&lt;p&gt;Peer server networks are one of the most important aspects of running any distributed system &amp;ndash; of which blockchains can easily be classified. For developers seeking to build application specific blockchains, they will obviously have the responsibility of establishing the peer server networks which their application specific blockchains hook into. Whether developers are also using other blockchains or not, alongside an application specific blockchain the same principles will apply.&lt;/p&gt;

&lt;p&gt;In preparation for our next round of beta testing on our video sharing distributed application &lt;a href=&#34;https://github.com/eris-ltd/2gather&#34; target=&#34;_blank&#34;&gt;2gather&lt;/a&gt; we have been working to understand how to most easily deploy and maintain peer server networks. The rest of this is the current paradigm we are using to establish application specific peer server networks.&lt;/p&gt;

&lt;h2 id=&#34;the-tools&#34;&gt;The Tools&lt;/h2&gt;

&lt;p&gt;We use four tools along this pipeline:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34;&gt;Docker&lt;/a&gt; &amp;ndash; an application specific container format which is lighter than a virtual machine image and is generally the paradigm which most modern cloud based deployment systems are moving toward.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tutum.co/&#34; target=&#34;_blank&#34;&gt;Tutum&lt;/a&gt; &amp;ndash; a docker provisioning and deployment tool which makes it incredibly simple to provision, configure, and deploy containers.&lt;/li&gt;
&lt;li&gt;AWS and Digital Ocean &amp;ndash; we have established a distributed peer server network using AWS and DO metal and these nodes are connected into Tutum&amp;rsquo;s provisioning and deployment system using AWS and DO API keys.&lt;/li&gt;
&lt;li&gt;The erisDB container (deprecated) &amp;ndash; this container is a running blockchain node which has been configured to operate in a specific manner.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These four tools work together along a pipeline which allows us to deploy, configure, and redeploy containers and blockchain peer server nodes very simply and incredibly quickly.&lt;/p&gt;

&lt;p&gt;The erisDB container is built as part of our continuous integration and continuous deployment system so the container is always updated with EPM&amp;rsquo;s master branch: &lt;code&gt;docker pull eris/erisdb:latest&lt;/code&gt;. We also build and push containers for the develop branch using the &lt;code&gt;unstable&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;Using these three tools we set up three different &lt;em&gt;types&lt;/em&gt; of nodes; these different types of nodes all use the same base container but using the erisDB start script (deprecated) we are able to have very flexible deployment and configuration of the blockchain client. I&amp;rsquo;ll work through these three node types.&lt;/p&gt;

&lt;h2 id=&#34;node-type-1-the-genesis-server-node&#34;&gt;Node Type 1: The Genesis Server Node&lt;/h2&gt;

&lt;p&gt;The first type of node we use is what I call the &lt;code&gt;genesis_server&lt;/code&gt; node. It has one, and only one, purpose &amp;ndash; to serve the genesis block to the other nodes. Because of how &lt;a href=&#34;https://erisindustries.com/components/erisdb&#34; target=&#34;_blank&#34;&gt;eris:db&lt;/a&gt; has been designed to sink different contracts into a genesis block; and because of entropy which we add to the genesis block hashing process; each time a new chain is hashed which has contracts in the genesis block (namely, when it is not a simple ethereum clone) the identifier of the chain will be unique.&lt;/p&gt;

&lt;p&gt;All eris:db nodes work off of the concept of a chainID which is simply the genesis block hash. The first thing a eris:db client will do upon connecting to a peer is to ask the peer what chainID that eris:db client is running. If there is a mismatch of chainIDs then the peers will not connect.&lt;/p&gt;

&lt;p&gt;These two concepts: the necessity of maintaining a stable chainID for an application specific blockchain; along with the uniqueness of the chainID hashing process &amp;ndash; are features of the eris:db blockchain client but they must be dealt with carefully.&lt;/p&gt;

&lt;p&gt;The genesis node we use is established to only serve the genesis block. This node hashes the chain and then opens its &lt;code&gt;fetch_port&lt;/code&gt; as we call it which will serve its genesis block. It does not connect into the peer network at all and simply exists only to serve a stable genesis block to the peers whenever the peers boot up.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Why is this node only doing this? Seems like it could be a waste?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That is also what I thought at first. But in our testing we have found that sometimes &amp;ndash; in particular on low density, irregularly committed chains &amp;ndash; the peering process of the blockchain nodes will slowly drop peers to the point where the node will basically shut itself off. This is, again, a feature not a bug which is meant to not overload computers running a node which is &amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe width=&#34;420&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/NGrLb6W5YOM&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;This means, though, that the peer servers sometimes need to be restarted. &lt;strong&gt;But&lt;/strong&gt; when they are restarted, if they are meant to hash a blockchain they will then have a new chainID. So instead, we have a stable, non-peering, genesis block server node which is stable and does not time out.&lt;/p&gt;

&lt;p&gt;Here is how we configure the node:&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/ps-genesis-config-1.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/ps-genesis-config-2.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;As you can see most of the configuration happens using environment variables. These environment variables are used mostly by the start script to configure the node when it boots.&lt;/p&gt;

&lt;h2 id=&#34;node-type-2-peer-server-master&#34;&gt;Node Type 2: Peer Server Master&lt;/h2&gt;

&lt;p&gt;The second type of node we establish to use an application specific blockchain is a master peer server. This is the main access point for the nodes on the chain.&lt;/p&gt;

&lt;p&gt;When this node boots, it first uses &lt;code&gt;epm fetch&lt;/code&gt; to fetch the genesis block from the &lt;code&gt;genesis_node&lt;/code&gt; and then it configures itself and boots up the eris:db chain it needs to run. This process makes it ultra smooth to reset the running container if its peering process times out due to low-density networks and/or irregular committing.&lt;/p&gt;

&lt;p&gt;Here is how we configure the node:&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/ps-master-config-1.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/ps-master-config-2.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;As with the genesis node, these environment variables should make sense when one compares what is passed to the container to the start script linked to above.&lt;/p&gt;

&lt;h2 id=&#34;node-type-3-peer-server-relays&#34;&gt;Node Type 3: Peer Server Relays&lt;/h2&gt;

&lt;p&gt;The final type of node we use when working with application specific blockchains is peer relay nodes. We establish these on a distributed basis using Tutum&amp;rsquo;s very clever deployment tags and deployment strategy features.&lt;/p&gt;

&lt;p&gt;Tutum allows us to deploy individual nodes using AWS and Digital Ocean as I said before. Each of these machines we can give a specific tag. We have deployed machines to data centers in: Northern China, Singapore, Sydney, Frankfurt, Amsterdam, London, Virginia, Oregon, and Sao Paolo which is a pretty reasonable geographical distribution of nodes. These nodes are then tagged using a &lt;code&gt;peer_cluster&lt;/code&gt; tag. For more on deployment tags, see &lt;a href=&#34;https://tutum.freshdesk.com/support/solutions/articles/5000508859-deploy-tags&#34; target=&#34;_blank&#34;&gt;Tutum&amp;rsquo;s documentation on the feature&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We then establish a &lt;a href=&#34;https://tutum.freshdesk.com/support/solutions/articles/5000559793-5-deploy-the-app-as-a-tutum-service&#34; target=&#34;_blank&#34;&gt;Tutum Service&lt;/a&gt; and add the &lt;code&gt;peer_cluster&lt;/code&gt; deployment tag to the Peer Relay service. In addition we use Tutum&amp;rsquo;s &lt;a href=&#34;https://tutum.freshdesk.com/support/solutions/articles/5000520721-deployment-strategies&#34; target=&#34;_blank&#34;&gt;deployment strategy&lt;/a&gt; feature which we set to &amp;ldquo;Emptiest node&amp;rdquo;. This allows us to have a good geographical distribution of the nodes.&lt;/p&gt;

&lt;p&gt;Once the service boots up we can scale it from 0 to 9 relay nodes by simply dragging a slider bar in Tutum&amp;rsquo;s web app or sending a simple API call from Tutum&amp;rsquo;s command line interface. So if we need more relay nodes we can scale the service as simply as folks scale their Heroku apps but with the added benefit of scaling across a geographically distributed set of machines rather than only to Heroku&amp;rsquo;s machines.&lt;/p&gt;

&lt;p&gt;Here is how we configure the relay nodes:&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/ps-relay-config-1.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/ps-relay-config-2.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;One other feature of Tutum we use to establish this network which keen observers will see is that Tutum gives each service its own DNS entry which we can use within the network. This means that if we have to drop a machine from a specific cluster or change a machine within a specific cluster (which will change the IP of the containers running on the machine) that we will not have any problems with the peer network. This is not actually the optimal way to do this. Ideally, we would configure these as linked containers using &lt;a href=&#34;https://tutum.freshdesk.com/support/solutions/articles/5000569899-stacks&#34; target=&#34;_blank&#34;&gt;Tutum&amp;rsquo;s stacks feature&lt;/a&gt; which operates very similarly for cloud deployments to how &lt;a href=&#34;https://docs.docker.com/compose/&#34; target=&#34;_blank&#34;&gt;Docker-Compose&lt;/a&gt; (formerly &lt;code&gt;fig&lt;/code&gt;) works for local development and operation of sets of containers.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;If you have any questions please drop them below, or, better, stop by &lt;a href=&#34;irc://freenode.net/#erisindustries&#34; target=&#34;_blank&#34;&gt;#erisindustries&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>