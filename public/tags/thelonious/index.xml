<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
&lt;?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Thelonious on Monax Industries</title>
    <link>http://localhost/tags/thelonious/</link>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Aug 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost/tags/thelonious/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Deprecation Warnings: What Do They Mean</title>
      <link>http://localhost/2015/08/09/deprecation-warnings/</link>
      <pubDate>Sun, 09 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/08/09/deprecation-warnings/</guid>
      <description>&lt;p&gt;We have received some incoming communication with respect to the deprecation notices we have placed onto the readme&amp;rsquo;s of Thelonious and Decerver. This is the explanation of what is replacing those repositories.&lt;/p&gt;

&lt;p&gt;Our permissioned smart contract network (blockchain) design which was called Thelonious has been continued and integrated into the &lt;a href=&#34;https://github.com/tendermint/tendermint&#34; target=&#34;_blank&#34;&gt;Tendermint&lt;/a&gt; project. We have been supporting the Tendermint project by paying one of our Core Developers to work on the Tendermint protocol and blockchain design. Tendermint is a permission-able, proof of stake based blockchain design. More about why we have switched from the old Thelonious design to the new Tendermint design will be forthcoming on our &lt;a href=&#34;https://eng.erisindustries.com&#34; target=&#34;_blank&#34;&gt;Engineering Blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Decerver, the distributed application server, has more or less been tabled. The idea behind the design was to provide a single server that was able to be plugged into various distributed protocol backends. While the goal was laudable, the implementation was awful. We realized quickly that the implementation conflated API client libraries with a router and http end point framework that a frontend could hook into. Both of these pieces can be, in our estimation, better handled by a series of good node-base client APIs and a node framework such as express. The middleware of an application need not (strictly speaking) be written in node, but we are heading in the direction of fully supporting node. The decerver has officially been replaced with a nice API and client library around the Tendermint blockchain in the form of &lt;a href=&#34;https://github.com/eris-ltd/eris-db&#34; target=&#34;_blank&#34;&gt;eris-db&lt;/a&gt; and &lt;a href=&#34;https://github.com/eris-ltd/eris-contracts.js&#34; target=&#34;_blank&#34;&gt;eris-contracts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;EPM is being replaced by a combination of &lt;a href=&#34;https://github.com/eris-ltd/eris-cli/tree/develop&#34; target=&#34;_blank&#34;&gt;eris-cli&lt;/a&gt; and &lt;a href=&#34;https://github.com/eris-ltd/eris-pm&#34; target=&#34;_blank&#34;&gt;eris-pm&lt;/a&gt;. EPM as a tool became overly bloated and unweidly with three different blockchain designs compiled into the binary and other challenges. The functionality of running, installing, creating, and organizing blockchains is now handled by the eris-cli tool. The smart contract package management functionality of EPM is now handled by eris-pm.&lt;/p&gt;

&lt;p&gt;At this point we are still putting the finishing touches on the 0.10 release and our documentation is not totally where it will be in another month; we are working as quickly as we can to put the pieces of the stack back together for everyone after the major redesign process we have been engaged with over the past three or so months.&lt;/p&gt;

&lt;p&gt;That said, even though Decerver, Thelonious, and EPM have been marked for deprecation, if you still would like to play around with that tool chain we are happy to answer any questions you may have via github or our &lt;a href=&#34;https://support.erisindustries.com&#34; target=&#34;_blank&#34;&gt;support portal&lt;/a&gt;. We are encouraging folks, however, if they are just starting to explore Eris to use the updated stack if they have an ability to work with little documentation or with the older stack if they require a bit more documentation.&lt;/p&gt;

&lt;p&gt;For some of the background as to the overall implementation of the stack and our motivations for this redesign from a platform perspective please &lt;a href=&#34;https://github.com/eris-ltd/eris-cli/tree/develop#why&#34; target=&#34;_blank&#34;&gt;see here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Preston presents at the 2015 American Banker Digital Currencies &amp; the Blockchain conference</title>
      <link>http://localhost/2015/08/06/amerbanker/</link>
      <pubDate>Thu, 06 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/08/06/amerbanker/</guid>
      <description>&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/Wd4wDnnG5uc&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Operation: Cuddly Critter, Part 1</title>
      <link>http://localhost/2015/06/15/opcuddlecritter/</link>
      <pubDate>Mon, 15 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/06/15/opcuddlecritter/</guid>
      <description>&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/totallyadorable.jpg&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt;: Preston is going to be nice to Bitcoin for an entire month. To start off the &lt;a href=&#34;https://twitter.com/polemitis/status/610552511779446784&#34; target=&#34;_blank&#34;&gt;lovefest&lt;/a&gt;, please enjoy this picture of an adorable tiny puppy.&lt;/p&gt;

&lt;p&gt;Part II &lt;a href=&#34;https://db.erisindustries.com/distributed%20systems/2015/06/16/tbtm/&#34; target=&#34;_blank&#34;&gt;may be found here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Long version&lt;/strong&gt;: For anyone who has followed the company&amp;rsquo;s musings over the past six months, you may have noticed that I haven&amp;rsquo;t been entirely kind to Bitcoin. This has been, of course, entirely deliberate in order to differentiate between our marmoty, repeatable database offering and Bitcoin&amp;rsquo;s more traditional approach to blockchain technology, although it has caused my colleagues - who refer to this &lt;em&gt;weltanschauung&lt;/em&gt; as &amp;ldquo;&lt;a href=&#34;https://eng.erisindustries.com/blockchain/2015/04/30/on-blockchains/&#34; target=&#34;_blank&#34;&gt;cuddly marmoteering&lt;/a&gt;&amp;rdquo; - some dismay.&lt;/p&gt;

&lt;p&gt;Having been successful in differentiating &lt;a href=&#34;https://erisindustries.com&#34; target=&#34;_blank&#34;&gt;our offering&lt;/a&gt;, if at the risk of appearing slightly &lt;a href=&#34;http://prestonbyrne.com/2015/04/08/blockchain-without-bitcoin-is-now-a-thing/&#34; target=&#34;_blank&#34;&gt;abrasive&lt;/a&gt;, peer pressure from my company and a dare from a prospective client has resulted in my undertaking the following challenge:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;play nice with Bitcoin for 30 days and offer only constructive commentary, both in a series of posts on this blog and elsewhere.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is a challenge I happily accept. If I should fail, I will donate Â£200 (in fiat) to the &lt;a href=&#34;https://marmots.org&#34; target=&#34;_blank&#34;&gt;Marmot Recovery Foundation&lt;/a&gt;, to save the marmots whose homes are being affected by climate change.&lt;/p&gt;

&lt;p&gt;Which Bitcoin mining is contributing to. Whoops! &lt;strong&gt;I mean,&lt;/strong&gt; I am cognisant that proof of work is preferred today, but consensus research is advancing constantly. Might I suggest a more electricity-efficient approach such as the &lt;a href=&#34;http://tendermint.com/&#34; target=&#34;_blank&#34;&gt;Tendermint Protocol&lt;/a&gt; as an eco-friendly alternative?&lt;/p&gt;

&lt;p&gt;(July 14th is only a month away. How hard could it be?)&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p&gt;Before ppl had tamagotchi - now we have little &lt;a href=&#34;https://twitter.com/hashtag/blockchains?src=hash&#34;&gt;#blockchains&lt;/a&gt;. How cute cc &lt;a href=&#34;https://twitter.com/prestonjbyrne&#34;&gt;@prestonjbyrne&lt;/a&gt; &lt;a href=&#34;https://twitter.com/compleatang&#34;&gt;@compleatang&lt;/a&gt; &lt;a href=&#34;http://t.co/RUvKB8GFy5&#34;&gt;pic.twitter.com/RUvKB8GFy5&lt;/a&gt;&lt;/p&gt;&amp;mdash; :P (@j32804) &lt;a href=&#34;https://twitter.com/j32804/status/574165653197881345&#34;&gt;March 7, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Smart securitisation, or: why it&#39;s time to stop talking tokens and start talking smart contracts</title>
      <link>http://localhost/2015/04/28/smart-securitisation/</link>
      <pubDate>Tue, 28 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/04/28/smart-securitisation/</guid>
      <description>

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/scallthethings.jpg&amp;rsquo; | img }}&lt;/p&gt;

&lt;h1 id=&#34;we-need-to-have-a-chat-about-cryptocurrency-tokens&#34;&gt;We need to have a chat about cryptocurrency tokens.&lt;/h1&gt;

&lt;h2 id=&#34;1-you-re-doing-it-wrong-but-don-t-worry-chalk-it-up-as-a-learning-experience&#34;&gt;1. You&amp;rsquo;re doing it wrong (but don&amp;rsquo;t worry - chalk it up as a learning experience)&lt;/h2&gt;

&lt;p&gt;To date, most of the folks in Bitcoin/Crypto have made the rather critical mistake of assuming that asset ownership and/or replacing a bank is as simple as&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tokenising ALL THE THINGS (a token being also known as a &amp;ldquo;coin&amp;rdquo;, e.g. a bitcoin) and then&lt;/li&gt;
&lt;li&gt;trading them around on a &amp;ldquo;trustless&amp;rdquo; decentralised network.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don&amp;rsquo;t think so.&lt;/p&gt;

&lt;p&gt;There are a couple of serious problems with this approach:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First,&lt;/strong&gt; the fully-decentralised networks such as Bitcoin - being completely open - don&amp;rsquo;t actually provide you with a facility to verify that the thing someone is trading is &lt;em&gt;actually that thing.&lt;/em&gt; A token could represent a car or a house, sure, but unless you can link that token to a certified copy of a title deed - and then ascertain that no other prior interests took priority to yours - when you purchase that token with (e.g.) Bitcoin in a crypto-escrow-thingy you might be taking an encumbered asset. Or the asset may not actually exist. &amp;ldquo;On-chain&amp;rdquo; assets which are secured by, for example, the reputation of anonymous issuers are simply &lt;a href=&#34;http://www.theguardian.com/technology/2015/mar/18/bitcoin-deep-web-evolution-exit-scam-12-million-dollars&#34; target=&#34;_blank&#34;&gt;not commercially viable propositions.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Second,&lt;/strong&gt; blockchains are not super-computers or AI machines - neither Freenet nor Skynet - they&amp;rsquo;re databases, and they are reactive databases at that (i.e., they respond to instructions). They lack the ability to step out into the real world and enforce (that is a people-job for the time being). Where decentralised e.g. Bitcoin or Ethereum, they are fully opt-in and rely on a standalone economy with no real-world nexus in order to function - a high bar which assumes much about the usefulness of decentralised networks and ignores much about how real-world commerce is conducted.&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Decentralised&amp;rdquo; systems as we&amp;rsquo;ve known them to date are designed to frustrate accountability and intervention. But where a decentralisation advocate might say &amp;ldquo;trust the math,&amp;rdquo; I would counter that for most people that statement actually means &amp;ldquo;be held hostage to the math.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Third,&lt;/strong&gt; in the real world, discretion is allowed. Hell, it&amp;rsquo;s absolutely necessary. This &amp;ldquo;trustless&amp;rdquo; stuff is a bunch of bunk - what it means in practice is that you&amp;rsquo;re trusting a bunch of anonymous &amp;ldquo;miners&amp;rdquo; whose interests may be very different from your own - so trust-limitation or trust-allocation or trust-minimisation is what you want to acheive (in other words: someone&amp;rsquo;s in charge, so rather than trying to circumvent legal control you&amp;rsquo;re trying to use the blockchain to reduce friction - i.e., automate business process).&lt;/p&gt;

&lt;p&gt;In decentralisation-land, this is not what you get. If the network fails from lack of use or external attack, the representations of those assets are suddenly beyond your control. If a &amp;ldquo;smart will&amp;rdquo; locks up some Bitcoin in escrow as part of a decedent&amp;rsquo;s estate and the key is lost, no court on Earth will be able to retrieve it. If a &amp;ldquo;coin&amp;rdquo; or &amp;ldquo;token&amp;rdquo; representing a right to a thing is transferred on the basis of a misrepresentation, the remedy of rescission is impossible.&lt;/p&gt;

&lt;p&gt;&amp;hellip;put differently, blockchains structured like Bitcoin are a really bad deal for practically anyone who uses them. The existence of someone you can sue is, actually, extremely handy. Which is why we&amp;rsquo;re betting that blockchains with identifiable, responsible operators - &lt;strong&gt;permissioned blockchains&lt;/strong&gt; - are the way forward.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Last but not least,&lt;/strong&gt; and what the rest of this post will focus on, &amp;ldquo;crypto-tokens&amp;rdquo; are actually really inadequate ways of expressing real-world financial obligations - even simple ones like a bond instrument. And tokens are, futhermore, completely unnecessary to transfer real-world value on a blockchain.&lt;/p&gt;

&lt;p&gt;Which means maybe we should think about not using them!&lt;/p&gt;

&lt;h2 id=&#34;2-the-limited-usefulness-of-the-token&#34;&gt;2. The limited usefulness of the token&lt;/h2&gt;

&lt;p&gt;If we take the case of, e.g., a bond instrument, the token-driven model falls down immediately on practical points. This is because tokens don&amp;rsquo;t solve a problem that anyone actually has.&lt;/p&gt;

&lt;p&gt;Tokens are just data. Ones and zeroes. However, things like financial instruments are actually pretty complex, event-driven bundles of rights and obligations. ErisDB/Thelonious is a cryptographically-secure event database designed to process these events. We&amp;rsquo;re by no means limiting ourselves to finance but this is where we&amp;rsquo;re starting, as that&amp;rsquo;s where the clients are.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s not to say you can&amp;rsquo;t &amp;ldquo;hack&amp;rdquo; a decentralised network to get tokens performing more complex value functions - you can, and provided that you can get the legal nexus to ensure that these representations are, in fact, legally binding manifestations of an asset, tokenisation could work - see, e.g., Taariq Lewis&amp;rsquo; DigitalTangible or stuff like Ripple/Stellar gateways.&lt;/p&gt;

&lt;p&gt;It is feasible that such networks could also, at some future date, also operate in a limited IoT capacity, such as smart property, in P2P consumer applications (see, e.g., IoT stuff such as Nick Szabo&amp;rsquo;s example of transferring ownership to a car through a cryptographic escrow contract linking a car&amp;rsquo;s immobiliser/ignition to a write permission of a particular key pair).&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re not too keen on that at the moment. For two main reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the market infrastructure simply isn&amp;rsquo;t there, and&lt;/li&gt;
&lt;li&gt;payments/consumer stuff is pretty dull. At least, it is when compared with structured finance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even if we assume that the model works from a legal-technical perspective (which requires structuring around the gate-points which grant access to and from the chain), for the stuff we think blockchains are best at, tokenisation is not the name of the game.&lt;/p&gt;

&lt;h2 id=&#34;3-smart-contractify-the-things-and-actually-solve-a-problem&#34;&gt;3. Smart contractify the things, and actually solve a problem&lt;/h2&gt;

&lt;p&gt;Am I going to outline a smart securitisation in this blogpost, end-to-end? No, because I have a couple of things I&amp;rsquo;d like to do other than write in the next two months (in case you&amp;rsquo;re wondering though, we have thought through these matters and the smart contracts needed to implement them &lt;a href=&#34;https://eng.erisindustries.com/tutorials/2015/03/11/solidity-1/&#34; target=&#34;_blank&#34;&gt;in some detail&lt;/a&gt; while we were in Stealth Mode in 2014).&lt;/p&gt;

&lt;p&gt;What I will do, however, is provide a very high-level, 30,000 foot view of why this most fundamental mainstream financial transaction won&amp;rsquo;t work on a token-driven blockchain - but will work on a purely smart contract-driven one such as ErisDB.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a link to a &lt;a href=&#34;http://www.ulsterbank.com/content/group/debt_investors/downloads/CELTIC_RESIDENTIAL_IRISH%20MORTGAGE_SECURITISATION_No_12_Limited.pdf&#34; target=&#34;_blank&#34;&gt;prospectus/offering circular of a RMBS deal&lt;/a&gt; I worked on as a young lawyer (&lt;strong&gt;Celtic 12&lt;/strong&gt;) which I think is instructive as to why a token doesn&amp;rsquo;t (and won&amp;rsquo;t ever) cut the mustard for what the banks want to do.&lt;/p&gt;

&lt;p&gt;Assume&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;entitlements to each class of the Celtic 12 Notes (A1, A2, A3, B, and C) are each proportionally held in the form of 100 tokens, and&lt;/li&gt;
&lt;li&gt;the ICSD (let&amp;rsquo;s say Clearstream, Luxembourg) decides it&amp;rsquo;s going to deal with these tokens on a Bitcoin metaprotocol e.g. Counterparty or a hosted solution like Ripple/Stellar (before anyone freaks out, I know Stellar has just proposed a new PoS algo, but I haven&amp;rsquo;t had time to read up on it just yet).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then ask yourself:&lt;/p&gt;

&lt;h3 id=&#34;a-does-tokenisation-solve-a-problem-anyone-has&#34;&gt;a) Does tokenisation solve a problem anyone has?&lt;/h3&gt;

&lt;p&gt;No.&lt;/p&gt;

&lt;p&gt;The custodian of the Notes (in this case a &amp;ldquo;Common Safekeeper&amp;rdquo;) will have custody of the notes and will deposit them with Clearstream, who will have a ledger which records that the Common Safekeeper owns the entirety of the issuance. Securities deposited with ICSDs are customarily insolvency-remote vis a vis the ICSD so there&amp;rsquo;s no counterparty risk at this level of the transaction.&lt;/p&gt;

&lt;p&gt;Using a SQL database with digital signatures for this purpose is probably easier/faster than using Bitcoin or a blockchain. You &lt;em&gt;could&lt;/em&gt; use a blockchain if you wanted to, for instance, protect yourself against something like a &lt;a href=&#34;http://www.reddit.com/r/erisindustries/comments/31uuru/blockchain_usecase_1_user_1_instantiation/&#34; target=&#34;_blank&#34;&gt;SQL injection attack&lt;/a&gt; and verify the contents of the database - in which case all the &amp;ldquo;blockchainy&amp;rdquo; things you need are merkleisation and the use of private key write permissions to control access.&lt;/p&gt;

&lt;p&gt;But even if you did that, you still wouldn&amp;rsquo;t need value-tokens. The presence of &lt;a href=&#34;https://eng.erisindustries.com/tutorials/2015/04/25/make-thelonious-chain/&#34; target=&#34;_blank&#34;&gt;database operators/admins&lt;/a&gt; in a commercial blockchain deployment (as surely there will be) means that the only need tokens satisfy - automatic monetary rewards to incentivise security - no longer exists.&lt;/p&gt;

&lt;p&gt;So where we&amp;rsquo;re left is that the &amp;ldquo;counterparty risk&amp;rdquo; problems Bitcoin and its ilk solve really aren&amp;rsquo;t that big an issue with securities or other kinds of financial transactions. Even in a trading context (in which case you&amp;rsquo;re looking at settlement risk), inert tokens are totally inferior to assets constituted as dynamic scripts (smart contracts).&lt;/p&gt;

&lt;p&gt;See ya later, tokens.&lt;/p&gt;

&lt;h3 id=&#34;b-if-there-are-no-tokens-why-are-we-here-shouldn-t-we-just-pack-up-and-go-home&#34;&gt;b) If there are no tokens, why are we here? Shouldn&amp;rsquo;t we just pack up and go home?&lt;/h3&gt;

&lt;p&gt;Nope, because these obligations are highly amenable to smart contractification.**&lt;/p&gt;

&lt;p&gt;As far as value transmission is concerned, smart contract-powered blockchains solve a coordination problem, not an ownership problem. And really, co-ordination - not value storage - is what a blockchain is best at doing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Blockchain databases have value because their users ascribe value to that data.&lt;/li&gt;
&lt;li&gt;This value (in the case of the cryptocurrencies) is because the users of the cryptocurrencies think they&amp;rsquo;re worth something through what is called a &amp;ldquo;network effect.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;In the case of high finance (in the case of permissioned blockchains), they&amp;rsquo;ll have value because the rights/obligations a particular blockchain&amp;rsquo;s data represent will be a record of enforceable obligations against the person operating the blockchain.&lt;/li&gt;
&lt;li&gt;What do Bitcoin and a permissioned blockchain have in common? Easy: they allow users to move data representing value around &lt;strong&gt;reliably, automatically, on certain terms, in a Byzantine fault-tolerant manner.&lt;/strong&gt; (Co-ordination.)&lt;/li&gt;
&lt;li&gt;The main difference is that permissioned blockchains record value just like regular databases do today. No &amp;ldquo;network effect&amp;rdquo; necessary.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=M0mXUC0cUPg&#34; target=&#34;_blank&#34;&gt;Simples!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this kind of a transaction, the complexity isn&amp;rsquo;t in &lt;em&gt;who owns what&lt;/em&gt;: it&amp;rsquo;s in getting the payments from the underlying assets (in this case, mortgage loans) where they&amp;rsquo;re meant to go in the way they&amp;rsquo;re meant to get there. Broadly speaking payment flows on a transaction such as Celtic 12 will look something like this (very basically):&lt;/p&gt;

&lt;p&gt;Mortgage borrowers &amp;ndash;&amp;gt; Servicer &amp;ndash;&amp;gt; Account Bank &amp;ndash;&amp;gt; Principal Paying Agent &amp;ndash;&amp;gt; out through Payments Waterfall to transaction parties&lt;/p&gt;

&lt;p&gt;Managing these payment flows involves more than just knowing where the bondholders are and paying them. See terms and conditions starting on p. 85, and in particular Condition 6 (generally) and particularly Condition 6(1)(b) (page 94) (payment prioritisation) of the Celtic 12 OC. Not only are non-bondholders getting paid, but they get paid depending on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the type of receipt they are, and&lt;/li&gt;
&lt;li&gt;in a different order depending on whether an Event of Default, Pro-Rata Trigger Event, or Enforcement of Security has occurred (see Cashflows on page 34 et seq.)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Multiple parties (First Active (the Originator) is also the Servicer, Deutsche is in the Trustee/Corp Services roles, and RBS is in most other roles)  are all using separate software stacks and messaging systems to transfer information around as to what should come out of the payments waterfall before the bondholders get paid. Things can get screwed up, misrecorded, miscalculated or lost.&lt;/p&gt;

&lt;p&gt;And when you have to coordinate so many cooks, there&amp;rsquo;s a lot of room for error (one deal I worked on a year ago blew through Â£100,000 trying to sort out a payment prioritisation interpretation error).&lt;/p&gt;

&lt;p&gt;Each of these parties charges tens of thousands of pounds per role, per deal, per annum to manage this stuff. They have to maintain a huge legacy infrastructure (human and machine) because there&amp;rsquo;s no good way to co-ordinate these various triggers&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;on an open standard&lt;/li&gt;
&lt;li&gt;in a verifiable and automatic way&lt;/li&gt;
&lt;li&gt;with a really straightforward security apparatus&lt;/li&gt;
&lt;li&gt;without exposing themselves to any individual bank&amp;rsquo;s stack.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Three guesses as to what technology can do that really, really well while ensuring really high uptime.&lt;/p&gt;

&lt;p&gt;Blockchain! Correct. How did you guess?&lt;/p&gt;

&lt;h3 id=&#34;c-right-so-you-re-automating-payment-triggers-by-creating-a-system-that-s-maintained-and-observed-by-all-participants-why-do-you-need-that-whole-you-can-modify-the-system-on-command-thing&#34;&gt;c) Right, so you&amp;rsquo;re automating payment triggers by creating a system that&amp;rsquo;s maintained (and observed) by all participants. Why do you need that whole &amp;ldquo;you can modify the system on command&amp;rdquo; thing?&lt;/h3&gt;

&lt;p&gt;Controllable blockchains aren&amp;rsquo;t just a &amp;ldquo;nice-to-have&amp;rdquo; in applications such as high finance. They&amp;rsquo;re an absolute necessity.&lt;/p&gt;

&lt;p&gt;This is because terms of transactions change, often arbitrarily. See Condition 11 (Modification &amp;amp; waiver) generally and Condition 11.8 (unilateral amendment by Trustee in the event of manifest or proven error) of the Celtic 12 OC. Additionally the Trustee calls things like Events of Default and enforcement of security which can change how the payment triggers work, automatically, once called.&lt;/p&gt;

&lt;p&gt;Implementing these changes is a complete pain in the ass and involves a lot of wringing of hands, paperwork, phone calls and lawyers. I should know. I was there.&lt;/p&gt;

&lt;h2 id=&#34;4-so-what-you-re-saying-is-it-s-totally-inadequate-to-use-a-crypto-token-to-describe-virtually-any-mainstream-financial-obligation-and-everyone-has-called-this-one-wrong&#34;&gt;4. So what you&amp;rsquo;re saying is, it&amp;rsquo;s totally inadequate to use a crypto-token to describe virtually any mainstream financial obligation. And everyone has called this one wrong.&lt;/h2&gt;

&lt;p&gt;Pretty much - at least if you want to build something that addresses a problem mainstream financial institutions actually have. Sorry, California.&lt;/p&gt;

&lt;p&gt;This isn&amp;rsquo;t the only co-ordination problem in finance a blockchain could fix - there are many. But it&amp;rsquo;s the best example I can think to illustrate in a blog post!&lt;/p&gt;

&lt;p&gt;Hence: we at Eris Industries see a world with millions of blockchains, each designed for a particular purpose, co-ordinating a particular set of relationships in a reliable and verifiable way.&lt;/p&gt;

&lt;p&gt;Guess which company in the world is the only one that makes free, open-source tools that you can use - today - to solve problems just like this one.&lt;/p&gt;

&lt;p&gt;And no, it isn&amp;rsquo;t &lt;a href=&#34;http://www.marmcorp.com&#34; target=&#34;_blank&#34;&gt;Marmot Corp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Notes.&lt;/em&gt;
**per Google, this post will be the first to use the term &amp;ldquo;smart contractification.&amp;rdquo; Woohoo!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to Roll Your Own (Thelonious) Chain</title>
      <link>http://localhost/2015/04/25/make-thelonious-chain/</link>
      <pubDate>Sat, 25 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/04/25/make-thelonious-chain/</guid>
      <description>&lt;p&gt;We have been updating our messaging to &lt;a href=&#34;https://docs.erisindustries.com/tutorials/getting-started/&#34; target=&#34;_blank&#34;&gt;a simple three step process&lt;/a&gt; for getting up to speed with our stack:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install&lt;/li&gt;
&lt;li&gt;Roll&lt;/li&gt;
&lt;li&gt;Build&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thelonious is no longer supported. Please see the tutorial series linked to above for working with the Eris platform.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Solidity Part III: Interfaces, Events, Types and Error Handling</title>
      <link>http://localhost/2015/04/17/solidity-3/</link>
      <pubDate>Fri, 17 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/04/17/solidity-3/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Note: This tutorial is not updated regularly. Please see our documentation site for &lt;a href=&#34;https://docs.erisindustries.com/tutorials/solidity&#34; target=&#34;_blank&#34;&gt;updated smart contract writing tutorials&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Eris Industries 2015 Summer Internships</title>
      <link>http://localhost/2015/04/14/ei-summer-interns/</link>
      <pubDate>Tue, 14 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/04/14/ei-summer-interns/</guid>
      <description>

&lt;h2 id=&#34;2015-summer-internships-with-eris-industries&#34;&gt;2015 Summer Internships with Eris Industries&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ll get straight to the point:&lt;/p&gt;

&lt;h3 id=&#34;1-application-prerequisites&#34;&gt;1. Application prerequisites&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You must be old enough to vote and be proficient in English.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;2-informal-points&#34;&gt;2. Informal points&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We&amp;rsquo;re thinking we&amp;rsquo;ll probably get applications from current students/recent graduates from university or postgraduate courses, although this is not set in stone. Current or former students of any discipline are welcome to apply.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You&amp;rsquo;ll be programming. So&amp;hellip; yeah. You will need to know how to do that. Our stack is built on a backbone of javascript (&lt;a href=&#34;https://nodejs.org/&#34; target=&#34;_blank&#34;&gt;node.js&lt;/a&gt;), &lt;a href=&#34;http://golang.org/&#34; target=&#34;_blank&#34;&gt;golang&lt;/a&gt;, &lt;a href=&#34;https://eng.erisindustries.com/tutorials/2015/03/11/solidity-1/&#34; target=&#34;_blank&#34;&gt;smart contracts&lt;/a&gt; and container automation using &lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34;&gt;docker&lt;/a&gt;, &lt;a href=&#34;https://docs.docker.com/compose/&#34; target=&#34;_blank&#34;&gt;docker-compose&lt;/a&gt; &amp;ndash; experience in at least two of these technologies not required but preferable.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Digging smart contracts and blockchains helps, but isn&amp;rsquo;t necessary, as this is a pretty niche field (I think there are only two businesses in the world that do it at the moment, of which ours is one).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;3-application-requirements&#34;&gt;3. Application requirements&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Read this carefully.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Send a short CV or precis of your previous work/study experience in .PDF format to preston@erisindustries.com .&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Write a 250 word project proposal for an open-source, smart contract-driven distributed application and submit it in markdown by pull request to our &lt;a href=&#34;https://github.com/eris-ltd/internships&#34; target=&#34;_blank&#34;&gt;Internship Applications repo&lt;/a&gt;. &lt;strong&gt;Do not do this if you do not want your proposal to become public and open-source&lt;/strong&gt; (Creative Commons licence).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;We&amp;rsquo;ll contact you within two weeks if we&amp;rsquo;d like to take the application further.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Regrettably, as we&amp;rsquo;re a small team we will only be able to take on one or two interns this summer. The stack, however, is open-source - so please feel free to play around with it, and to join &lt;a href=&#34;http://reddit.com/r/erisindustries&#34; target=&#34;_blank&#34;&gt;our friendly community&lt;/a&gt;. We&amp;rsquo;d love to hang out!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;4-what-will-happen&#34;&gt;4. What will happen&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;We will teach you the &lt;a href=&#34;https://tao.erisindustries.com&#34; target=&#34;_blank&#34;&gt;Tao of DAO&lt;/a&gt;. You will learn, work on your project, open-source it, and win eternal glory.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;5-place-of-work&#34;&gt;5. Place of work&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Anywhere. Our corporate HQ is in London, United Kingdom, but the team is actually spread out all over the place.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;6-duration&#34;&gt;6. Duration&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;8-12 weeks, depending on what works.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;7-stipend&#34;&gt;7. Stipend&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;We will pay you a small monthly stipend.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Marmot Hangout: Learn EPM, the Eris Package Manager</title>
      <link>http://localhost/2015/04/11/learn-epm/</link>
      <pubDate>Sat, 11 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/04/11/learn-epm/</guid>
      <description>&lt;p&gt;This version of eris:package_manager has been deprecated. Please see our &lt;a href=&#34;https://docs.erisindustries.com/tutorials/&#34; target=&#34;_blank&#34;&gt;tutorial series&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How 2gather works</title>
      <link>http://localhost/2015/04/07/2gather/</link>
      <pubDate>Tue, 07 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/04/07/2gather/</guid>
      <description>

&lt;h1 id=&#34;note-2gather-is-no-longer-supported-this-blog-post-is-kept-only-for-historical-reasons&#34;&gt;&lt;strong&gt;Note&lt;/strong&gt; &amp;ndash; 2gather is no longer supported. This blog post is kept &lt;strong&gt;ONLY&lt;/strong&gt; for historical reasons.&lt;/h1&gt;

&lt;h2 id=&#34;how-2gather-works&#34;&gt;How 2gather works&lt;/h2&gt;

&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;The 2gather video sharing service is the first real distributed application built on Eris. It uses a number of different components:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;EPM&lt;/strong&gt; A command-line blockchain configuration and smart contract deployment tool.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Thelonious&lt;/strong&gt; A blockchain client.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IPFS&lt;/strong&gt; A p2p file-sharing client.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AtÃ«&lt;/strong&gt; A scripting component.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Decerver&lt;/strong&gt; Contains Ate, some dapp-loading and verification code, and serves the dapp locally in the form of a RESTful web-API.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A web-browser&lt;/strong&gt; Communicates with the decerver over http, and does all the presentation (like in any old webapp).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt; Puts the various different components into containers that can be run on any platform.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tutum&lt;/strong&gt; Is used to host a peer-server for the Eris-run blockchain, and to deploy and coordinate a world-wide network of &amp;ldquo;base nodes&amp;rdquo;. More info can be found &lt;a href=&#34;https://eng.erisindustries.com/blockchains/2015/04/01/peer-server-networks-current-paradigm/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This document focuses on 2gather, but most of it applies to any dapp.&lt;/p&gt;

&lt;h3 id=&#34;starting-2gather&#34;&gt;Starting 2gather&lt;/h3&gt;

&lt;p&gt;Despite all of these different components, the process for starting up and running 2gather is fairly simple. Right now, users must makes sure that &lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34;&gt;docker&lt;/a&gt; and &lt;a href=&#34;https://docs.docker.com/compose/&#34; target=&#34;_blank&#34;&gt;docker-compose&lt;/a&gt; are installed. If it&amp;rsquo;s a Windows or Mac machine, then they need to use a tool such as &lt;a href=&#34;http://boot2docker.io/&#34; target=&#34;_blank&#34;&gt;boot2docker&lt;/a&gt;. Once that is taken care of, it&amp;rsquo;s a simple matter of pulling the 2gather repository, cd&amp;rsquo;ing in to the root and typing &lt;code&gt;(sudo) docker-compose up&lt;/code&gt;. This will automatically pull in all the dependency containers from dockerhub (&lt;code&gt;erisdb&lt;/code&gt;, &lt;code&gt;decerver&lt;/code&gt; and &lt;code&gt;ipfs&lt;/code&gt;), and generate the 2gather container and link it up with the dependencies, and start running the dapp.&lt;/p&gt;

&lt;p&gt;The generation of the 2gather container includes the following steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Setting up the volumes and ports and all of that, so that it can run.&lt;/li&gt;
&lt;li&gt;Fetching the (public) 2gather chain from the peer-server, which means initializing a local database and download the current blocks into it, as well as setting up some of the identifiers that the Thelonious blockchain client needs in order to run it.&lt;/li&gt;
&lt;li&gt;Making sure the &lt;code&gt;package.json&lt;/code&gt; of the containerized dapp is updated with the 2gather chain Id and root contracts.&lt;/li&gt;
&lt;li&gt;Starting up the decerver, which will in turn start Thelonious and IPFS, make sure Thelonious is given the correct chain and root contract, and that IPFS gets a proper peer id and such. When that&amp;rsquo;s been taken care of it will load in the actual dapp-logic (which is written in javascript) and start the server.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When all of this is done, the dapp can be interacted with by opening up a web-browser and loading the url &lt;code&gt;localhost:3000/2gather/&lt;/code&gt;. The first time this is done it will have to download all the base containers which usually takes a few minutes. When they are all in place, it normally takes something between 20-30 seconds. A lot of these containers are also shared between a lot of different dapps (and also other docker-based applications), so having them will speed up the loading of other docker-based apps as well.&lt;/p&gt;

&lt;h3 id=&#34;running-2gather&#34;&gt;Running 2gather&lt;/h3&gt;

&lt;p&gt;When 2gather is running it mostly just sits around waiting for things to happen. There are three main entry-ways for events. The first and second is the IPFS and Thelonious peer networks, and the third is browser activity (such as the user clicking on the &amp;lsquo;add new video&amp;rsquo; link.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/2gather-1.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;It is important to remember that the deCerver only serves locally (by default). It is &lt;strong&gt;not&lt;/strong&gt; how you communicate with other peers. The way you reach other people that are on the same blockchain is over the Thelonious peer network. The way you get actual video files/data, is over the IPFS peer network. It works similar to how a bittorrent client works. It may have a Java Swing/FX or Qt GUI, for example, or in some cases you could have it serve a webpage, and that is how &lt;strong&gt;you&lt;/strong&gt; access the client and send various different commands. The actual networking happens through the peer-to-peer network that the client runs. The big difference here is you have two peer networks running with 2gather - one for the blockchain and one for files. The way these systems are linked and coordinated, though, is through the decerver, and that&amp;rsquo;s what we&amp;rsquo;re going to look at next.&lt;/p&gt;

&lt;h4 id=&#34;example-uploading-a-video&#34;&gt;Example - uploading a video&lt;/h4&gt;

&lt;p&gt;Let&amp;rsquo;s say i click on the link to upload a video. What happens is this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The browser will take the file url and load the video data into memory.&lt;/li&gt;
&lt;li&gt;It then sends a POST request to the endpoint &lt;code&gt;{BASE_URL}/users/:whatever/videos/&lt;/code&gt;. The request body will contain the video data and the display name.&lt;/li&gt;
&lt;li&gt;The decerver receives this request and the router will pass it on to the &lt;code&gt;addVideo&lt;/code&gt; function (or return an error if there are any issues).&lt;/li&gt;
&lt;li&gt;The addVideo function will write the video data to IPFS, and get a hash in return, which is the file identifier and is used to fetch it.&lt;/li&gt;
&lt;li&gt;The hash is written to a smart contract along with the file display name and some meta data. This is done by sending a transaction to the Thelonious client. By the way - this write procedure is essentially the same as in &lt;code&gt;hello-world&lt;/code&gt;, although more work is needed before the actual write in order to handle read/write permissions, making sure each user has their own contract, and other things.&lt;/li&gt;
&lt;li&gt;The transaction is queued right away, and a transaction hash is returned by the thelonious client. This hash is sent back in the response to the client, which will then continue to poll &lt;code&gt;{BASE_URL}/txs/:hash&lt;/code&gt; until it confirms that the tx has been processed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Step 1 is done in the webpage that comes with 2gather by default, and the code can be found in &lt;code&gt;2gather/script&lt;/code&gt; (&lt;code&gt;index.html&lt;/code&gt;) is in the root). The webpage uses angular + bootstrap. The webAPI (+ tests) can be found in &lt;code&gt;2gather/spec/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Steps 2-5 are not done automatically by the deCerver; they are part of the back-end javascript that is loaded into and executed by the deCervers javascript interpreter, and can be found in &lt;code&gt;2gather/models/&lt;/code&gt;. The file &lt;code&gt;2gather.js&lt;/code&gt; Has the startup logic and basic routing in it. The file &lt;code&gt;2gatherAPI.js&lt;/code&gt; contains the 2gather api (the actual logic for 2gather), and finally &lt;code&gt;decerver_api.js&lt;/code&gt; has some generic functions for doing transactions and reading/writing to IPFS.&lt;/p&gt;

&lt;h3 id=&#34;an-eris-dapp-now-and-in-the-future&#34;&gt;An Eris dapp - now and in the future&lt;/h3&gt;

&lt;p&gt;When working with 2gather we&amp;rsquo;ve noticed a few issues that needs to be addresed so that building dapps on Eris becomes easier and more intuitive. Some of these issues are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The use of alpha/pre-alpha dependencies made it difficult to work at times (though we didn&amp;rsquo;t have much of a choice).&lt;/li&gt;
&lt;li&gt;Manually building Go-programs is not easy. People have been struggling with this.&lt;/li&gt;
&lt;li&gt;Using our tools is not easy. People have been struggling with deCerver, Thelonious and EPM. There are many components and a lot to keep track of.&lt;/li&gt;
&lt;li&gt;Using LLL for contract writing is not easy.&lt;/li&gt;
&lt;li&gt;Continuing to rely on some of our sub-systems/dependencies will make it hard for us to work efficiently.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Some of the solutions we&amp;rsquo;re working towards currently are these:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The dependency problem has been solved by itself to some degree, as IPFS and other libraries are now more mature.&lt;/li&gt;
&lt;li&gt;Docker is a great deployment tool, that will replace the manual build process for DApps.&lt;/li&gt;
&lt;li&gt;We&amp;rsquo;re switching over to a Node.js-based platform, so that working with dapps becomes more natural to people, mostly for those that are good (or even great) application makers, but haven&amp;rsquo;t really gotten into decentralized stuff yet. The Node.js platform will also include browser-based blockchain creation and management.&lt;/li&gt;
&lt;li&gt;We&amp;rsquo;re switching over to the new Solidity contract writing language that is currently being developed.&lt;/li&gt;
&lt;li&gt;We will be moving portions of the Thelonious client over to &lt;code&gt;Tendermint&lt;/code&gt;, and some other things.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Eris Industries does the CHYP fintech podcast</title>
      <link>http://localhost/2015/03/27/chyp/</link>
      <pubDate>Fri, 27 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/03/27/chyp/</guid>
      <description>&lt;p&gt;Listen to &lt;a href=&#34;http://www.chyp.com/podcasts/preston-byrne-eris-industries-27032015/&#34; target=&#34;_blank&#34;&gt;the whole thing&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>