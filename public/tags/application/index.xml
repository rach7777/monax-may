<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
&lt;?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Application on Monax Industries</title>
    <link>http://localhost/tags/application/</link>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 08 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost/tags/application/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Legal Entity Global Ledger - How to liberate public data (with chains)</title>
      <link>http://localhost/2016/04/08/lei-global-ledger/</link>
      <pubDate>Fri, 08 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2016/04/08/lei-global-ledger/</guid>
      <description>

&lt;p&gt;One of the key aspects of Blockchain / Distributed Ledger (DL) Technology is the ability to merge public key authentication of information with a resilient, distributed database. In this piece, which outlines an application Eris is building, I talk about this idea in greater detail using publicly available data from the Legal Entity Identifier (LEI) initiative.&lt;/p&gt;

&lt;p&gt;There is no shortage of news, blog posts, and whitepapers foreshadowing the disruption of entire industries by &lt;em&gt;blockchains&lt;/em&gt; and describing a myriad of potential use cases that will run more efficiently on a decentralized architecture. What is striking is that almost all prominently discussed topics focus on processes and scenarios with a fair amount of complexity and/or attempt to replace very established procedures. At first, this seems logical since the potential for efficiency gains usually increases with the complexity of the use case, but it seems we&amp;rsquo;re rushing too far ahead and have forgotten about one fundamental formula that has always proven helpful when venturing into new territory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Start small, learn what works and what doesn&#39;t, and build up from there
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We at Eris Industries are very much about &amp;ldquo;less talking, more doing&amp;rdquo; as subscribers to our blogs and Twitter account can surely attest. So, in this article I would like to hone in on a &amp;lsquo;real world&amp;rsquo; use case that exemplifies what can be done with blockchains &lt;strong&gt;today&lt;/strong&gt;.
It is very understandable that people may feel they should wait and gain more experience and confidence with this fairly new technology before investing much effort into it. Even when investments (usually in the form of POCs or in-house / consortia experimentation) are made, many might hesitate to build and deploy &lt;em&gt;real&lt;/em&gt; solutions on shared ledgers until potentially a &amp;lsquo;&lt;em&gt;winner&lt;/em&gt;&amp;rsquo; emerges, be that a blockchain design or a common industry platform. However, I would like to show here that the technological components are mature enough, especially in Open Source, to extract value and start building &lt;strong&gt;now&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Transformational ROI from blockchain for corporates will take a good number of years. Smaller bits of ROI can be achieved tomorrow if you have the right buy in and strategy and partners.&amp;rdquo;
&lt;a href=&#34;http://www.sytaylor.net/2015/11/21/10-things-you-should-know-about-blockchains&#34; target=&#34;_blank&#34;&gt;Simon Taylor, Nov. 2015&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When carefully selecting use cases, opportunity opens up to implement something &lt;strong&gt;beyond POCs&lt;/strong&gt; that contributes to the learning experience at the same time.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Blockchains are a new type of hammer that can hit new nails. We don’t fully understand what the new nails look like yet, so let’s keep hitting old nails until we understand the new hammer. So it makes sense to apply this technology to well understood problems, even if they can be solved using existing technology.&amp;rdquo;
&lt;a href=&#34;http://bitsonblocks.net/2016/04/04/what-you-get-for-free-with-blockchains/&#34; target=&#34;_blank&#34;&gt;Antony Lewis, April 2016&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Blockchains by design come with a set of features that is desirable in most (enterprise) applications, even if it&amp;rsquo;s &lt;em&gt;merely&lt;/em&gt; to reduce operational expenses for hosting, failover, or disaster recovery. The availability of blockchain platforms and toolkits further reduces costs of building custom solutions.&lt;/p&gt;

&lt;p&gt;So, shall we dive into a discovery and selection process of what we should build?&lt;/p&gt;

&lt;p&gt;First, in order to increase the chances of arriving at a level of production-readiness let&amp;rsquo;s avoid any of the big &lt;em&gt;unresolved&lt;/em&gt; challenges of blockchains/DLT, namely:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;High Transaction Volume&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Confidential Transactions&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;End-User Identity&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Second, the number of participants profiting from a blockchain solution should be as high as possible, after all it&amp;rsquo;s a &lt;em&gt;shared&lt;/em&gt; ledger. As detailed by Gideon Greenspan in articles from &lt;a href=&#34;http://www.multichain.com/blog/2015/10/private-blockchains-shared-databases&#34; target=&#34;_blank&#34;&gt;October&lt;/a&gt; and &lt;a href=&#34;https://www.linkedin.com/pulse/avoiding-pointless-blockchain-project-gideon-greenspan&#34; target=&#34;_blank&#34;&gt;November&lt;/a&gt; of last year, blockchain technology as a shared writable data store has private as well as public utility, but the &lt;strong&gt;public domain&lt;/strong&gt; should be considered as a category that trumps most other checkpoints.&lt;/p&gt;

&lt;p&gt;Third, to be mindful of the &lt;em&gt;start small, build up&lt;/em&gt; mantra it should be our goal to identify a simple use case upon which more complex scenarios can be built. This means we&amp;rsquo;re looking for low complexity in the &lt;code&gt;business processes at a network level&lt;/code&gt;, i.e. a small number of interactions between disparate entities in a low-trust environment, yet delivering value through the shared content. Two pillars underpinning many higher level business processes are &lt;strong&gt;Master Data Management&lt;/strong&gt; and &lt;strong&gt;Reference Data Management&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Without further ado &amp;hellip; meet the candidate to be &amp;lsquo;&lt;em&gt;ledgerized&lt;/em&gt;&amp;rsquo;.&lt;/p&gt;

&lt;h2 id=&#34;the-legal-entity-identifier-lei&#34;&gt;The Legal Entity Identifier (LEI)&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;LEI data is freely available, easy to access, without restrictions on redistribution or licensing. [&amp;hellip;] Future phases will require a new &amp;lsquo;utility strength&amp;rsquo; global infrastructure, which will have similar robustness, reliability, and business continuity capabilities as other financial market infrastructures, such as securities settlement systems and trade repositories.&amp;rdquo;
From the original &lt;a href=&#34;http://www.sifma.org/uploadedfiles/issues/technology_and_operations/legal_entity_identifier/lei-preliminary-scope-plan.pdf&#34; target=&#34;_blank&#34;&gt;2012 scope plan&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The LEI initiative emerged out of a request by the &lt;a href=&#34;http://www.g20.org/&#34; target=&#34;_blank&#34;&gt;G20&lt;/a&gt; to the &lt;a href=&#34;http://www.fsb.org/&#34; target=&#34;_blank&#34;&gt;FSB&lt;/a&gt; in 2011 to establish a globally unique identifier for legal entities, primarily to increase transparency of their involvement in global financial transactions (something that could&amp;rsquo;ve doubtlessly been of value when sifting through the mess of a global meltdown of the financial system, but let&amp;rsquo;s not get into that &amp;hellip;).
The LEI system as it exists today operates in three tiers:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The Legal Entity Identifier Regulatory Oversight Committee (&lt;a href=&#34;http://www.leiroc.org&#34; target=&#34;_blank&#34;&gt;LEI ROC&lt;/a&gt;), comprised of more than 50 regulatory institutions worldwide and a variety of public sector stakeholders, monitors the system.&lt;/li&gt;
&lt;li&gt;The Global Legal Entity Identifier Foundation (&lt;a href=&#34;https://www.gleif.org/&#34; target=&#34;_blank&#34;&gt;GLEIF&lt;/a&gt;) is in charge of governance.&lt;/li&gt;
&lt;li&gt;Local Operating Units (LOUs) are accredited agencies that function as the beachhead in local jurisdictions / countries to render services around the LEI, e.g. issuing LEIs to local businesses.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Briefly a few facts about the LEI system:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is an LOU&amp;rsquo;s primary responsibility to certify that the information about a company (legal name, registered address, headquarters address, entity status, etc.) is valid and current. To do so it sometimes relies on services of third-party companies like &lt;a href=&#34;https://www.avoxdata.com&#34; target=&#34;_blank&#34;&gt;Avox&lt;/a&gt; (a subsidiary of &lt;a href=&#34;http://www.dtcc.com&#34; target=&#34;_blank&#34;&gt;DTCC&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;https://www.gmeiutility.org/&#34; target=&#34;_blank&#34;&gt;GMEI Utility&lt;/a&gt; operated by the DTCC in collaboration with SWIFT is by far the largest such LOU in terms of issued LEIs (see diagram below).&lt;/li&gt;
&lt;li&gt;An LEI record possesses a lifecycle that goes through different state changes (active|not_active, current|not_current, etc.) and also expires if not renewed. This lifecycle is supported by a simple business process / workflow.&lt;/li&gt;
&lt;li&gt;LOUs, third-party verifiers, and legal entities themselves participate in this workflow. For example, a company can register, update, or dispute their own data (which still requires verification or approval by the LOU) or request the LOU to do so on their behalf.&lt;/li&gt;
&lt;li&gt;The LEI format is based on ISO Standard 17442 and follows Financial Stability Board (&lt;a href=&#34;http://www.fsb.org/&#34; target=&#34;_blank&#34;&gt;FSB&lt;/a&gt;) specifications. The LEI consists of a 20-digit alphanumeric code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/LEI-Issuer-Statistics-GLEIF.png&amp;rsquo; | img }}
&lt;div style=&#34;font-size: smaller; text-align: center&#34;&gt;Source: &lt;a href=&#34;https://www.gleif.org/en/lei-data/global-lei-index/lei-statistics&#34; target=&#34;_blank&#34;&gt;https://www.gleif.org/en/lei-data/global-lei-index/lei-statistics&lt;/a&gt;, 28-Mar-2016&lt;/div&gt;
&lt;br/&gt;&lt;/p&gt;

&lt;p&gt;Each of the certified issuance agencies (LOUs) in the above list owns, runs, and maintains its own infrastructure (servers, web application, and centralized database) to offer LEI issuance and search capabilities. The delta of changes at an individual local agency is uploaded and consolidated into the global &amp;ldquo;golden copy&amp;rdquo; that is managed by the GLEIF as depicted in the following diagram.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/LEI-current.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;The cost of running and maintaining the LEI infrastructure is probably not very high compared to solutions with higher transactional volume. The individual LOUs cover parts of their costs by charging fees for registration and other maintenance transactions. As of this writing the combined fees for registering a new LEI are approximately $220 dollars.&lt;/p&gt;

&lt;p&gt;The LEI system went live in 2014, the same year &lt;code&gt;blockchain&lt;/code&gt; as a general concept separated from Bitcoin and entered the spotlight. It is an intriguing thought experiment - now that the capabilities of blockchains are more widely discussed - what this system would look like had it been implemented on a distributed, participatory architecture.&lt;/p&gt;

&lt;p&gt;So, let&amp;rsquo;s look at this scenario in more detail and examine the stages of implementing the LEI system as a global shared ledger.&lt;/p&gt;

&lt;h2 id=&#34;the-lei-global-ledger&#34;&gt;The LEI Global Ledger&lt;/h2&gt;

&lt;p&gt;Since its early days, Eris Industries has been advocating the utility of a blockchain as a &lt;strong&gt;data management tool&lt;/strong&gt; with unique properties: It stores both its &lt;code&gt;state &amp;amp; transition logic&lt;/code&gt; (simply put, it houses the data records including the rules that govern them, i.e. authority to access and change as well as the legality of changes). Furthermore, a blockchain distinguishes itself from previously known distributed database approaches by not having a central owner or administrator.&lt;/p&gt;

&lt;p&gt;A blockchain therefore allows us to store and share a single version of the &amp;lsquo;&lt;em&gt;truth&lt;/em&gt;&amp;rsquo; about the state of all LEI data as well as encode and enforce the validity of changes to this data via smart contract logic. All while the infrastructure is jointly operated by its network participants.
&lt;a name=&#34;permissioned&#34;&gt;&amp;nbsp;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;permissioned-blockchains-and-ownership&#34;&gt;Permissioned blockchains and ownership&lt;/h3&gt;

&lt;p&gt;At this point it is important to take a detour and explain why this particular use case requires what is known as a &lt;em&gt;permissioned&lt;/em&gt; blockchain which necessarily introduces a level of control and ownership.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Control&lt;/strong&gt; is expressed in the permissioning layer which authorizes peers to connect to the network in different roles. For example, the group of peers responsible for validating transactions and coming to consensus on the global state of the system should be configurable as a white list of known actors. The same applies to the peers specifically allowed to commit changes to the ledger; every node on the network with &amp;lsquo;write access&amp;rsquo; to the ledger needs to be identifiable and associated with a known participant, for example, a local issuing agency (LOU). However, due to the public nature of the data, read access should not be restricted at all and anyone should be allowed to connect a &amp;lsquo;read-only&amp;rsquo; peer. This approach of &lt;code&gt;permissioned &#39;write&#39; and public &#39;read&#39;&lt;/code&gt; is sometimes also referred to as &lt;em&gt;hybrid&lt;/em&gt; blockchain.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ownership&lt;/strong&gt; needs to be established in the form of a trusted entity to:
a) guarantee the availability of the network, e.g. by running the minimum number of nodes required to keep the system available
b) function as the trusted custodian of the smart contract logic (including versioning and updates) and provide legal liability&lt;/p&gt;

&lt;p&gt;It is likely that many shared ledger solutions, especially the ones touching upon the public domain, are going to require a certain form of centralized control to maintain and version the ledger software itself as well as the smart contract code running on it. For different use cases one can imagine non-profit or publicly funded organizations, governments, municipalities, etc. to assume such responsibilities in the future.&lt;/p&gt;

&lt;p&gt;In the financial realm there already are a number of organizations that are well positioned to fulfill the role of becoming future shepherds of decentralized, distributed infrastructure and the programs running on this infrastructure: &lt;a href=&#34;http://www.fsb.org/&#34; target=&#34;_blank&#34;&gt;FSB&lt;/a&gt;, &lt;a href=&#34;http://www.sifma.org/&#34; target=&#34;_blank&#34;&gt;SIFMA&lt;/a&gt;, &lt;a href=&#34;http://www2.isda.org/&#34; target=&#34;_blank&#34;&gt;ISDA&lt;/a&gt;, &lt;a href=&#34;http://www.dtcc.com&#34; target=&#34;_blank&#34;&gt;DTCC&lt;/a&gt;, &lt;a href=&#34;https://www.swift.com/&#34; target=&#34;_blank&#34;&gt;SWIFT&lt;/a&gt; &amp;hellip; to name a few.
Other sectors, such as healthcare, have similar umbrella organizations and for many other use cases that are going to be identified as potential distributed, shared ledger applications the local or federal government might be the default candidate to play the role of the &amp;lsquo;&lt;em&gt;trusted custodian&lt;/em&gt;&amp;rsquo;. Or will we create &lt;a href=&#34;https://en.wikipedia.org/wiki/Decentralized_autonomous_organization&#34; target=&#34;_blank&#34;&gt;DAO&lt;/a&gt;s for this? If Bitcoin has taught us one thing: Creating a blockchain protocol appears to be easier than governing it.&lt;/p&gt;

&lt;p&gt;In his 2015 &lt;a href=&#34;http://www.slideshare.net/wmougayar/blockchain-2015-analyzing-the-blockchain-in-financial-services&#34; target=&#34;_blank&#34;&gt;presentation&lt;/a&gt; William Mougayar stated:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Blockchain and old constructs, such as clearing houses and private exchange networks (SWIFT, CCP, FIX, DTCC) are like oil and water: they will not mix well because one is based on centrally trusted intermediaries, and the other is based on ‘no’ intermediaries and peer-to-peer trust.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With reference to the points made above, I respectfully beg to differ and recent publications appear to confirm that organizations like the DTCC are beginning to open up to the exact same ideas outlined in this article:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;DTCC’s viewpoint is that basic industry master data is an ideal candidate for improvement using decentralized consensus, rule standardization and auditable change history. This information is used by the entire industry by definition, and the lack of consistency and quality is a recurrent industry problem. Further, this could be constructed in such a manner that multiple firms can be authorized as data submitters, there can be many data validators and the majority of users will be data consumers.&amp;rdquo;
&lt;a href=&#34;http://www.dtcc.com/~/media/Files/PDFs/DTCC-Embracing-Disruption.pdf&#34; target=&#34;_blank&#34;&gt;DTCC&amp;rsquo;s &amp;lsquo;Embracing Disruption&amp;rsquo;, Jan. 2016&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, let&amp;rsquo;s get back to the LEI ledger implementation &amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;architecture-overview&#34;&gt;Architecture Overview&lt;/h3&gt;

&lt;p&gt;The diagram below outlines the components of a single peer node of such a network built using the Eris Platform.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/LEI-Node-Architecture.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;https://blog.erisindustries.com/business/2016/04/03/wtf-is-eris/&#34; target=&#34;_blank&#34;&gt;Eris Platform&lt;/a&gt; is a free and open source (FOSS) platform that facilitates building, testing, and running smart contract applications. It supports the notion of a &lt;a href=&#34;https://docs.erisindustries.com/tutorials/advanced/services-making/&#34; target=&#34;_blank&#34;&gt;service&lt;/a&gt; as a single module that can be started, stopped, and monitored easily. The LEI application and the parts comprising a peer node participating in the LEI Global Ledger network are wrapped inside such a service.
&lt;a href=&#34;https://erisindustries.com/components/erisdb/&#34; target=&#34;_blank&#34;&gt;Eris:DB&lt;/a&gt; is the permissioned blockchain implementation (see &lt;a href=&#34;#permissioned&#34;&gt;Permissioned Blockchains&lt;/a&gt; above) based on the &lt;a href=&#34;https://www.ethereum.org/&#34; target=&#34;_blank&#34;&gt;Ethereum&lt;/a&gt; Virtual Machine for smart contract execution and &lt;a href=&#34;http://tendermint.com/&#34; target=&#34;_blank&#34;&gt;Tendermint&lt;/a&gt; for efficient, non-forking &lt;a href=&#34;http://tendermint.com/posts/tendermint-vs-pbft/&#34; target=&#34;_blank&#34;&gt;PBFT&lt;/a&gt; consensus. The application consists of a number of service modules facilitating the interaction with the LEI blockchain, i.e. providing access to data on the chain as well as allowing the application to react to events in the network. Furthermore, a distributed data store is used to redundantly store the entire legal entity record. Note that the smart contract only contains the LEI itself, the data fields used in the smart contract logic, as well as the reference hash to the stored record. All legal entity data is also kept in a traditional database that functions as a cache and is kept in sync with the state registered in the blockchain. This supports the ability to index and search the content.
Essentially, this application (in its intended final state) would behave the same way and provide the same services as the GLEIF&amp;rsquo;s global search capacity combined with an LOU&amp;rsquo;s registration and maintenance capability (if the peer owner has been permissioned with a write access role!), but running distributed on all nodes of the network instead of a centralized server. &amp;hellip; Good bye backups, fail-over, and disaster recovery! You&amp;rsquo;re welcome DevOps!&lt;/p&gt;

&lt;p&gt;The following sections outline the stages that can enhance and eventually transform the existing LEI system to a distributed ledger. Stages 1-3 are designed to be completely non-disruptive to the current LEI system. During these stages the LEI Global Ledger is operated in parallel to the existing infrastructure with increasing effort and inclusion of participants. This allows interested parties to share in the experience of a live blockchain application with real data; all with a minimal investment and no risk. Stage 4 (and beyond) requires definite buy-in and sponsorship by the stakeholders of the LEI eco-system due to the declared intention to eventually replace the current centralized infrastructure with a distributed, blockchain-based one.
&lt;a name=&#34;stage1&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;stage-1&#34;&gt;Stage 1&lt;/h3&gt;

&lt;p&gt;The global LEI data is freely available for download and an update is published daily. In this first stage there is no buy-in or support from any participant in the existing system. Eris Industries is responsible for downloading the daily updates and cryptographically signing the transactions that push these updates into the LEI ledger.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/LEI-Net-Phase-1.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;The immediate effect for any consumer operating a &amp;lsquo;read-only&amp;rsquo; peer is that access to LEI data is changed from a &lt;em&gt;pull&lt;/em&gt; to a &lt;em&gt;push&lt;/em&gt; mechanism.&lt;/p&gt;

&lt;p&gt;This stage has been implemented by Eris Industries! Please see the &lt;a href=&#34;#getinvolved&#34;&gt;end of the article&lt;/a&gt; for instructions how to participate.&lt;/p&gt;

&lt;h3 id=&#34;stage-2&#34;&gt;Stage 2&lt;/h3&gt;

&lt;p&gt;In stage 2 an entity with authorized access to the global LEI database would assume responsibility for vouching for the data veracity by signing transactions to commit updates to the ledger. The GLEIF seems to be in a perfect position to do so. The transition to this stage is as easy as hooking up a few database triggers to capture update/insert events and forward these to the blockchain.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/LEI-Net-Phase-2.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;h3 id=&#34;stage-3&#34;&gt;Stage 3&lt;/h3&gt;

&lt;p&gt;The same mechanism of hooking into a database as described in stage 2 is leveraged here, but it would be the LOUs themselves that propagate data into the blockchain and the central synchronization point at the global GLEIF database can be removed. With this stage we&amp;rsquo;re closing in on the LEI ledger allowing a near real time view of the LEI records as events get reported to the ledger much closer to their points of origin. At any time the LEI ledger would provide a more accurate view of the entire system than the daily consolidated file download can provide. A beneficial side effect of the LOUs cryptographically signing their own data commits is that they become identifiable via their signatures in the ledger&amp;rsquo;s audit trail.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/LEI-Net-Phase-3.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;h3 id=&#34;stage-4&#34;&gt;Stage 4&lt;/h3&gt;

&lt;p&gt;Assuming a successful exploration and validation of the LEI ledger in stages 1-3, a blockchain-based LEI system might be deemed feasible and worthwhile considering as a full replacement of the centralized infrastructure.
However, before the latter can simply be switched off, there is some effort involved to implement and test the integration points to any centralized systems that would remain in place and now need to interact with the ledger&amp;rsquo;s API.
At the end of stage 4, all core participants of the LEI lifecycle would be fully onboarded to participate in the smart-contract-backed workflow purely through signed transactions. Known participants include all LOUs and, if applicable, third-party data verification services.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/LEI-Net-Phase-4.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;h2 id=&#34;beyond-stage-4&#34;&gt;Beyond Stage 4&lt;/h2&gt;

&lt;p&gt;Potential future enhancements to the system beyond stage 4 include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Legal entities participating directly in the workflow, verifying the correctness and signing off on their own data for renewal. This would require a more common and pervasive use of Public Key Infrastructure (PKI). It is not very difficult to foresee that a company having gone through a verification process to prove its identity might want to register more than the legal address in the LEI ledger, e.g. their public keys. Quite sophisticated B2B processes can be built from there!&lt;/li&gt;
&lt;li&gt;Another thought experiment involves the possibility to introduce free market economic principles into the system and open up the fee collection to competition. A legal entity could simply post a registration request with a certain fee associated as a reward that can be claimed by a third party for rendering services successfully.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This last one is admittedly a bit far-fetched and has legal implications that cannot easily be solved with a smart contract alone (yet), so let&amp;rsquo;s leave it at this.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s be realistic &amp;hellip; the existing LEI system works sufficiently well, so why would you even want to attempt to replace it? &amp;ldquo;Because we can&amp;rdquo; is not an answer that will convince any of the stakeholders!&lt;/p&gt;

&lt;p&gt;My main motivation for writing this post was to get people that are interested in blockchains, smart contracts, and distributed applications thinking. To show what&amp;rsquo;s possible and that we don&amp;rsquo;t have to wait years to build something meaningful, something that provides value to a large audience.&lt;/p&gt;

&lt;p&gt;I hope I was able to demonstrate the viability of transforming an existing system like the LEI from a number of loosely joined, centralized data islands to a shared distributed ledger / smart contract application. All with very minimal investment and low to no risk in the early stages. A chance for people to experience a real blockchain application first-hand.&lt;/p&gt;

&lt;p&gt;You might be thinking that there is a risk of &amp;ldquo;blockchain (or vendor) lock-in&amp;rdquo;. However, running the proposed solution side-by-side with the existing LEI system eliminates any risk (for the time being) of betting on the wrong blockchain. Even if at a later time a different blockchain implementation becomes more suitable, one of the benefits of this design is that control is introduced via trusted custodians who have the authority to perform a data migration by recommitting all historical transactions to a new ledger, albeit the original transaction timestamps would likely get replaced. Downstream systems would experience minimal to no disruption as long as a standardized data format is adhered to (e.g. the LEI system defines an XML Schema specification).&lt;/p&gt;

&lt;p&gt;If the benefits of maintaining a globally unique registry, like the LEI, on a shared distributed ledger as a single source of truth can be proven and established, then it is not difficult to repeat the same for data with similar characteristics, e.g. the &lt;em&gt;Unique Product Identifier&lt;/em&gt; (&lt;a href=&#34;http://www2.isda.org/functional-areas/technology-infrastructure/data-and-reporting/identifiers/&#34; target=&#34;_blank&#34;&gt;UPI&lt;/a&gt;). The success of such initiatives would unlock more sophisticated use cases that require a deeper involvement of existing market participants: how about *&lt;strong&gt;Corporate Actions* reporting and validation&lt;/strong&gt; on a shared ledger?&lt;/p&gt;

&lt;p&gt;Verifiable public data in a trusted, distributed, participatory infrastructure can foster open innovation and unlock future use cases. Replacing existing (centrally run and controlled) services with distributed, community-supported ones would allow public, private, and especially governmental institutions to &amp;ldquo;outsorce&amp;rdquo; IT infrastructure to their own communities or citizens.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Where individuals, businesses and governments are constantly locked in a battle against bugs, fraud and malicious actors, blockchains propose an alternative. […] The paradigm shift blockchains represent can offer true data integrity, advanced digital identity systems and a new way for business to offer transparency for audit alongside access for third parties.&amp;rdquo;
&lt;a href=&#34;http://www.information-age.com/technology/security/123460713/how-blockchains-are-redefining-cyber-security&#34; target=&#34;_blank&#34;&gt;Ben Rossi, Dec. 2015&lt;/a&gt;
&lt;a name=&#34;getinvolved&#34;&gt;&amp;nbsp;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Remember&lt;/strong&gt;: Eris Industries already built the LEI Global Ledger as depicted in the &lt;a href=&#34;#stage1&#34;&gt;Stage 1 diagram&lt;/a&gt; and we&amp;rsquo;re intending to voluntarily run this network for the time being, so that others get a chance to experience what a distributed, smart-contract-enabled solution feels like.
If you&amp;rsquo;re interested in this use case and its implementation, e.g. if you&amp;rsquo;d like to experiment with a read-only peer node or want to develop a business case out of this solution, please don&amp;rsquo;t hesitate to contact Eris Industries via &lt;a href=&#34;mailto:contact@erisindustries.com&#34; target=&#34;_blank&#34;&gt;email&lt;/a&gt; or Twitter handle &lt;a href=&#34;https://twitter.com/eris_ltd&#34; target=&#34;_blank&#34;&gt;@eris_ltd&lt;/a&gt;. Please voice your opinion (good or bad) and feedback on this article by tweeting it with the hashtag &lt;code&gt;#leiledger&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We are going to collect requests by interested parties and intend to make the &lt;code&gt;LEI Net Service&lt;/code&gt; available as part of one of the next Eris platform releases.
The smart contracts controlling the LEI lifecycle and workflow can be used as the basis to implement similar data repositories. They are being made available to subscribers of the &lt;a href=&#34;https://erisindustries.com/products/&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Eris Contracts Library&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;span style=&#34;font-size: smaller;&#34;&gt;Disclaimer: Diagram graphics by &lt;a href=&#34;https://www.flickr.com/photos/timothymorgan/sets/1615269&#34; target=&#34;_blank&#34;&gt;Timothy Morgan&lt;/a&gt; redistributed under &lt;a href=&#34;https://creativecommons.org/licenses/by/2.0/&#34; target=&#34;_blank&#34;&gt;CC License&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On Eris and Tendermint: Application and Consensus</title>
      <link>http://localhost/2016/03/02/eris-and-tendermint/</link>
      <pubDate>Wed, 02 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2016/03/02/eris-and-tendermint/</guid>
      <description>

&lt;p&gt;At Eris and Tendermint, we&amp;rsquo;re often asked: &amp;ldquo;what is the difference between Eris and Tendermint?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Apart from being two different companies and two different products, the simple answer boils down to application and consensus.&lt;/p&gt;

&lt;p&gt;Eris:db is the application layer for blockchain applications. It&amp;rsquo;s the backbone for deploying and interacting with your application logic.&lt;/p&gt;

&lt;p&gt;Tendermint is the consensus layer. It&amp;rsquo;s the engine that drives your application, once built, forward in time and keeps it in synch.&lt;/p&gt;

&lt;p&gt;As an application layer, Eris:db has opinions about what a blockchain should look like. As a consensus layer, tendermint has opinions about how the consensus should operate.&lt;/p&gt;

&lt;p&gt;It is much like the difference between Wordpress (a content management platform) and Apache (a web server); Wordpress is an application platform that has opinions about how to tie together PHP/node &amp;amp; MySQL. Apache is a web server that has opinions about, well, doing what servers do.&lt;/p&gt;

&lt;p&gt;Some developers build custom applications with Wordpress. Indeed, Wordpress makes it easy &lt;em&gt;by making assumptions for you&lt;/em&gt;. Others might not like these assumptions and thus build applications from scratch that talk directly to Apache. Don&amp;rsquo;t like Apache? Use Nginx with Wordpress instead. Don&amp;rsquo;t like Wordpress? Go and use Liferay or Zotonic. As separate modules, the developer has choice and flexibility.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/eris-tendermint.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;Admittedly, the analogy&amp;rsquo;s not a perfect one - in our view, a content management system such as Wordpress is really more like &lt;a href=&#34;https://erisindustries.com/components/erisdb/&#34; target=&#34;_blank&#34;&gt;eris:db&lt;/a&gt;, whereas &lt;a href=&#34;https://erisindustries.com/components/eriscli/&#34; target=&#34;_blank&#34;&gt;eris:cli&lt;/a&gt; is a more comprehensive blockchain application and database management system.&lt;/p&gt;

&lt;p&gt;This is where, in case you haven&amp;rsquo;t already noticed, eris is all-in on &lt;a href=&#34;https://www.docker.com/&#34; target=&#34;_blank&#34;&gt;Docker&lt;/a&gt;. In the future, this will allow eris:db to plug into any type of consensus. Additionally, eris:cli should simplify the workflow of developing a Tendermint chain &lt;em&gt;sans&lt;/em&gt; eris:db, over &lt;a href=&#34;http://tendermint.com/posts/tendermint-socket-protocol/&#34; target=&#34;_blank&#34;&gt;tmsp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another way of looking at it might be the difference between an empty toolbox and a Swiss Army Knife. Tendermint gives you a really nice toolbox. You can take this box and put whatever you want in it, and the box will keep your &lt;a href=&#34;https://www.youtube.com/watch?v=jl17CYYSzUw&#34; target=&#34;_blank&#34;&gt;stuff&lt;/a&gt; together and let you get on with the business of building your useful application.&lt;/p&gt;

&lt;p&gt;Eris, by contrast, gives you a ready-to-go Swiss Army knife with plenty of useful tools and services (including BigChainDB, ZCash, Bitcoin, Ethereum, OpenBazaar, Tendermint, and ErisDB). Some you might not want, so don&amp;rsquo;t use them. If you want new ones added, take off the baseplate and add the new tool. And since eris:db may not suit your purposes, building a chain that &lt;a href=&#34;https://github.com/eris-ltd/eris-by-example/blob/master/erisdb_tmsp/run.sh&#34; target=&#34;_blank&#34;&gt;talks directly to Tendermint core over tmsp&lt;/a&gt; might be what you want.&lt;/p&gt;

&lt;p&gt;Either way, eris:cli is intended to make running both eris:db and Tendermint simple. If it isn&amp;rsquo;t, please take to &lt;a href=&#34;https://twitter.com/eris_ltd&#34; target=&#34;_blank&#34;&gt;twitter&lt;/a&gt; and tell us what you&amp;rsquo;d like to see.&lt;/p&gt;

&lt;p&gt;We made these design decisions because &lt;a href=&#34;http://cointelegraph.com/news/proof-of-work-proof-of-stake-and-the-consensus-debate&#34; target=&#34;_blank&#34;&gt;proof-of-work consensus makes zero sense&lt;/a&gt; for enterprise blockchain applications.&lt;/p&gt;

&lt;h3 id=&#34;marmots-and-mint&#34;&gt;Marmots and mint&lt;/h3&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/marmots-and-mint.jpg&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;Eris Industries&amp;rsquo; relationship with Tendermint started shortly after we released our Alpha product in December of 2014 (thelonious/decerver), where we&amp;rsquo;d forked Ethereum, ripped the guts out of its consensus and replaced it with a bunch of smart contracts in order to create Eris:DB&amp;rsquo;s predecessor - a design that was, the first (and for about six months, the only) permissioned blockchain in existence. Those of you who have been following the company for some time will remember we initially called it &amp;ldquo;Thelonious.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;But a fork of an existing proof-of-work design was not going to cut it for us. So Ethan went searching for an alternative and about two months later, he stumbled on Tendermint.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;ldquo;Byzantine Fault Tolerant consensus. With Proof-of-Stake.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;Awesome,&amp;rdquo; thought Ethan. Shortly thereafter Eris Industries and Tendermint began collaborating on the Tendermint codebase and, over the next few months, &lt;a href=&#34;https://erisindustries.com/components/erisdb/&#34; target=&#34;_blank&#34;&gt;eris:db&lt;/a&gt; was born.&lt;/p&gt;

&lt;h3 id=&#34;towards-modularity&#34;&gt;Towards modularity&lt;/h3&gt;

&lt;p&gt;Intimately linked to &lt;a href=&#34;https://github.com/tendermint/tendermint/wiki&#34; target=&#34;_blank&#34;&gt;tendermint consensus&lt;/a&gt;, eris:db has a handful of application state features which reside over and above the consensus layer. This lack of modularity is certainly not ideal, as Casey elaborates &lt;a href=&#34;https://eng.erisindustries.com/explainers/2015/12/31/on-blockchain-clients-in-2016/&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt;, so we began working to refactor Tendermint.&lt;/p&gt;

&lt;p&gt;Although we didn&amp;rsquo;t know it, things were heading this way for awhile. It was a particularly memorable night in Tel-Aviv during marmot dev retreat this past fall where Ethan laid it all out for me.&lt;/p&gt;

&lt;p&gt;From the tips of his fingers the very next day:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://eng.erisindustries.com/explainers/2016/02/22/apps-and-consensus/&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;On Applications and Consensus&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The tl;dr (though you should definitely read it!) for the above is: Two separate processes. Two separate states. Choose your application. Choose your consensus. And because consensus is at a lower level, it is perhaps (in some cases - not others) more important to get right.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s through that lens that we announce today, with mixed emotion, that Ethan will be leaving Eris to co-found Tendermint as CTO. Much like the codebase is being refactored, so are the companies. And we&amp;rsquo;ll certainly be crossing paths again. Indeed, we&amp;rsquo;ve known each other for 5 years, lived together for 3, worked in the same research lab, and have pretty much been shooting the intellectual shit since we first met. And after I dropped out of grad school (because, you know, &lt;a href=&#34;https://www.youtube.com/watch?v=ru-Z5kvd9js&#34; target=&#34;_blank&#34;&gt;Bitcoin&lt;/a&gt; ), he taught me how to code. Bitcoin is cool, no doubt (decentralized money and all), but when it comes down to it, the most exciting aspect of this technology is a plurality of chains with a plurality of consensus&amp;rsquo;. And the ongoing refactor (see again &lt;a href=&#34;https://eng.erisindustries.com/explainers/2016/02/22/apps-and-consensus/&#34; target=&#34;_blank&#34;&gt;On Applications and Consensus&lt;/a&gt;) will help achieve this goal.&lt;/p&gt;

&lt;p&gt;Although this ongoing transition has been a looming burden on several of us, I&amp;rsquo;m actually quite excited for what the future will bring. Even more so following the week Ethan and I spent in San Francisco with Jae and Dustin prior to &lt;a href=&#34;http://www.theblockchainconference.com/&#34; target=&#34;_blank&#34;&gt;The Block Chain Conference&lt;/a&gt;. We discussed at length the distinctions described in this post which should, moving forward, clarify the entrypoint for both developers and business folk looking to build out blockchain applications. I&amp;rsquo;ll offer another analogy: Eris is a mechanic shop (read: Formula 1 pitstop) with most parts of the car built for you and Tendermint is the manufacturer of Ferrari engines. There you have it: application and consensus.&lt;/p&gt;

&lt;p&gt;This shift towards seperation of the application and consensus will likely reap many benefits for the crypto ecosystem as a whole. The Bitcoin community is starting to realize this. In the words of &lt;a href=&#34;https://medium.com/@muneeb/forking-a-network-86d1b766d38d#.a5k2kajx3&#34; target=&#34;_blank&#34;&gt;Muneeb Ali&lt;/a&gt;:&lt;/p&gt;
We’ll need to cleanly separate consensus-breaking code from non-consensus breaking code and have formal methods to verify implementations against protocol specifications.

&lt;p&gt;So what does this look like from a technical perspective? Bear with us as the design considerations are being fleshed out. Pictured below is an early conceptual overview of how we view the interaction between the various components. We&amp;rsquo;ll have more to say about this in the coming months. Stay tuned!&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/eris-chains-overview.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;How does this fit in with the various components of the stack you already know and love? Awhile back I &lt;a href=&#34;https://twitter.com/cerebralbosons/status/682691657473503233&#34; target=&#34;_blank&#34;&gt;tweeted&lt;/a&gt; a first pass on visualizing the stack as a whole. Here&amp;rsquo;s v2 with a few little additions. With all the moving pieces involved, it ought to be clear why docker is the right choice, despite the pain points.&lt;/p&gt;

&lt;p&gt;Not much will change on the UX of eris:cli, other than additional modularity when it comes to consensus, i.e., ability to &amp;ldquo;plug into&amp;rdquo; whichever consensus you&amp;rsquo;d like. This&amp;rsquo;ll allow for much greater experimentation moving forward, as we &amp;ldquo;transition from first-generation blockchain tech to second-generation blockchain tech&amp;rdquo; to paraphrase IBM&amp;rsquo;s John Wolpert keynote from the conference mentioned above.&lt;/p&gt;

&lt;p&gt;The marmots are excited. Are you?&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/eris-stack-v2.png&amp;rsquo; | img }}&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On Applications and Consensus</title>
      <link>http://localhost/2016/02/22/apps-and-consensus/</link>
      <pubDate>Mon, 22 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2016/02/22/apps-and-consensus/</guid>
      <description>&lt;p&gt;Bitcoin appears to have introduced something new to the world. The question is, what? The term &amp;ldquo;blockchain&amp;rdquo; will be entirely useless to our discussion, so let&amp;rsquo;s dispense with it, for now. Instead, let&amp;rsquo;s treat Bitcoin like any other internet service. It has an application state; in this case, a currency. It has a mechanism to maintain this application state; in this case, a digital consensus engine. What is unique about bitcoin is the relationship between its application state and its consensus engine.
Almost every major internet service uses a digital consensus engine to support an application state. By application state, we mean any form of application and the set of state transitions it undergoes, be it file sharing, social media, online banking, or financial trading. By digital consensus engine, we mean a network protocol that permits a set of computers to synchronize updates to their state. A digital consensus engine allows an application to be replicated across multiple machines without getting confused.&lt;/p&gt;

&lt;p&gt;Most digital consensus engines are based on a form of the Paxos algorithm. Some might be built on other fault-tolerant algorithms designed over the last few decades, with varying tolerance for various forms of fault. In all these cases, the agents (nodes/machines/peers/participants/whatever) of the consensus are involved in rounds of communication which enable them to determine what information is available to other agents, and thereby come to unanimous agreement on what the next entry in the transaction log should be.&lt;/p&gt;

&lt;p&gt;Unlike other internet services, Bitcoin sought an alternative approach to the consensus problem. In particular, Bitcoin introduced an economic solution whereby consensus is updated not according to the particular information available to other agents, but according to the &lt;em&gt;cost&lt;/em&gt; of producing whatever information is found to be available to them. This is the notorious Proof-of-Work (PoW) algorithm.&lt;/p&gt;

&lt;p&gt;What really makes Bitcoin possible, however, is a unique coupling between the application state and the consensus engine: Bitcoin bootstraps its consensus using the very application state the consensus is intended to support. In other words, it uses the application state to directly incentivize the cost of consensus, by providing new currency units to agents able to prove that they incurred some cost on behalf of the network, and are thereby eligible to be leader of a consensus round (approve a block).&lt;/p&gt;

&lt;p&gt;This is in sharp contrast to every other known internet service, where incentivization takes place outside the application state; typically, the application state is something useful to users, producing a revenue stream for a company which thereby funds the maintenance of hardware/software/network-links that sustains the consensus supporting the application. &lt;strong&gt;That is, there&amp;rsquo;s a third entity, a company, mediating the relationship between consensus and application.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In Bitcoin, tight integration between application state (the currency) and consensus (the economic solution to which is bootstrapped by the currency), without a third party mediator (a company), results in a system where &lt;em&gt;every state transition is recorded in the consensus engine.&lt;/em&gt; Furthermore, each change is accompanied by digital signatures (elliptic curve) and data integrity checks (merkle trees). The recording of every change and its cryptographic verifiability are necessary so that, in the absence of a company, any user can confirm that the consensus is where it should be by re-running the entire history.&lt;/p&gt;

&lt;p&gt;This is an enormous overhead not incurred by a typical internet service; Amazon&amp;rsquo;s consensus engine is far too expensive and slow to record, consistently, every single change made to your shopping cart. Besides, we trust Amazon, because, at least in theory, if they mess up they lose our business.
So Amazon provides a shopping cart that is always available for new writes, even conflicting ones taking place across a network partition. Recording each such write in the consensus engine, in a manner which demanded consistency (as typical consensus engines do) would make the shopping cart experience unbearably slow. The consensus engine is thus interested only in &amp;ldquo;more important&amp;rdquo; state transitions; perhaps initializing shopping carts for new accounts, following through with payments, scaling up the number of hosts offering the shopping cart service, etc. Things far removed from the actual user experience.&lt;/p&gt;

&lt;p&gt;In principle, then, Bitcoin and the Amazon shopping cart are the same: internet services with an application state supported by a consensus engine.
The key differences are two-fold:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1) bitcoin bootstraps the consensus by incentivizing it through the application itself
2) every single state transition in bitcoin is recorded in the consensus engine
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Of course, everyone is most excited about a consequence of the first difference, namely, that the agents of the consensus engine may be a decentralized group of peers, rather than the pawns of Jeff Bezos. But the second difference suggests a means by which socioeconomic systems can standardize
the production and verification of assurances over the existence and integrity of data and the execution of programs which use and update that data.&lt;/p&gt;

&lt;p&gt;Ok, so if Bitcoin is an application (currency), where every change is recorded and cryptographically verifiable (through merkle trees and digital signatures), and where the consensus is incentivized by the application itself, in a manner which is tolerant of malicious behaviour, what&amp;rsquo;s a blockchain?&lt;/p&gt;

&lt;p&gt;Algorithms tolerant to malicious or arbitrary behaviour by their agents are known as Byzantine Fault Tolerant (BFT). BFT is notoriously expensive and most approaches are impractical.  But beginning in the late 90s, a class of so-called Practical BFT (PBFT) algorithms were discovered, which, combined with efficient cryptography and faster machines, yield production quality optimally fault tolerant byzantine systems.&lt;/p&gt;

&lt;p&gt;Hence, Bitcoin can be summarized as an application where: 1) every change is recorded with digital signatures in a merkle tree, 2) networking is done in a peer-to-peer manner using a BFT consensus protocol, and 3) the guarantee of consensus derives from economic incentivization bootstrapped by the application.&lt;/p&gt;

&lt;p&gt;Let us define a blockchain then, as BFT + merkle trees + digital signatures + p2p, and say that Bitcoin is a blockchain that uses an economic solution to the BFT consensus.&lt;/p&gt;

&lt;p&gt;Now, Bitcoin became popular because of its censorship resistance, its immutability, its transparency, and its privacy. A blockchain alone can provide transparency and privacy, but without an economic element to the consensus, it is arguably impossible to provide censorship resistance or immutability. That being said, virtually every use-case of blockchain proposed today has, at least,  a meta-economic element which may contribute to these properties, if only the consumers and clients demand them. Of course, that is arguably the situation with all modern business and the very notion of competitive markets; the difference is the lack of transparency. The use of merkle trees, digital signatures, and peer-to-peer networking allows diverse sets of agents to record pieces of a transaction log&amp;rsquo;s history, and bring them to light as cryptographic proof in the event of wrong doing.&lt;/p&gt;

&lt;p&gt;It should be immediately apparent that such an arrangement of technologies, tweaked along their degrees of freedom (the consensus protocol, the economics, the application state and its cryptography, the relationship between economics and application state), will yield a versatile set of important networked systems, in particular for the coordination of consortia of organizations, and especially for governance. However, it is critical that we are able to adequately experiment with the components, and that we have the right toolsets and software architectures to do so.&lt;/p&gt;

&lt;p&gt;For this reason, we have introduced a new blockchain architecture, which makes explicit, at the process level, the distinction between the consensus engine and the application state. That is, the application and the consensus engine run in separate processes on the operating system, and communicate with each other via a simple socket protocol. This architecture is similar in spirit to that which has been used to serve websites on the internet for decades, namely, by having an http server and the actual web-application in separate processes: requests are received by the web server, filtered, and forwarded to the application. Our blockchain design is no different, except that the server component is replicated across many nodes and achieves consensus on a request before it is forwarded to the application state. Hence, we can easily write blockchain applications in any programming language, while the networking, consensus, and blockchain storage is all handled under the hood.&lt;/p&gt;

&lt;p&gt;Ethereum, of course, pioneered the notion of arbitrary applicate state on a blockchain. But they did so within their own sandboxed and somewhat cumbersome virtual environment. Our new architecture breaks the shackles of the ethereum virtual machine, allowing developers to use the programming language and tooling ecosystem that works for them.&lt;/p&gt;

&lt;p&gt;To read more about the socket protocol underlying the new architecture, see &lt;a href=&#34;http://tendermint.com/posts/tendermint-socket-protocol/&#34; target=&#34;_blank&#34;&gt;the tendermint blog&lt;/a&gt;. And stay tuned for updates on new applications!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>