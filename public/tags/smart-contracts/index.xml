<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
&lt;?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Smart Contracts on Monax Industries</title>
    <link>http://localhost/tags/smart-contracts/</link>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Jun 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost/tags/smart-contracts/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Lessons on Preparation for Disaster from the DAO</title>
      <link>http://localhost/2016/06/18/lessons-learned-dao/</link>
      <pubDate>Sat, 18 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2016/06/18/lessons-learned-dao/</guid>
      <description>

&lt;p&gt;Much has been written about the fall of the DAO in the past 24 hours and there has been a lot of talk of what happened and what didn&amp;rsquo;t happen that should have happened. I&amp;rsquo;m not going to talk about how it happened. There are many colorful and wonderful pieces explaining the attack, one of which I recommend reading for this particular instance is &lt;a href=&#34;http://vessenes.com/deconstructing-thedao-attack-a-brief-code-tour/&#34; target=&#34;_blank&#34;&gt;Peter Vessenes&amp;rsquo;s&lt;/a&gt;
(And seriously subscribe to that blog if you&amp;rsquo;re developing smart contracts because that dude comes up with amazing and critical stuff that every solidity programmer should be made aware of).&lt;/p&gt;

&lt;p&gt;I am instead writing today to talk about how the DAO should have been written instead to prevent not only this security flaw, but any other security flaws inherent in it. As one of the core developers of the Solidity programming language itself, I also will be discussing some ideas from the team and the Ethereum community to prevent problems like the Reentry attack from occurring on a scale like this again.&lt;/p&gt;

&lt;h2 id=&#34;back-to-basics&#34;&gt;Back to Basics&lt;/h2&gt;

&lt;p&gt;Be very careful with how you write your code, and always test it first, and thoroughly. Unlike normal code, once this bugs up, it&amp;rsquo;s there permanently, unless you put in the ability to destroy the contract. The problem that caused this whole spat was one line of code. That&amp;rsquo;s right. ONE. LINE. OF. CODE.&lt;/p&gt;

&lt;p&gt;Here is the code that destroyed the DAO.&lt;/p&gt;
function payOut(address _recipient, uint _amount) returns (bool) {
        if (msg.sender != owner || msg.value &gt; 0 || (payOwnerOnly &amp;&amp; _recipient != owner))
            throw;
        if (_recipient.call.value(_amount)()) {
            PayOut(_recipient, _amount);
            return true;
        } else {
            return false;
        }
    }

&lt;p&gt;and&lt;/p&gt;
if (!rewardAccount.payOut(_account, reward))
    throw;
paidOut[_account] += reward;
return true;

&lt;p&gt;note where the reward is added enabling someone to recursively drain the DAO with multiple calls. This is accidentally mitigated by using msg.sender.send(), but the slock.it team decided to use call here&amp;hellip;a much lower level function that does not put a gas stipend down, enabling a user to call with as much gas as they need from a contract to recursively call the paidOut function. But really, all of this is solved if the line containing:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;paidOut[_account] += reward;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;is simply moved above the payOut function. Crazy I know. Key takeaways from this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;1. Make sure you&amp;rsquo;re careful where you place your sends.&lt;/strong&gt;
&lt;strong&gt;2. Don&amp;rsquo;t trust and interact with unknown contracts. If you can&amp;rsquo;t predict what it will do it&amp;rsquo;s very hard to design for it.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;But what about security faults we don&amp;rsquo;t know about yet? What do we do about those. The answer to this question is two fold. It revolves around modular design and smart decentralized decision making.&lt;/p&gt;

&lt;h2 id=&#34;modular-contract-development&#34;&gt;Modular Contract Development&lt;/h2&gt;

&lt;p&gt;The Ethereum community has recently been evoking a trusted hero of my time when it comes to this tragedy: Captain Hindsight.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/2016-06-18-captainHindSight.jpg&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;With his trusty companions Shoulda, Coulda and Woulda, he swiftly points out that the DAO is far too complex and should have been made with easier and simpler code as well as in a more modular fashion. This would have made the code easier to update as well as audit. Drawing from lessons in the Five Types Model, let&amp;rsquo;s explore the usage of a DOUG or a Decentralized Organization Upgrade Guy.&lt;/p&gt;

&lt;p&gt;Using a DOUG, we would be able to dynamically include more and even reduce the number of contracts, so long as we kept it around a handful of core modules. This would make the code very updateable and easily so. Here&amp;rsquo;s a small example of how it might be designed.&lt;/p&gt;
contract DOUG_Of_Da_DAO {
    // our core modules live here, mapped to a string for ease of update
    mapping(string =&gt; address) coreModules;
    // this is all the dependencies required of our core module.
    // Note that you could combine this with the above to create a triple mapping,
    // but for ease of documentation I am separating it.
    mapping(address =&gt; mapping(string =&gt; address)) moduleDependencies;

    function updateCoreModule(string moduleName, address moduleAddress) {
        coreModules[moduleName] = moduleAddress;
    }

    function updateDependencyModule(string coreModuleName, string dependencyModuleName, address dependencyModuleAddress) {
        moduleDependencies[coreModules[coreModuleName]][dependencyModuleName] = dependencyModuleAddress;
    }

}

&lt;p&gt;You may be asking &amp;ldquo;What&amp;rsquo;s to stop someone from maliciously updating the DAO then to whatever they want it to be&amp;rdquo;. I have purposely left that out of here so that I can tie this into my next bit&amp;hellip;starting now.&lt;/p&gt;

&lt;h2 id=&#34;executive-action&#34;&gt;Executive Action&lt;/h2&gt;

&lt;p&gt;One of the reasons why the United States and many other democratic institutions have an executive branch is for the reason that democracy overall moves far too slowly to respond in moments of crisis.
Seeing this is also why it becomes so tragic for the DAO, because the DAO team had been made aware of the bug and had actually gone in and FIXED their code.
However because there was no executive to decidedly update their code immediately (would have required a vote, which takes quite a sum of time to gather), the attacker was able to jump on the opportunity.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;(Side Note: if you ever see a bug that critical, don&#39;t leave it out in the public eye as a white hat, please report it privately if you can. Resort to public disclosure as a last resort if the developer is being an arrogant tool).&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;All forms of security etiquette aside, had the DAO given a group of democratically elected devs executive ability selected in round robin fashion to update the addresses of certain portions of the code in situations like these, this likely would have never happened and been fixed immediately. Let&amp;rsquo;s go back to our DOUG:&lt;/p&gt;
contract DOUG_Of_Da_DAO {
    // our core modules live here, mapped to a string for ease of update
    mapping(string =&gt; address) coreModules;
    // this is all the dependencies required of our core module.
    // Note that you could combine this with the above to create a triple mapping,
    // but for ease of documentation I am separating it.
    mapping(address =&gt; mapping(string =&gt; address)) moduleDependencies;

    function updateCoreModule(string moduleName, address moduleAddress) {
        coreModules[moduleName] = moduleAddress;
    }

    function updateDependencyModule(string coreModuleName, string dependencyModuleName, address dependencyModuleAddress) {
        moduleDependencies[coreModules[coreModuleName]][dependencyModuleName] = dependencyModuleAddress;
    }

}

&lt;p&gt;Suppose we wanted to implement a decentralized security executive. We need to have it created from a vote weighed by the DAOs stakeholders, and we also need to make sure that the security executive cannot maliciously take over the DAO and keep them in power. While we won&amp;rsquo;t go into all of the necessary things (stake deposits that suicide should they make a decision the community dislikes).&lt;/p&gt;

&lt;p&gt;The following is an example of what we would want then in a very centralized fashion. Keep in mind you could get creative with this and make it so that the decision to update is controlled by an odd number of people so that there will always be a resounding yes or no agreement, complete with incentives to make sure that the security people vote. That said it&amp;rsquo;s a little complex for our purposes, so we&amp;rsquo;ll stick with the current way to show a framework for how to do this.&lt;/p&gt;

contract balanceSheet {
    mapping(address =&gt; uint) public balances;
    function getBalance() returns (uint balance) {
        balance = balances[msg.sender];
    }
}

contract securityVote { //holds long term information that will likely not need to change immediately
    //list of modules that security executives are not allowed to update
    address[] blacklist;
    //the current head honcho
    address public currentSecurityExecutive;
    balanceSheet users;
    struct voteNextExec { //could be done with some form of iterable mapping, but this was easier for our purposes
        mapping(address =&gt; bool) initialized;
        mapping(address =&gt; uint) index;
        mapping(address =&gt; bool) voted;
        uint totalCandidates;
        address[] execs;
        uint[] voteWeight;
    }
    voteNextExec vote;
    //time limit to vote in an exec
    uint constant timeLimit = 1 weeks;
    //two key modules that security execs should not be able to update,
    //this current module, and the balance sheet of all user tokens.
    //we will trust the creator in the interim to be a decent security executive but then leave it to the voters.
    function securityVote(address balanceSheetAddr) {
        blacklist.push(balanceSheetAddr);
        blacklist.push(address(this));
        currentSecurityExecutive = msg.sender;
        users = balanceSheet(balanceSheetAddr);
    }

    function voteForSecurityExec(address desired) {
        if (vote.voted[msg.sender]) //if already voted, kick them out
            throw;
        if (vote.initialized[desired]) { //add more to balance
            vote.voted[msg.sender] = true;
            vote.voteWeight[vote.index[desired]] += users.getBalance();
        }
        else { //initialize new candidate
            vote.voted[msg.sender] = true;
            vote.index[desired] = vote.totalCandidates++;
            vote.execs[vote.totalCandidates] = desired;
            vote.voteWeight[vote.index[desired]] = users.getBalance();
        }
    }
}

contract DOUG_Of_Da_DAO {

    address currentSecurityExecutive;
    securityVote currentSecurityConsensus;

    function DOUG_Of_Da_DAO(address securityAddr) {
        currentSecurityConsensus = securityVote(securityAddr);
    }

    modifier currentSecurityGuy() { //only our security guy can update contracts
        if (currentSecurityConsensus.currentSecurityExecutive() != msg.sender)
            throw;
        _
    }
    // our core modules live here, mapped to a string for ease of update
    mapping(string =&gt; address) coreModules;
    // this is all the dependencies required of our core module.
    // Note that you could combine this with the above to create a triple mapping,
    // but for ease of documentation I am separating it.
    mapping(address =&gt; mapping(string =&gt; address)) moduleDependencies;

    function updateCoreModule(string moduleName, address moduleAddress) currentSecurityGuy() {
        coreModules[moduleName] = moduleAddress;
    }

    function updateDependencyModule(string coreModuleName, string dependencyModuleName, address dependencyModuleAddress) currentSecurityGuy() {
        moduleDependencies[coreModules[coreModuleName]][dependencyModuleName] = dependencyModuleAddress;
    }

}

&lt;h2 id=&#34;what-solidity-is-doing-about-this&#34;&gt;What Solidity Is Doing About This&lt;/h2&gt;

&lt;p&gt;Currently we are talking about ways to minimize reentrancy attack. There is an issue up in the Solidity github that discusses a suggestion from &lt;a href=&#34;https://github.com/ethereum/solidity/issues/662&#34; target=&#34;_blank&#34;&gt;Micah Zoltu&lt;/a&gt; to add a default boolean in all external calls that prevents recursive calls. For people who know what they&amp;rsquo;re doing and want recursive calls, the default mechanism could be overridden by people who know what they are doing with a universal modifier named &amp;ldquo;reentrant&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Beyond that, Christian and I are working tirelessly to bring you new features for Solidity as well as better documentation of best practices whenever you are coding smart contracts. We hope that this will be the beginning of NASA like documentation of attacks and what and what not to do whenever coding in Solidity.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Eris &#43; IPFS</title>
      <link>http://localhost/2015/11/01/eris-and-ipfs/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/11/01/eris-and-ipfs/</guid>
      <description>&lt;p&gt;By changing the way different parties cooperate, smart contracts radically improve how complex processes are run. This new paradigm will have wide-reaching effects in many areas.&lt;/p&gt;

&lt;p&gt;When we envision the smart contract stack of the future, some of the components involve radically new paradigms in their own right. The best example of this is the peer-to-peer distributed InterPlanetary File System (IPFS). At once a simple protocol for how to name, host and transfer files in a distributed manner, it also offers an audacious vision of what the fabric of the internet should look like in the future.&lt;/p&gt;

&lt;p&gt;&lt;h1&gt;What is IPFS?&lt;/h1&gt;
IPFS took some of the most successful ideas of existing systems and formed them into a single, cohesive system. These precursors to IPFS include distributed hash tables (DHT), BitTorrent, the version control system Git, and the Self-Certified Filesystem (SFS).&lt;/p&gt;

&lt;p&gt;The fundamental concept of IPFS is that instead of looking for locations, as with HTTP, you look for the content of a file. As an example, let&amp;rsquo;s say I link to a picture of a baby marmot on Flickr. Now, what your computer does now is call the IP address of Flickr&amp;rsquo;s server and ask for the file hosted at that path. Flickr then hopefully responds with &lt;a href=&#34;https://www.flickr.com/photos/53541558@N00/521987371&#34; target=&#34;_blank&#34;&gt;a picture of baby marmots&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are two big downsides to this. First, if at some point Flickr stops hosting that picture because of a sudden surge of anti-marmot sentiment, the image will be gone and requests to the path will simply fail. Second, this way of requesting files actually provides very little security. We have no way of making sure that the image that Flickr ends up delivering to you is actually the same as the one that I saw when I originally linked to it.&lt;/p&gt;

&lt;p&gt;IPFS uses the idea of content-addressing to turn this upside down. Content-addressing means that you look for a file by its content and where it’s located. Who delivers it to you is irrelevant. This is accomplished using the hash of a file as the file name. On IPFS each file has a unique name, and if multiple parties were to host the same file, it would also have the same name. Each IPFS node maintains a distributed hash table (DHT) that contains all the hashes of files and all the IP addresses of the nodes that host those files. So by pinging IPFS for a file, it is not only able to located it, but it can simultaneously make sure that the file the node delivers is the correct file by checking its hash.&lt;/p&gt;

&lt;p&gt;&lt;h1&gt;The IPFS Vision&lt;/h1&gt;
Ultimately, IPFS aims to change the fabric of the internet and replace HTTP. No problem, right? There are several reasons why replacing HTTP could be a good thing, and IPFS has illustrated the benefits through the vision of a Permanent Web. With HTTP the burden of hosting content generally falls on the person who published it. If someone were to create a popular site about comics (see the &lt;a href=&#34;https://ipfs.io/ipfs/QmNhFJjGcMPqpuYfxL62VVB9528NXqDNMFXiqN5bgFYiZ1/its-time-for-the-permanent-web.html&#34; target=&#34;_blank&#34;&gt;great Neocities post about IPFS&lt;/a&gt;), then that content would only continue to be available at the original location if the publisher continued to host it. But over time, interests change, companies go bankrupt, servers fail and content ends up disappearing. The result tends to be that old sites start to look like graveyards, linking to places that have long gone.&lt;/p&gt;

&lt;p&gt;With IPFS, on the other hand, anyone can host content. If you want to make sure a website continues to persist, you can simply host it yourself. No need to ask anyone for permission, and for someone browsing the site no difference would be noticeable. So, if a blogger can host all the pages to which his site links, even years later when some of these other sites have started disintegrating, readers can still access content he references without noticing any change.&lt;/p&gt;

&lt;p&gt;The other reason why HTTP is no longer up to the task is that it simply can’t handle today’s traffic loads and patterns well. With &amp;lsquo;lots of data, accessible everywhere&amp;rsquo;, efficient ways of moving data are needed. Comparing HTTP to BitTorrent makes it easy to see its shortcomings. The more popular a file is on BitTorrent, the more peers host it and the faster the download speed becomes. With HTTP, an increase in popularity results in an increasing number of machines hitting the same server. If this can’t be managed with a costly increase of bandwidth or server capacity, the user is left with slow speed and a disintegration of quality. With IPFS, as with BitTorrent, more popularity means more peers hosting the file and more sources from which different parts of the file can be downloaded simultaneously. This dramatically cuts down redundancy in terms of how often data is moved around the web. It also means less time wasted waiting for downloads. Popular files can also be downloaded from peers near you, ideally on the same network, instead of being sent again and again from a large data center to various users on the same network.&lt;/p&gt;

&lt;p&gt;On a larger scale, IPFS is also about creating a more decentralized internet. This means reducing our reliance on the massive companies that have the economies of scale to move lots of data efficiently under the HTTP paradigm. Agile startups will be able to compete better with cloud computing giants, and government censorship and &lt;a href=&#34;https://blog.erisindustries.com/2015/11/02/IPBill/&#34; target=&#34;_blank&#34;&gt;unlawful mass surveillance&lt;/a&gt; will become much harder.&lt;/p&gt;

&lt;p&gt;&lt;h1&gt;Smart Contracts and IPFS&lt;/h1&gt;
Where do smart contracts and Eris come in? While blockchains are great at providing verifiability and transparent processes, they are unsuited to hosting large amounts of data. When contracts depend on lots of data, that data needs to be referenced from within the contracts. Such data could range from scans of real-world documents, to images, media files or data sets.&lt;/p&gt;

&lt;p&gt;IPFS is ideally suited for this. The integrity of files that smart contracts reference is often critical. With IPFS&amp;rsquo; content-addressing, the process of automatically verifying files comes out of the box. With a traditional file system, each contract needs to additionally verify the hash of a file that was delivered. IPFS circumnavigates this requirement,  which gets rid of possible attacks. Since anyone can host a file, any party that has an economic interest in the contract can simply choose to host all file dependencies. Using HTTP, you have to either trust the service hosting the file or program complicated fall-back procedures in case a file isn&amp;rsquo;t hosted anymore by the default host or in case the default host delivers the wrong file.&lt;/p&gt;

&lt;p&gt;In the enterprise context, enabling any party to host files is often the best option. In addition, third party companies could potentially provide hosting specifically for smart-contract related files and provide guarantees through SLAs.&lt;/p&gt;

&lt;p&gt;In the future, Protocol Labs, the company behind IPFS, plans to add an incentive layer to the protocol called Filecoin. With Filecoin, nodes hosting content will be compensated for their work. Thus smart contracts will hold Filecoin balances and pay the network for hosting their dependencies. This is particularly interesting for permissionless chains like Ethereum and when censorship resistance is a high priority.&lt;/p&gt;

&lt;p&gt;&lt;h1&gt;Conclusion&lt;/h1&gt;
IPFS is an exciting prospect for the future of the internet, and it’s an amazing fit for smart contracts. That’s why we have integrated IPFS as an Eris service and why it is the file system of choice for Eris smart contract applications. We look forward to seeing many interesting applications combining the two paradigms in the future. If you want to start playing around with IPFS and Eris, you can get started with &lt;a href=&#34;https://eng.erisindustries.com/tutorials/2015/08/05/ipfs-as-a-service/&#34; target=&#34;_blank&#34;&gt;Zach&amp;rsquo;s IPFS walkabout&lt;/a&gt;.
&lt;h1&gt;Resources&lt;/h1&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ipfs.io/&#34; target=&#34;_blank&#34;&gt;IPFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bit.ly/1N7UdAr&#34; target=&#34;_blank&#34;&gt;IPFS Whitepaper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://filecoin.io/&#34; target=&#34;_blank&#34;&gt;Filecoin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bit.ly/1LfB2lq&#34; target=&#34;_blank&#34;&gt;Filecoin Whitepaper PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://letstalkbitcoin.com/blog/post/epicenter-bitcoin-100-juan-benet-decentralizing-the-web-with-the-inter-planetary-file-system-ipfs&#34; target=&#34;_blank&#34;&gt;Epicenter Bitcoin Episode with Juan Benet about IPFS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Self-driving banks: industrial verification without industrial capex</title>
      <link>http://localhost/2015/09/17/selfdrivingbanks/</link>
      <pubDate>Thu, 17 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/09/17/selfdrivingbanks/</guid>
      <description>

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/marmot.jpg&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt;:
&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I&amp;#39;m pro-robot.&amp;#10;I think they should just destroy us all at this point.&lt;/p&gt;&amp;mdash; SecuriTay (@SwiftOnSecurity) &lt;a href=&#34;https://twitter.com/SwiftOnSecurity/status/644338254096039936&#34;&gt;September 17, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&#34;the&#34;&gt;&amp;ldquo;The&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;Because Bitcoin does not require a central server whirring away, or direct human oversight, to run, its earliest adopters have long referred to it in quasi-religious, almost magical terms. Immutable. Indestructible. &amp;ldquo;The&amp;rdquo; blockchain.&lt;/p&gt;

&lt;p&gt;Of course, I co-founded a business that, at least to my knowledge, was &lt;a href=&#34;https://blog.erisindustries.com/products/2014/12/17/eris-what-are-we-building/&#34; target=&#34;_blank&#34;&gt;the first in the world&lt;/a&gt; to take the &amp;ldquo;bitcoin&amp;rdquo;/cryptocurrency piece out of the equation - resulting in the datastructure now referred to as &amp;ldquo;a&amp;rdquo; blockchain.&lt;/p&gt;

&lt;p&gt;This was not a political decision, but a practical one. Make no mistake, I started - as we all did - as a Bitcoin guy before I became a smart contract guy. However, it bears mentioning that back in the day Bitcoin was the only game in town. Thanks to permissioning (which allows us to control our blockchains), we now have options.&lt;/p&gt;

&lt;p&gt;Bitcoin is a bunch of cryptographic primitives skinned with a UI and hooked up with a networking protocol over TCP-IP. I liked Bitcoin from the day I met it. But, much like everyone&amp;rsquo;s proverbial erstwhile ex, if we don&amp;rsquo;t look at Bitcoin as &amp;ldquo;the one&amp;rdquo; but look at it as an archetype (daresay a proof-of-concept), we realise that it is entirely possible to fall in love again.&lt;/p&gt;

&lt;p&gt;My own love affair with Bitcoin transmogrified very suddenly one day in September of 2013. I was corresponding with an acquaintance of mine named Zachary Caceres (of the &lt;a href=&#34;http://www.startupcities.org/&#34; target=&#34;_blank&#34;&gt;Startup Cities Institute&lt;/a&gt; in Guatemala) about a proposal for a government accounting system he called &amp;ldquo;MuniBit&amp;rdquo;. The argument for such a system, as Zach put it, was that the same security properties which allowed Bitcoin to self-regulate in a secure way could be very useful to bootstrap an interdepartmental funds transfer system for developing nations that would&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;run itself, on simple hardware like laptops or desktop PCs; and&lt;/li&gt;
&lt;li&gt;cost next to nothing to operate and replicate; but&lt;/li&gt;
&lt;li&gt;which would be just as effective as an Oracle server (at least, for the kinds of latencies that a government accounting system requires) and&lt;/li&gt;
&lt;li&gt;being tamper-proof and perfectly transparent, thus be extremely effective in reducing corruption.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was at that moment that I realised maybe it wasn&amp;rsquo;t Bitcoin itself I was in love with, but certain parts of its personality. Specifically, its blockchain.&lt;/p&gt;

&lt;p&gt;However, distributed databases have been around for a very long time – the first of which, SDD-1, was &lt;a href=&#34;http://www.eecs.berkeley.edu/~wong/wong_pubs/wong63.pdf&#34; target=&#34;_blank&#34;&gt;invented in 1980&lt;/a&gt;. So what turns everyone on about &lt;a href=&#34;https://www.youtube.com/watch?v=aENX1Sf3fgQ&#34; target=&#34;_blank&#34;&gt;every little thing a &amp;ldquo;blockchain&amp;rdquo; does&lt;/a&gt; as distinguished from every little thing a distributed database does?&lt;/p&gt;

&lt;h3 id=&#34;every-little-thing-she-does-is-magic&#34;&gt;Every little thing she does is magic&lt;/h3&gt;

&lt;p&gt;Well, I think I&amp;rsquo;ve figured it out. It&amp;rsquo;s the way in which these DBs:&lt;/p&gt;

&lt;p&gt;a) batch data into blocks instead of achieving consensus bit-by-bit,&lt;/p&gt;

&lt;p&gt;b) merkle-ise &lt;a href=&#34;https://www.google.co.uk/webhp?sourceid=chrome-instant&amp;amp;ion=1&amp;amp;espv=2&amp;amp;ie=UTF-8#q=all%20the%20things&#34; target=&#34;_blank&#34;&gt;all the things&lt;/a&gt;  (EDIT: the use of merkle trees - merkleisation - is what makes a blockchain&amp;rsquo;s audit log unforgeable); and&lt;/p&gt;

&lt;p&gt;c) utilise a public/private key signature infrastructure to control writes,&lt;/p&gt;

&lt;p&gt;means, if we&amp;rsquo;re looking at Bitcoin &lt;em&gt;qua&lt;/em&gt; proof-of-concept, that a blockchain data structure makes it possible to achieve industrial levels of verifiability without industrial levels of capex.&lt;/p&gt;

&lt;p&gt;This is the big deal.&lt;/p&gt;

&lt;p&gt;Thanks to blockchains, a laptop or a mobile phone is, today, as effective at running a globally-accessible application as a datacentre or a mainframe. Furthermore, &lt;a href=&#34;http://localhost/2015/06/16/tbtm/&#34;&gt;with the permissioned chains, the &amp;ldquo;mining&amp;rdquo; process can be dispensed with entirely&lt;/a&gt;, allowing a user to run such a network with only the latent capacity of hardware you already have (in relation to which, 99% of the time it is not being used anywhere near full capacity.&lt;/p&gt;

&lt;p&gt;In the future, we will leverage this excess capacity to both increase the reliability and uptime of our systems, and bring the &lt;a href=&#34;https://www.youtube.com/watch?v=KOrXep9f3Z8&#34; target=&#34;_blank&#34;&gt;marginal costs&lt;/a&gt; of computing to nearly zero. This will be a world in which data infrastructure runs itself without physical infrastructure.&lt;/p&gt;

&lt;p&gt;Because of this, I&amp;rsquo;m a bit puzzled at the direction the early blockchain space seems to be taking.&lt;/p&gt;

&lt;p&gt;One of these directions is the proprietary-chain tack, which doesn&amp;rsquo;t make a whole lot of sense. Apart from being bad business, any cryptographic primitive worth a damn is going to be open-source.&lt;/p&gt;

&lt;p&gt;The other one is why new businesses are entering, and bitcoin businesses are pivoting hard, into the winner-take-all clearing and settlement game.&lt;/p&gt;

&lt;p&gt;Both approaches strike me as terribly unimaginative. Straight ownership transfers are already machine-driven (see: &lt;a href=&#34;http://www.fasterpayments.org.uk/&#34; target=&#34;_blank&#34;&gt;Faster Payments&lt;/a&gt;). They are also extremely simple from a logic perspective; it&amp;rsquo;s possible to draft a legally binding instrument of transfer in a minute or so using nothing more than a napkin and a pen (or, if you prefer, five lines of smart contract code).&lt;/p&gt;

&lt;p&gt;The introduction of a blockchain into the settlement equation is not, on its own, sufficiently compelling to justify the wholesale replacement of existing infrastructure - where it strikes me that uniform standards running on existing DB designs would be better (especially given that clearing and settlement require privacy among market participants, which blockchains do not do especially well). The inappropriateness of using a single blockchain is even clearer to see anywhere high volumes or low latencies (e.g. HFT, credit cards) are involved.&lt;/p&gt;

&lt;p&gt;“Smart contracts,” on the other hand, allow us to do some different things with blockchains - most of which are distinctly not related to straight clearing.&lt;/p&gt;

&lt;h3 id=&#34;smart-contracts&#34;&gt;Smart Contracts&lt;/h3&gt;

&lt;p&gt;As Casey puts it, &lt;strong&gt;“smart contracts” are not smart and they are not contracts&lt;/strong&gt;. As Brian retorts,  &lt;a href=&#34;http://localhost/2015/09/15/smart-contracts-intro/&#34;&gt;“they should really just be called dumb scripts.”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dumb or not, being computer code, you can write these scripts to do more or less whatever the hell you want. As a result, smart contracts can run virtually anything in the same way that Bitcoin automates payments. On smart contract chains this sort of stuff is trivial (Tyler and I did our first smart asset-backed loan back in April of 2014.)&lt;/p&gt;

&lt;p&gt;How then, should we use blockchains in practice? The answer actually was put quite succinctly by an analyst at &lt;a href=&#34;http://securities.bnpparibas.com/quintessence/hot-topics/beyond/bitcoin-and-blockchain-what-you.html#.VfqJNp1Viko&#34; target=&#34;_blank&#34;&gt;BNP Paribas&lt;/a&gt;: a blockchain is to existing infrastructure as an internal combustion engine was to the steam train. But just as we would not want to try to pile 300 people in a car, we will have to optimise our approach to blockchains in order to account for their inherent limitations.&lt;/p&gt;

&lt;p&gt;As the lead marmot superfan of the entire world, let&amp;rsquo;s suppose I want to create a marmot supply chain finance application. Let us also suppose I will call this application “Uber for Marmots.” If I should code it up, at the conclusion of this exercise I will have a piece of software which can run itself from my laptop, across a network of global users, any of which I can securely onboard - through the issuance of a single key pair - in seconds.&lt;/p&gt;

&lt;p&gt;Furthermore, if these chains are permissioned, such as ours (specifically the collaboratively-written Tendermint design) are, these services are infinitely repeatable at, again, almost zero expense and in seconds. Someone wishing to create Uber for (Marmosets/Skunks/Puppies) of their own can simply copy my code, tweak some parameters to fit their particular use-case, and have their own particular application running, for a cute animal of their choice, with one command.&lt;/p&gt;

&lt;p&gt;And this application will run in a web browser.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s like being able to download a server instead of having to get a data centre to run one on your behalf.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Whether we can&lt;/strong&gt; run a blockchain for a given application is one question, the answer to which - at least in principle - is almost always yes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Whether we should&lt;/strong&gt; run one is quite another. I like to say that the only thing a blockchain can do that a server cannot is not need a server. For this reason, it strikes me that blockchains are destined to be fundamentally &lt;em&gt;micro&lt;/em&gt; in nature: to address specific groups of users with specific applications when those users need to bootstrap a network, and need to obtain a high degree of data verification, without spending piles of cash on IT equipment.&lt;/p&gt;

&lt;h3 id=&#34;self-driving-banks&#34;&gt;Self-driving banks&lt;/h3&gt;

&lt;p&gt;Should we use such an infrastructure to clear industrial volumes of interbank transactions, such as international payments? I’m not so sure (this would not be the first time Eris Industries has &lt;a href=&#34;http://blogs.wsj.com/moneybeat/2015/04/14/bitbeat-blockchains-without-coins-stir-tensions-in-bitcoin-community/&#34; target=&#34;_blank&#34;&gt;gone against the grain of conventional wisdom&lt;/a&gt; in the blockchain space). Why do we need replication - or even PKI - to get us where we need to go in such circumstances? Would adopting that infrastructure for these applications only slow the banks down?&lt;/p&gt;

&lt;p&gt;By contrast, how many times can someone get KYC&amp;rsquo;d in a day? How many marmots, or syndicated loan participations, can someone move in a day? The answer (I know as I have cornered the marmot market) is rather fewer. This is a strong hint that these kinds of use-cases are a good place to start.&lt;/p&gt;

&lt;p&gt;Within the banks themselves, there are plenty of applications which fit this profile – but they are primarily non-transactional and relate to back-office process or event control and scheduling (as one might see, e.g., in a securitisation). Businesses, including banks, deal with considerably more process logic  on a daily basis than just payments – hiring and firing, paying salaries, calculating taxes, keeping track of holiday entitlement, internal audit – all of which are managed by legions of “knowledge economy” employees, such as lawyers and auditors.&lt;/p&gt;

&lt;p&gt;In other words, manual labour.&lt;/p&gt;

&lt;p&gt;Winning applications reduce friction. &lt;strong&gt;Uber&amp;rsquo;s killer value proposition isn&amp;rsquo;t automating payment&lt;/strong&gt; - though they did that as well - &lt;strong&gt;it&amp;rsquo;s going after the humans&lt;/strong&gt; and automating the (not scalable) taxi dispatcher by turning him into a (scalable, repeatable) communication protocol. Perhaps we blockchain folks might be better off adopting the same approach to business process as Silicon Valley adopted to hailing cabs: delegate execution to the machines so we can get on with making decisions.&lt;/p&gt;

&lt;p&gt;This idea – which we call, for now, the “&lt;strong&gt;self-driving bank&lt;/strong&gt;” – is an intriguing one. It is also a double-edged sword. For all the benefits any one institution (or group of them) will obtain from adopting this tech, its also true that new entrants will be able to leverage them as well at nearly nil cost.&lt;/p&gt;

&lt;p&gt;Just as P2P lending allows ordinary people to stand toe-to-toe with the banks in the capital markets, blockchain allows people to stand toe-to-toe with them in the verification and process assurance markets.&lt;/p&gt;

&lt;p&gt;Which begs the question: what will it mean to be a bank, which presently has 150,000 employees, if open-source tech can do the same job for free? I have some ideas - but I&amp;rsquo;ll save that for another day.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/marmot2.jpg&amp;rsquo; | img }}&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WTF Are Smart Contracts Anyway?</title>
      <link>http://localhost/2015/09/15/smart-contracts-intro/</link>
      <pubDate>Tue, 15 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/09/15/smart-contracts-intro/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/stevensnodgrass/5480863464/&#34; target=&#34;_blank&#34;&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/contract.jpg&amp;rsquo; | img }}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Folks are both fascinated and confused by the term &amp;ldquo;smart contracts&amp;rdquo;. Many across the general peer-to-peer tech space have had their imaginations captured by what is, fundamentally, a super fascinating idea. The idea that we can have processes and procedures, with rules we agree to, running, automatically, on our behalf. This is a powerful idea.&lt;/p&gt;

&lt;p&gt;For many the power of the &lt;code&gt;idea&lt;/code&gt; leads them &amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://33.media.tumblr.com/6c6d7a976bfe30324d656f0465cd7add/tumblr_nk1e8rM4ie1u17yx1o1_500.gif&#34; target=&#34;_blank&#34;&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/neverland.gif&amp;rsquo; | img }}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As inspiring a fantasy as Peter Pan is, it is still a fantasy. With all deference to the dreamers amongst us, there is enough that is intriguing about this technology for us all to explore it together; the difference being that the doers may focus more on the near term stuff.&lt;/p&gt;

&lt;p&gt;On behalf of the doers, here is how I explain smart contract technology to executives and researchers.&lt;/p&gt;

&lt;p&gt;This post is a &lt;a href=&#34;http://localhost/2015/08/10/how-i-current-explain-blockchains/&#34;&gt;semi-follow on to my WTF is going on with blockchains post&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;

&lt;p&gt;Smart contracts is a loaded term of which I&amp;rsquo;ve been a reluctant user.&lt;/p&gt;

&lt;p&gt;Coming from a #legalhacker background these &amp;ldquo;things&amp;rdquo; are clearly neither &lt;code&gt;smart&lt;/code&gt; (indeed their logic capabilities have only recently reached turing complete capacity), nor are they &lt;code&gt;contracts&lt;/code&gt; (they are, afterall, &lt;em&gt;just scripts&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;As Brian, our Head of BizDev says, they should really just be called &lt;code&gt;dumb scripts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;My own issues with pedanticism aside, &lt;code&gt;smart contracts&lt;/code&gt; is the term which the community has adopted and it is more important to communicate using the same language than it is to be fascist about such matters.&lt;/p&gt;

&lt;h2 id=&#34;smart-v-dumb-or-are-they-better-than-just-a-python-script&#34;&gt;&lt;code&gt;smart v. dumb&lt;/code&gt; &lt;em&gt;or&lt;/em&gt; are they better than just a python script?&lt;/h2&gt;

&lt;p&gt;This is a question which in the early days of Eris we fielded often. This is a debatable subject. And I think it turns on two axes.&lt;/p&gt;

&lt;h3 id=&#34;axis-1-spectrum-of-verifiability&#34;&gt;Axis 1 =&amp;gt; spectrum of verifiability&lt;/h3&gt;

&lt;p&gt;A python script is &lt;em&gt;somewhat&lt;/em&gt; verifiable I would say. If a python script is running on somebody else&amp;rsquo;s metal your ability to verify what its doing is usually limited to observing its results. You can always see what the script is doing if, for example it is managing an API. You know that you send that API a request and then you will get a response. But what is happening between the request and the response is very difficult to verify.&lt;/p&gt;

&lt;p&gt;Even if you could verify &lt;em&gt;the code that was being ran&lt;/em&gt; via some fingerprinting mechanism you still wouldn&amp;rsquo;t necessarily be able to verify &lt;em&gt;the execution environment&lt;/em&gt; of that script. What I mean here is that every file which exists is really just a series of numbers assembled in such a way that a computer can interpret it to be an executable script, the markdown which renders into this blog post, or a marmot photo.&lt;/p&gt;

&lt;p&gt;Since every files is, at its most fundamental level, a series of numbers, every file can have a mathmatical formula applied to it which will produce a short sting of letters and numbers called its fingerprint. The same formula can be applied to the same &amp;ldquo;series of numbers&amp;rdquo; (meaning, a file) and that will produce the same result if (and only if) the &amp;ldquo;series of numbers&amp;rdquo; (again, meaning the file) is the exact same.&lt;/p&gt;

&lt;p&gt;The upshot here is that if a script builder wants to make sure that the scripts which folks run on their machines are the scripts the script maker made, then a fingerprinting mechanism is often used as a quick, but verifiable way to ensure that all the numbers in the file(s) are all the same. This procedure is called &lt;code&gt;checksum&lt;/code&gt; &amp;ndash; meaning, check the sum of the numbers of the file &amp;ndash; and this procedure is routinely used behind the scenes when your computer is installing files.&lt;/p&gt;

&lt;p&gt;While it is true that it is a relatively straight-forward problem to verify a script being run &lt;em&gt;on your machines&lt;/em&gt; is the same script which was produced by Skype, Microsoft, or whomever; it is not necessarily a simple problem to verify that a script being run &lt;em&gt;on someone else&amp;rsquo;s machine&lt;/em&gt; is the same script produced. To illustrate this problem, if you were using a version of Microsoft Word which was being &amp;ldquo;hosted&amp;rdquo; and you were using it in a webbrowser, you may have an ability to check the version number from the Word Help menus. But this only gets at part of the problem of being able to verify code which is running on someone else&amp;rsquo;s metal.&lt;/p&gt;

&lt;p&gt;Scripts can read top level environment variables, and run differently on a different version of their language; therefore they can have differing &lt;strong&gt;outcomes&lt;/strong&gt; depending on what the environment variables of the Operating System are or what version of the language is &amp;ldquo;running&amp;rdquo; (or compiling) the language. What this means is that when a computer script is ran it can be told by the operating system &amp;ldquo;how&amp;rdquo; it should run in some instances and in other instances various versions of a language will operate differently. As a result of this script makers have an ability to make their scripts run differently on different versions of the language.&lt;/p&gt;

&lt;p&gt;The execution environment in which the script runs is important because the same script can run different ways depending on its environment. This is important to understand because even if you can verify that the script a machine is running is the same script that was produced by a script maker, what you are &lt;em&gt;really&lt;/em&gt; trying to verify is the predictability of what its &lt;strong&gt;doing&lt;/strong&gt; (not only what its numbers, meaning its code, is).&lt;/p&gt;

&lt;p&gt;The practical upshot here is that nobody really has a capability to verify code that&amp;rsquo;s running on someone else&amp;rsquo;s metal.&lt;/p&gt;

&lt;p&gt;And this is one of the most powerful capabilities which smart contract backed systems offer to their users. Smart contracts completely isolate the logic and data into a &amp;ldquo;casing&amp;rdquo; (provided by a blockchain) which is utterly verifiable. Every compute step along the logic sequence is verified by every node on the network.&lt;/p&gt;

&lt;p&gt;Those nodes could be other banks within a consortium, internal audit, external audit, the business&amp;rsquo;s accounting department, your grandmother, or whomever is in the network. But all of these nodes will be checking each other&amp;rsquo;s work.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Simply put, all of the computation is performed (and, checked) by all of the (full) nodes on the network.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Down to &lt;code&gt;pop-off-the-stack&lt;/code&gt; computes.&lt;/p&gt;

&lt;p&gt;Now this is overkill for many, many computing requirements which an enterprise may have (indeed the &lt;strong&gt;vast&lt;/strong&gt; majority of an enterprise&amp;rsquo;s computing requirements do not need this level of computation verifiability).&lt;/p&gt;

&lt;p&gt;But for instances where one has a &lt;strong&gt;data driven relationship&lt;/strong&gt; &amp;ndash; whether that is a compliance relationship with a regulator, a customer relationship, or a peer relationship &amp;ndash; it may be a price which institutions are willing to pay. In some contexts.&lt;/p&gt;

&lt;p&gt;But. And this is the key. It is &lt;code&gt;certainly&lt;/code&gt; very different that a simple python script running on someone else&amp;rsquo;s metal.&lt;/p&gt;

&lt;h3 id=&#34;axis-2-spectrum-of-privacy&#34;&gt;Axis 2 =&amp;gt; spectrum of privacy&lt;/h3&gt;

&lt;p&gt;While a python script is not highly verifiable, it &lt;strong&gt;is&lt;/strong&gt; easy to hide and to keep protected. I&amp;rsquo;ve said it over and over again, blockchains are transparency machines, they are not privacy machines. There currently is no blockchain backed smart contract mechanism which can provide the level of verifiability described above &lt;strong&gt;and&lt;/strong&gt; that can also provide &lt;em&gt;any&lt;/em&gt; level of privacy beyond simple obscuration of the data on the blockchain.&lt;/p&gt;

&lt;p&gt;It is true that there are &lt;strong&gt;highly theoretical&lt;/strong&gt; ideas, such as MIT&amp;rsquo;s Enigma among others, to increase the privacy of blockchain stored data. Maybe some of these will go to market and/or become community adopted in the near term and this problem will be short term. But it certainly is the reality for folks wanting to build smart contracts now.&lt;/p&gt;

&lt;p&gt;It may also be possible in the medium term to separate the verifiability spectrum of the data (e.g., what&amp;rsquo;s cool about a blockchain; but also its downside in contexts where privacy is paramount) and the verifiability spectrum of the logic (smart contracts), but at this point they go together. As an example of what I&amp;rsquo;m talking about, Ethan and I have discussed what it would take to be able to run an EVM as a containerized computation engine that could provide the high level of logic verifiability while not &lt;em&gt;requiring&lt;/em&gt; the low level of blockchain privacy.&lt;/p&gt;

&lt;p&gt;Alas, we have not had time to pursue this idea. Yet! :-)&lt;/p&gt;

&lt;h2 id=&#34;contracts-v-scripts-or-why-do-i-keep-telling-folks-this-is-legal-tech&#34;&gt;&lt;code&gt;contracts v. scripts&lt;/code&gt; &lt;em&gt;or&lt;/em&gt; why do I keep telling folks this is legal tech?&lt;/h2&gt;

&lt;p&gt;One of the ways in which these &lt;code&gt;scripts&lt;/code&gt; are, kind of, sort of, &lt;code&gt;contracts&lt;/code&gt; (at least they can be programmed to fulfill many of the legal requirements of real world commercial contracts) is that counter-parties to an agreement have never had an ability to regulate their data driven &lt;em&gt;relationships&lt;/em&gt; via a mechanism which they did not wholly control.&lt;/p&gt;

&lt;p&gt;Great strides have been made in industry around automation of a broad range of business &lt;em&gt;processes&lt;/em&gt;, but the range of business processes which has been automated for the most part stops at the rotating glass door. And the reason for that is simple (see, above).&lt;/p&gt;

&lt;p&gt;In other words, if you&amp;rsquo;re the big player and you can run the computation sequence on your metal then great, but everybody else either has to duplicate the work of formulating the automation and process management components on &lt;em&gt;their side&lt;/em&gt; of the data driven relationship &amp;ndash; or they have to just trust you.&lt;/p&gt;

&lt;p&gt;And, to be clear, both are viable choices for a business depending on its circumstances. I am not really gonna bug Amazon to let me come verify physically all of the AWS resources Eris consumed last month because it is a ridiculous request and it is not important enough to our business. We&amp;rsquo;re happy to trust AWS to report correctly our resource usage, calculate what we owe them, and to pull that amount from the credit card they keep on file.&lt;/p&gt;

&lt;p&gt;But, smart contracts offer a third way, a semi-new paradigm, wherein legally binding agreements (&lt;a href=&#34;https://erisindustries.com/components/erislegal/&#34; target=&#34;_blank&#34;&gt;backed up by real world agreements&lt;/a&gt;) can be built to run within a network of computers which no single party can pull the plug on and in which all parties to the agreement &lt;strong&gt;participate&lt;/strong&gt; in the management and supervision of the computers which have automated the agreement. Smart contractifying the data driven relationship which Eris and AWS maintain wouldn&amp;rsquo;t mean that I could &lt;em&gt;necessarily&lt;/em&gt; verify the resources we used (physically), but it would certainly get us much closer than the current state of affairs.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Simply put, smart contracts provide the backbone for automating business processes which reach &lt;em&gt;outside&lt;/em&gt; of the rotating glass doors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In other words, the sweet spot for smart contracts is data driven &lt;em&gt;relationships&lt;/em&gt; &amp;ndash; or business processes across organizations.&lt;/p&gt;

&lt;p&gt;Despite being uneasy with the &lt;code&gt;contracts&lt;/code&gt; part of &lt;code&gt;smart contracts&lt;/code&gt; I still do tell people quite regularly that Eris is a legal tech company. And I&amp;rsquo;ve believed that all along. Even before this company existed, this technology has always &amp;ldquo;been&amp;rdquo; legal tech to me.&lt;/p&gt;

&lt;p&gt;The reason this tech has &amp;ldquo;been&amp;rdquo; legalTech to me is because I firmly believe smart contracts will be at least one enabler of a movement which was already formulating and bubbling up. A movement of legally capable technologists and technically capable lawyers bringing their skills and talents to a new generation of business process automation tools which focus not on automating intra-enterprise data driven &lt;em&gt;processes&lt;/em&gt; but rather on inter-enterprise data driven &lt;em&gt;relationships&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;At Eris we definitely are not the only group at the intersection of law and technology who sees this power. I have noticed, and welcome, a distinct increase in understanding from various law professors I know, have talked to, or follow on twitter which mirror what our friend Houman said:&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Why I&amp;#39;m now teaching basics of &lt;a href=&#34;https://twitter.com/hashtag/coding?src=hash&#34;&gt;#coding&lt;/a&gt; and CS concepts in my introductory Contracts course. &lt;a href=&#34;http://t.co/6addHYNyAi&#34;&gt;http://t.co/6addHYNyAi&lt;/a&gt; &lt;a href=&#34;http://t.co/a6w47psJ3M&#34;&gt;pic.twitter.com/a6w47psJ3M&lt;/a&gt;&lt;/p&gt;&amp;mdash; Houman Shadab (@HoumanShadab) &lt;a href=&#34;https://twitter.com/HoumanShadab/status/643541718734868480&#34;&gt;September 14, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m a bit skeptical as to whether &lt;code&gt;dumb scripts&lt;/code&gt; will ever replace human lawyers, but they may very well change how lawyers operate when advising information age enterprises as to how to regulate their data driven relationships with their peers and customers. So the future is definitely bright for the intersection of law (the regulation of our relationships) with technology!&lt;/p&gt;

&lt;h2 id=&#34;postface&#34;&gt;Postface&lt;/h2&gt;

&lt;p&gt;The bottom line is that these &amp;ldquo;things&amp;rdquo; (no matter what we call them) can be made to regulate agreements just as easily as they can be made to regulate governance just as easily as they can be made to regulate professional relationships. And therein lies their power and their USP.&lt;/p&gt;

&lt;p&gt;What we are just at the beginning stages of learning is this. When you put some lawyers and technologists together and give them this technology amazingly impactful things start to happen.&lt;/p&gt;

&lt;p&gt;Happy &lt;code&gt;dumb script&lt;/code&gt;ing!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Photo Credit&lt;/strong&gt; &amp;ndash; &lt;a href=&#34;https://www.flickr.com/photos/stevensnodgrass/5480863464/&#34; target=&#34;_blank&#34;&gt;Steve Snodgrass @ Flickr&lt;/a&gt; (Licensed CC-By)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How I (currently) Explain The State of Blockchains To Executives and Researchers</title>
      <link>http://localhost/2015/08/10/how-i-current-explain-blockchains/</link>
      <pubDate>Mon, 10 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/08/10/how-i-current-explain-blockchains/</guid>
      <description>

&lt;p&gt;Seems everyone these days is getting into the game of providing frameworks for thinking about blockchains and trying to convince others that their definitions are the correct definitions. Into that marketplace of metaphors, I provide this entry.&lt;/p&gt;

&lt;p&gt;When I look at the development of the sector generally, what I see is roughly two &amp;ldquo;types&amp;rdquo; of blockchains and within each of those types, two &amp;ldquo;flavours&amp;rdquo; of blockchains. These types and flavours can be graphically depicted using two dimensions.&lt;/p&gt;

&lt;p&gt;On the X axis of the diagram we can formulate a spectrum of permission-able-ness. These permissions are usually capabilities based permissions, meaning the permission is to interact with a capability of what the blockchain can do. Whether a blockchain design is capable of being put into permissioned mode or not is an important operational consideration for application developers (whether those are startups or enterprises). That permission layer may provide an advantage in censorship resistance (if it is absent) or in compliance risk mitigation (if it is present).&lt;/p&gt;

&lt;p&gt;On the Y axis of the diagram we can formulate a spectrum of optimizations. These optimizations are roughly binary at this point, although we fully expect that it will be more of a spectrum that will develop over time. On one side we have transactional optimized blockchains. These are the chain designs which have been developed to support digital cash and are now being permissioned and built to provide clearing and settlement solutions. On the other side we have logic optimized blockchains. These blockchains have been optimized to provide an arbitrary framework for running small scripts which are saved onto the blockchain (which we call &amp;ldquo;smart contracts&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;In total, my mental diagram looks like this:&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/blockchain-quadrant.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;While the above may not perfectly capture all of the blockchains in existence, I think it does a fairly good job of providing a framework for placing most of the space into some easier to consume boxes.&lt;/p&gt;

&lt;h2 id=&#34;the-optimization-spectrum&#34;&gt;The Optimization Spectrum&lt;/h2&gt;

&lt;p&gt;On the lower half of the quadrant we have blockchains which give application developers a clear and efficient way to verifiably track title transfers in a distributed environment. Whether these blockchains are permissioned or unpermissioned, they are a good fit for application developers seeking to build transfer mechanisms, clearing and settlement, and provenance applications. In other words, they&amp;rsquo;re really interesting property registers. These blockchain designs &amp;ndash; to some extent or another depending on the blockchain in question &amp;ndash; do provide some limited logic capabilities (bitcoin, famously, has its multi-signature capacity which operates in a similar area to logic). However, they really have been optimized to track movement of title over &amp;ldquo;property&amp;rdquo; from one node on the network to another.&lt;/p&gt;

&lt;p&gt;On the upper half of the quadrant we have blockchains which give application developers a clear and efficient way to verifiably track business and governance process logic in a distributed environment. Whether these blockchains are permissioned or unpermissioned, they are a good fit for application developers seeking to build complicated business process mechanisms. In other words, they&amp;rsquo;re really interesting process auditors. Similarly to transaction optimized blockchain designs, they have capabilities of supporting verifiable title transfers, but they have really been optimized to run arbitrary business logic.&lt;/p&gt;

&lt;h2 id=&#34;the-permissioned-spectrum&#34;&gt;The Permissioned Spectrum&lt;/h2&gt;

&lt;p&gt;On the left half of the quandrant we have unpermissioned blockchains. These blockchains lack an access control layer and as such handle anti-spam and consensus via purely economic mechanisms. We may not like to have to pay a bank a fee to update our address in their database, but if our bank operates on a public blockchain that&amp;rsquo;s basically what we&amp;rsquo;d have to do in order to overcome the necessary anti-spam protections (and other protections) which have been put in place to protect these unpermissioned blockchains. These blockchains are the best solution for censorship resistance. If someone needs data to exist forever in a rock solid vault of math and environmental degradation, then public blockchains are the place for that data. Public blockchains also have public governance mechanisms, as we are finding out with the blockchain debate. Whether the increased uncertainty which is the current state of the public blockchain governance oligarchy is a good or a bad thing remains to be seen. Lastly, public blockchains have been designed to provide the backbone for a variety of applications. That means that they were probably not well suited for any one type of application. Depending on what application one is seeking to build this may be a benefit or a detriment.&lt;/p&gt;

&lt;p&gt;On the right half of the quandrant we have blockchains which are capable of being put into a permissioned mode. Generally speaking, permissions can be made fully public, or use whitelisting to control who can validate batches of transactions, who can add functionality to the blockchain in the form of smart contracts, and who can transact with the chain. These chains are not susceptible to external attack by unknown actors because the clients running the chain will reject blocks from not-whitelisted nodes (if the client is running in &amp;ldquo;permissioned&amp;rdquo; mode for a particular blockchain in question). These chains also may have slight performance advantages over public blockchains because they are only dealing with the functionality required for that chain rather than all the functionality for all of the people for all of the time. While permissioned chains have some upsides, they also have some downsides of course. The downsides include a reduction in censorship resistance, and an increase in responsibility for application developers (who now have to also have &lt;em&gt;some&lt;/em&gt; operational responsibilities).&lt;/p&gt;

&lt;p&gt;Hope that helps your own mental framing of the state of blockchain technology.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why The &#39;Crypto Will Save Africa&#39; Line Irks Me</title>
      <link>http://localhost/2015/03/17/btc-and-smbs/</link>
      <pubDate>Tue, 17 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/03/17/btc-and-smbs/</guid>
      <description>

&lt;h3 id=&#34;bitcoin-and-emerging-markets&#34;&gt;Bitcoin and Emerging Markets&lt;/h3&gt;

&lt;p&gt;If you&amp;rsquo;ve been around the cryptocurrency space for a hot minute, you&amp;rsquo;ll have heard it. Bitcoin is the solution to the problem of the unbanked.&lt;/p&gt;

&lt;p&gt;I was speaking with someone the other day and I let slip my skepticism about this meme, mantra, selling point, whatever it is and the person asked why. I later posted something along similar lines in our slack and others asked me why was I irked by this mantra. So I decided to log my thoughts and organize them in a (hopefully) more coherent fashion.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Preamble&lt;/em&gt;: To be fair, there&amp;rsquo;s nothing wrong with wanting to help; there&amp;rsquo;s nothing wrong with giving a damn; and I don&amp;rsquo;t &lt;em&gt;dislike&lt;/em&gt; the line.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Do I think that Bitcoin can assist with the unbanked problem?&lt;/em&gt; I see potential here. But also remain skeptical, a skepticism borne of my own experiences and my own perception of the world.&lt;/p&gt;

&lt;h3 id=&#34;hawala-networks-some-background&#34;&gt;Hawala Networks: Some Background&lt;/h3&gt;

&lt;p&gt;Hawala networks have been established over years and (sometimes) decades by leveraging established, and often complex, filial, tribal, class, and other identity mechanisms. These mechanisms were what allowed the early Hawala operators to gain sufficient trust of a sufficient constituency of displaced folks to make it worth their while to take the risk of flying bundles of cash between places (often where security was not a foregone conclusion). As the market for Hawala services has consolidated, these old ties, forged over years of movement and friendships and kinships still exist; and in many places they thrive. Hawala agents in locations where diaspora live are often quasi-community centers which assist in maintaining the vibrancy of many of these relationships. These ties provide a value add to the overall service which the Hawala network provides to its users.&lt;/p&gt;

&lt;p&gt;Hawala networks are, indeed, relatively costly. However, when one looks at the (purely external) costs which Hawala networks must bear, a not insignificant portion of that cost is in compliance costs. These costs will have to be borne by the network no matter the database which logs transmissions of money from a remitter to a remittee. I am doubtful that using blockchain technology will be able to sufficiently address these compliance costs in any meaningful way which will satisfy regulators. One may argue that &amp;ldquo;the regulators are wrong and just need to get with the program&amp;rdquo;, but that is a cop out argument which neither embraces how legal norms develop nor is particularly helpful to the process of legal progress.&lt;/p&gt;

&lt;p&gt;Other costs are due to business process inefficiencies within some networks. Perhaps these costs could be (modestly) reduced by use of blockchain technology. Hawala can be an extraordinarily competitive market and the incentives to reduce costs for the users of the networked service via improved business process efficiencies are present where competition amongst Hawala networks exists. It is also true of course that in other places monopolies or quasi-monopolies have developed and the incentives are less present.&lt;/p&gt;

&lt;p&gt;The World Bank has highlighted the cost structure of remittance and hawala companies, as have others within the professional development community, saying that remittance companies extract an unfair amount of rent out of the network. That critique of Hawala business practices may or may not hold water; but whether or not bitcoin is the solution to this Hawala cost problem is an entirely different matter. An even more remote line of reasoning pits bitcoin not only as the solution to Hawala costs but also as the solution to the (more generalized and harder to address) unbanked problem.&lt;/p&gt;

&lt;p&gt;Again, bitcoin and cryptocurrency may have a positive role to play within this system, but instead of simply assuming that because the technology enables certain behaviours that those behaviours will actualize are different questions. The real questions which the &lt;code&gt;bitcoin_will_solve_this&lt;/code&gt; crowd needs to be asking are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;what will be the tipping point sociologically, legally, and financially (all three of which probably need to be satisfied) in order to drive mass adoption of bitcoin in the developing world;&lt;/li&gt;
&lt;li&gt;why would mass adoption of bitcoin in the developing world be a good thing (for users; for bitcoin); and&lt;/li&gt;
&lt;li&gt;what can be done &lt;strong&gt;now&lt;/strong&gt; to positively contribute toward laying the foundations that iterate toward that tipping point.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;the-unbanked-problem-look-closer&#34;&gt;The Unbanked Problem: Look Closer&lt;/h3&gt;

&lt;p&gt;The unbanked problem? It&amp;rsquo;s a problem indeed. But it is a big, complex problem which will only find a solution via a &lt;a href=&#34;http://oxfamblogs.org/fp2p/what-questions-help-us-understand-how-change-happens/&#34; target=&#34;_blank&#34;&gt;harmonized effort&lt;/a&gt; across numerous verticals and horizontals &amp;ndash; of which technology (meaning, in this context, fintech generally, and bitcoin more specifically) are only one piece. Holistic societal change happens, but most often requires significant coordination and synergy across numerous sectors of society, business, and government.&lt;/p&gt;

&lt;p&gt;One phenomenon which constrains adoption of any technical solution to problems of poverty is that poorer folks have different risk profiles and appetites for change than many people first thought. While the area of risk profiles of the poor is an ongoing (not particularly new) research, folks very often mis-assume that just because technical solutions to problems exist that these will be easily mainstreamed in developing countries.&lt;/p&gt;

&lt;p&gt;This is rarely the case. Even mobile money, one of the most natural fits and impactful technologies to address unbanked issues &amp;ndash; took real effort and patience and iteration to get off the ground. Other technologies which have been airdropped in from afar have received even less adoption. The professional development community has an acryonym for these types of campaigns which seek to &amp;ldquo;help&amp;rdquo; but fail to understand what the real problems are and/or do not engage with affected communities to find workable solutions: #SWEDOW, for &lt;code&gt;S&lt;/code&gt;tuff &lt;code&gt;WE&lt;/code&gt; &lt;code&gt;DO&lt;/code&gt;n&amp;rsquo;t &lt;code&gt;W&lt;/code&gt;ant.&lt;/p&gt;

&lt;p&gt;As a community, I would posit that the blockchain and smart contract technology sector is at the very early stages of actual work, rather than rhetoric. I am pleased to have been invited to participate in a working group convened by the &lt;a href=&#34;http://www.cgdev.org&#34; target=&#34;_blank&#34;&gt;Center for Global Development&lt;/a&gt; who is looking into a small piece of this problem (namely, &lt;a href=&#34;http://www.cgdev.org/blog/are-anti–money-laundering-policies-hurting-poor-countries-new-cgd-working-group-report&#34; target=&#34;_blank&#34;&gt;what effect does developed countries&amp;rsquo;&lt;/a&gt; AML/KYC/AntiTerrorism statutes have on the unbanked/debanked problem).&lt;/p&gt;

&lt;p&gt;Again, while I do believe there is some potential here, I have seen many technologies come and go which were theoretically better and theoretically solved problems (sometimes in quite elegant ways) and were never adopted by even geeky development workers, much less not technically savvy beneficiaries.&lt;/p&gt;

&lt;h3 id=&#34;so-should-we-not-bother&#34;&gt;So Should We Not Bother?&lt;/h3&gt;

&lt;p&gt;Hell no. I bothered. I still bother. You should too. But &lt;strong&gt;only&lt;/strong&gt; if you&amp;rsquo;re genuinely interested in putting in the work necessary to help folks find solutions to problems they actually have. If that&amp;rsquo;s you, here&amp;rsquo;s what I would highly recommend.&lt;/p&gt;

&lt;p&gt;Step 1. Go &amp;ldquo;There&amp;rdquo; (wherever &amp;ldquo;there&amp;rdquo; is to you).&lt;/p&gt;

&lt;p&gt;Step 2. Talk to Folks; Learn Their Problems; Understand Their Constraints.&lt;/p&gt;

&lt;p&gt;Step 3. Talk About Solutions.&lt;/p&gt;

&lt;h3 id=&#34;what-s-one-problem-you-ve-seen&#34;&gt;What&amp;rsquo;s One Problem You&amp;rsquo;ve Seen?&lt;/h3&gt;

&lt;p&gt;Personally, and this is only one human&amp;rsquo;s idea, I would recommend folks within the blockchain technology space take a serious look at how they can assist crafting solutions which small businesses in developing countries face. And there are many.&lt;/p&gt;

&lt;p&gt;To be clear, I don&amp;rsquo;t mean micro businesses.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/hargeisa-1.jpg&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;I mean small businesses.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/hargeisa-2.jpg&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;These are an often overlooked, but vital, piece of the economy. Small businesses are also, I think, where blockchain technology really finds a good cost-benefit balance against real, current problems these potential users of a solution face.&lt;/p&gt;

&lt;p&gt;One example (of many): tons of small businesses in Africa conduct cross border trade. Yet Intra-African Trade is a notorious sticking point. There are a variety of reasons for that, some of which blockchain technology could perhaps mitigate, some of which not. But where blockchain technology could be leveraged to provide useful solutions to small businesses, the opportunity could be vast.&lt;/p&gt;

&lt;p&gt;These problems which small businesses face provide a decent starting point and present far fewer problems than the challenges of the unbanked. The challenges faced by small businesses are less holistic, cross-cutting, and &lt;em&gt;hard&lt;/em&gt; than the deep rooted social problems of poverty which the unbanked is part of.&lt;/p&gt;

&lt;p&gt;The problems of small businesses are, simply, more approachable to folks who are not professional development workers. International development is a profession (for better or worse) and folks spend years learning how to work on such systemic problems; to really contribute positively to deep seated poverty problems requires effort, knowledge, presence, and time. Don&amp;rsquo;t believe me? Try applying for a position with any of the big NGOs without a Masters degree in a development related field.&lt;/p&gt;

&lt;p&gt;On the other hand, many business problems are simply business problems. Practicing law in Somaliland for years, I was continually surprised by how small, iterative business process efficiencies could drastically assist my small business clients.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Bottom line&lt;/code&gt;: for those with the blockchain technology sector who are looking to &amp;ldquo;help&amp;rdquo; but who are not professionals, I would encourage them to look at this sector first. Perhaps smart contract and/or blockchain technology could assist.&lt;/p&gt;

&lt;h3 id=&#34;this-is-exactly-what-we-re-trying-to-assist-folks-to-build&#34;&gt;This is Exactly What We&amp;rsquo;re Trying To Assist Folks to Build&lt;/h3&gt;

&lt;p&gt;Depending on the problem one was trying to solve, there is a strong potential that one would use some sort of a token which represents an asset that was callable against a particular bank and/or the world along with some escrow and/or letter of credit function (if one was, say, trying to ease intra-african trade restrictions between consenting corporations). If the deal value of what you were trying to make easier was below a certain threshold, you could probably use some of the functionality of a fully open, heavy, big bad public blockchain; yet on the other side of such a threshold it would be foolhardy to rely upon a BBPB.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s why we believe in helping DApp makers be able to embrace some level of blockchain agnosticism behind the scenes &amp;ndash; the entire reason we&amp;rsquo;ve built eris.&lt;/p&gt;

&lt;p&gt;So please do, go find some problems, sit with folks and craft some solutions, and feel free to build it on the stack that was made for the problem solvers. The doers.&lt;/p&gt;

&lt;p&gt;~ # ~&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On Increasing Verifiability of Data For Small Businesses</title>
      <link>http://localhost/2015/01/08/on-increasing-verifiability/</link>
      <pubDate>Thu, 08 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/01/08/on-increasing-verifiability/</guid>
      <description>

&lt;p&gt;The other night, a friend posed the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Let us say that I and X other people want to fund a venture in an economy not our own. Let us say the deal was structured so that the funders group gets Y% of revenue until the raise is repaid in full plus Z% interest until the principal is paid. Wouldn&amp;rsquo;t that be a great use case for a smart contract?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So what is happening here? This is fairly standard revenue-linked debt financing, but perhaps with a cross-border, crowd-fund component. This was posed, for the record, in the context of a cryptoequity, cryptoasset, and smart contract discussion. And yes, debt financing could make a very fine use case for a smart contract.&lt;/p&gt;

&lt;p&gt;See, here&amp;rsquo;s the thing though, it wouldn&amp;rsquo;t make a great single smart contract. It would make an adequate smart contract. But it would make a fantastic basis for increasing verifiability for the entire business to be ran on a suite of smart contracts which would be responsible for tracking sales and then calculating interest, revenue distribution, and other things.&lt;/p&gt;

&lt;p&gt;This is crucially important for many businesses in emerging economies as well as many other economies. For years, I was a lawyer for such businesses and/or their investors. The one common theme that I have seen in years of advising small and medium emerging economy businesses, is that they struggle with verifiability. Some may argue that many businesses in such contexts do not have computers so how could they even track things. This is simply not the case in my experience. Most middle class folk, and certainly business owners, even in the most poor countries I&amp;rsquo;ve lived in, have increasingly had access to smart phones and computers. So it is not really a technical problem for many; at least at this point in history.&lt;/p&gt;

&lt;p&gt;While many businesses may not have an interest in increasing the verifiability of many aspects of their businesses, many others do. And investors in those businesses built in emerging economies, which are often (but not exclusively) diaspora or groups of diaspora &lt;em&gt;need&lt;/em&gt; to have increased verifiability as to what is happening with their investments.&lt;/p&gt;

&lt;h3 id=&#34;increasing-verifiability-with-saas-based-solutions&#34;&gt;Increasing Verifiability with SaaS Based Solutions&lt;/h3&gt;

&lt;p&gt;The current answer for how to increase verifiability of business information for many small business in many economies is to use a software as a service (SaaS) solution. This is usually a webapp built by a company which is providing services to another company; this is &lt;em&gt;part&lt;/em&gt; of what people mean when they say &amp;ldquo;the cloud&amp;rdquo;. This makes sense for many business, and for investors, and is certainly a &lt;a href=&#34;http://tekfin.com/2012/05/24/equity-pressure-and-alternative-funding-solutions/&#34; target=&#34;_blank&#34;&gt;positive and important step&lt;/a&gt; toward increasing verifiability of the business.&lt;/p&gt;

&lt;p&gt;The general premise which I have, my operating hypothesis, is that while SaaS solutions do increase verifiability for small businesses, the system which must be established to provide effective coverage of the data of the company &amp;ndash; and how that system is to be built on a SaaS model backbone &amp;ndash; is not ideal. Let me explain.&lt;/p&gt;

&lt;p&gt;When only dealing with a simple accounting system for a small business this system appears to work well. Indeed, a single account on &lt;a href=&#34;https://xero.com&#34; target=&#34;_blank&#34;&gt;Xero&lt;/a&gt; or something similar would go a long way vis a vis keeping accounts on paper, taking photos of those accounts and sending an email with a picture attachment from a single smart phone. And, for the record, yes, I have reviewed accounts for clients under exactly that scenario; sometimes you just have to work with what you have. That alone would be a drastic improvement on using paper based solutions with human agents to track everything. This system could be used to track revenue and expenses of the business and produce a report which could be circulated among the funders of the venture along with their repayments for a given period.&lt;/p&gt;

&lt;p&gt;Next, let&amp;rsquo;s add a bit more complexity to the system managing the company&amp;rsquo;s data. Say the business wanted to use &lt;a href=&#34;https://www.vendhq.com/&#34; target=&#34;_blank&#34;&gt;Vend&lt;/a&gt; as its POS system. Vend scans outgoing products (sales) and provides a point of sale (POS) solution and then is able to sync that data to an accounting system &amp;ndash; like Xero. At this point, what would (functionally) be happening is that the agent responsible for entering sales into the books now would no longer be a human bookkeeper looking at receipt books, but rather would be an automated, robotic agent who (1) keeps records in its system of sales and then (2) uses API interaction to register and send across data to another provider (in this example &amp;ndash; Xero). At this point there are two sets of sales data &amp;ndash; one with the Vend system and one which is used by the accounting system to formulate a portion of the overall bookkeeping system. These data sets, while kept in sync via APIs between the accounting system and the POS system, are redundant.&lt;/p&gt;

&lt;p&gt;Now, let us add one more layer of complexity. A company does not have only revenue. It also has expenses. Let us say that the business wanted to have increased verifiability as to expenses so it integrated a solution like &lt;a href=&#34;https://www.xpenditure.com&#34; target=&#34;_blank&#34;&gt;Xpenditure&lt;/a&gt; into its system. Xpenditure is a solution which allows businesses to take a picture of their receipts and the solution will then translate those into expense reports which can be synced via APIs back to an accounting system &amp;ndash; like, say, Xero. Again, we have a similar thing happening as with the sales side of the business. The agent responsible for &lt;em&gt;tracking&lt;/em&gt; accounts payable would no longer be a human agent writing in books, but rather would be an automated, robotic agent writing to a data set (which in turn is synced to another data set in the accounting system). As with the sales system, the interaction between Xpenditure and Xero would be based on API paradigms which are currently well developed in the SaaS world.&lt;/p&gt;

&lt;p&gt;Each of the companies providing this SaaS solution system is responsible for the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;providing a helpful user interface (what I call data utility, perhaps an arbitrary label)&lt;/li&gt;
&lt;li&gt;providing an available anywhere data set (partially this is a data transmission function, partially it is a user interface function)&lt;/li&gt;
&lt;li&gt;doing useful things with that data (again, data utility)&lt;/li&gt;
&lt;li&gt;storing and securing data (data storage and permissions)&lt;/li&gt;
&lt;li&gt;providing an interactivity layer with other service providers (usually this is a data transmission function)&lt;/li&gt;
&lt;li&gt;making sure that the world state of &amp;ldquo;their&amp;rdquo; piece of the data stays properly synchronized with the &amp;ldquo;others&amp;rdquo; pieces of the data (again, a data transmission function)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The result here is a drastic increase in verifiability over a paper based system for the business owners (who no longer need to be in the office at the same time as the bookkeepers to verify all the things) as well as for the funders. The funders are able to verify that receipts from both the accounts receivable (Vend based SaaS system) and accounts payable (Xpenditure based SaaS system) sections result in the profit loss which is calculated by the accounting system (Xero based SaaS system) and then they can see that their repayments are definitely on point by comparing the amount they were transmitted against the sales figures (since that was the agreement that was posited in the hypothetical). This is, undoubtedly, a better solution than currently exists in vast numbers of small businesses all around the world.&lt;/p&gt;

&lt;h3 id=&#34;taking-stock&#34;&gt;Taking Stock&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s take a look at what we have so far.&lt;/p&gt;

&lt;p&gt;We have an increase in &lt;strong&gt;utility&lt;/strong&gt; for the data-driven (financial) interactions of this company by using three cloud-based SaaS solutions which are built to interact with one another.&lt;/p&gt;

&lt;p&gt;We have an increase in &lt;strong&gt;verifiability&lt;/strong&gt; for the data-driven (financial) interactions of this company by moving tracking functions from human agents to robotic agents under human supervision and also because we have distributed the tracking functions and thus have distributed our points of failure over just corrupting one clerk (which is a single point of failure in many paper based accounting systems).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Well, then, job done, no? The business wins.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Not quite. It benefits from this SaaS based system for sure. But is this structure resilient? Is it flexible? Is it self managing? Can it adapt?&lt;/p&gt;

&lt;h3 id=&#34;the-challenges-of-the-saas-approach&#34;&gt;The Challenges of the SaaS Approach&lt;/h3&gt;

&lt;p&gt;So we have briefly covered the structure and benefits of using a SaaS solution of a fictional business which has distributed funders. Let&amp;rsquo;s look at some of the challenges that system presents.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data portability&lt;/strong&gt; &amp;ndash; many, but certainly not all, SaaS solutions allow some ability to export one&amp;rsquo;s data. But few SaaS solutions make this easy. This is simple, because the business model &amp;ndash; while based on the provision of &lt;em&gt;data utility&lt;/em&gt; functionality &amp;ndash; requires leveraging the &lt;em&gt;data storage&lt;/em&gt; as a factor toward folks continuing to pay for the &lt;em&gt;utility&lt;/em&gt; provided by the service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Data interoperability&lt;/strong&gt; &amp;ndash; the lovely harmony described above works precisely because engineers at the various companies have found it is in their respective company&amp;rsquo;s interests to build APIs between these systems and ensured that they work together. Data is routed between their respective silos; and it is a wonderful thing when the system works. But the challenge here is that there is an &lt;code&gt;in-group&lt;/code&gt; || &lt;code&gt;out-group&lt;/code&gt; mechanism in place in many SaaS ecosystems wherein these integrated systems work really quite well if you stay within the group, but if you do not want to stay within the group then there is often a problem. Let&amp;rsquo;s say the business was located in a jurisdiction that for whatever reason, Xero was forced to stop operating. The business would have to (1) migrate their data to a new service provider (see the above) and &lt;em&gt;also&lt;/em&gt; ensure that (2) the new service provider also had plugins with the other pieces of their SaaS stack (or, migrate those as well).&lt;/p&gt;

&lt;p&gt;This is a challenge for businesses, especially small businesses, and I think it is unnecessary. If a software company wants to provide &lt;em&gt;data utility&lt;/em&gt; services to its customers (which, really, is what most SaaS is about), that is great, but I query whether SaaS providers need to &lt;em&gt;hold&lt;/em&gt; the data.&lt;/p&gt;

&lt;h3 id=&#34;is-there-alternative-architecture&#34;&gt;Is There Alternative Architecture?&lt;/h3&gt;

&lt;p&gt;One possible alternative to the SaaS + API system described above which is slowly developing, is &lt;strong&gt;participatory architecture&lt;/strong&gt; (disclosure, I made this term up out of thin air, mostly because it makes sense to me). One of the tenets of participatory architecture is to try to separate out the layers of data-driven interactions namely:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data utility&lt;/li&gt;
&lt;li&gt;data transmission&lt;/li&gt;
&lt;li&gt;data verifiability&lt;/li&gt;
&lt;li&gt;data permissions&lt;/li&gt;
&lt;li&gt;data storage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;because each of these are distinct challenges.&lt;/p&gt;

&lt;p&gt;With a SaaS based solution, what happens is that the entire data set of an organization is parsed vertically (as in, sectioned into accounting data, expense data, sales data, continuing with our fictional business described above) and then service providers who the organization elects for any given vertical column then become responsible for providing the full vertical stacking of the data-driven interaction for that section of the entire data set of the company. This becomes their zone of responsibility for the fictional business&amp;rsquo;s data. The architecture roughly looks like this:&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/saas-structure.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;There are two things which I am struck by when thinking about this system from an organization&amp;rsquo;s perspective (which, as a consumer of SaaS services for a long time I have done lots of). The first thing is the amount of redundancy in this system. Each of those service providers syncs its data with another service via the data transmission. This creates numerous redundant data sets. This may be a good thing; but it may not be. Secondly, there is a challenge of dealing with bad data points which get into the system and how the various syncing services handle changes to the data set and propagation of those changes across the whole of the data set. This second problem is likely a minor nuisance, but I have experienced it multiple times when dealing with such API driven systems.&lt;/p&gt;

&lt;p&gt;Now, let&amp;rsquo;s look at &lt;strong&gt;one way of many&lt;/strong&gt; ways in which a participatory architecture system could be used to redesign the above paradigm. In participatory architecture the emphasis is more on mastering the horizontal partitions of a data-driven interaction &amp;ndash; the rows in the diagram above. Service providers then are able to specialize in providing, say, transmission from sensor systems back to a &lt;a href=&#34;https://erisindustries.com/components/erisdb&#34; target=&#34;_blank&#34;&gt;Decerver&lt;/a&gt; &amp;ndash; or any receiver of data built on participatory architecture design principles. Specialists in structuring data storage are empowered to work on the best way to store data and the more arbitrary the better. Obviously, the same would apply through the other parts of the stack. The arrangement could look something like this:&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/pa-structure.png&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;In the above diagram, each of the color overlays is a service provider. They have been arranged just to show that different approaches are possible to deal with the overall dataset, and it does not require that, for example, two and only two consensus mechanisms are used.&lt;/p&gt;

&lt;p&gt;The crucial factor with participatory architecture, is to move away from a vertically arranged silo where a few service providers lend their computation and storage to the client (the business in this narrative) in return for a payment and toward a space where storage and computation are shared between the service provider and the business and the costs of development and operation of a service for a company are somehow realigned. Yet, in order for such an idea &amp;ndash; along with its many predecessors &amp;ndash; to succeed, it would have to happen in a way in which the client business need not have to spin up AWS instances, understand how to migrate a PostgreSQL, MongoDB, and MySQL datastores, etc.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;One &lt;em&gt;theory&lt;/em&gt; that we have at Eris Industries is that participatory architecture could have a chance at reconciling the value add of big data and information aggregation with privacy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the privacy issue is a norm that, while I only briefly discussed before, is increasingly important through an increasing number of sectors; as it should. If the computation and storage of a business&amp;rsquo;s data are rebalanced between the service provider and the business, a few things are likely to start happening.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;resiliency increases as the system develops fewer points of failure&lt;/li&gt;
&lt;li&gt;specifications between the layers of the stack become increasingly important to negotiate between service providers&lt;/li&gt;
&lt;li&gt;harmony within the dataset increases because the data set is viewed holistically rather than as pieces of different silos&lt;/li&gt;
&lt;li&gt;using private key encryption increases the utility of the data vis a vis passwords&lt;/li&gt;
&lt;li&gt;privacy has a chance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There may be more (or some of these may not apply &amp;ndash; this is, afterall, a think piece).&lt;/p&gt;

&lt;h3 id=&#34;what-role-smart-contracts-can-play-in-increasing-verifiability&#34;&gt;What Role Smart Contracts Can Play in Increasing Verifiability&lt;/h3&gt;

&lt;p&gt;There are two roles which smart contracts can play here.&lt;/p&gt;

&lt;p&gt;The first role is that when the data stack is reformulated along the lines as described above then smart contracts can be structured to determine what the data storage is in a new way which current SaaS solutions do not currently provide for.&lt;/p&gt;

&lt;p&gt;Remember, if you will, the original question this post began with. The idea the question is getting at is how can we bring closer &lt;strong&gt;what is agreed&lt;/strong&gt; (namely the terms of the debt financing) to the &lt;strong&gt;data of the interaction&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s what I mean by that in the context of the fictional agreement hypothetical at the beginning of this piece. The original agreement was that Y% of revenue would be paid (along with Z% interest) to the funder group by the business until the original debt was repaid. Using current SaaS based solutions one can calculate this without a challenge. Xero won&amp;rsquo;t ever know anything about what is to be paid to the funders, but you can enter transactions every repayment period back to the funder group and they can compare that against a statement they could be sent which was calculated within the Xero system. Or, alternatively, they could be granted limited access to the Xero system so that they could have some ability to verify that the reported sales numbers matched what the business actually is telling itself that it sold. Again, there is nothing wrong per se with this setup.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;However, at Eris Industries, we think we can do better bringing the agreements and the data of the interaction more closely aligned.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In a smart contract system a dashboard could be developed which would only need to know the revenue and the terms of the agreement, and the funders could see exactly what they were going to be paid in real time. Also, if the business is doing well and all the parties agreed that the terms of the deal should change, and if the system was built using smart contracts, when those smart contracts (the rule frameworks for what was agreed) change, then the entire data flow can update itself appropriately.&lt;/p&gt;

&lt;p&gt;Smart contracts&amp;rsquo; ability to shuffle data around between permissions groups is a massive win for privacy, and for service providers, because it would mean that service providers would no longer have to keep access to storing data and instead could keep focused on providing utility of data; or in providing really great transmission systems, or really great permissions tables; wherever a service provider is able to add a value add.&lt;/p&gt;

&lt;p&gt;The second role which smart contracts can play is in verifiability of execution. In a smart contract system, an investor would be able to have computers it controls verify every single execution cycle which led to any particular repayment, from expenses logged to sales made to other calculations which resulted in the repayment due to the funder group. Or, it could just let the robots do their super easy jobs, trust that everything was running smoothly, and just rake in the returns from this (now) booming fictional company!&lt;/p&gt;

&lt;p&gt;Together, this dynamic nature (and its resultant adaptability) along with the ability to verify computation (and its resultant certainty) of smart contracts dramatically increases the strength of the entire system as compared to a current SaaS based model.&lt;/p&gt;

&lt;p&gt;How, exactly, to get to a point where we can move beyond such theories as these, is still a work in progress.&lt;/p&gt;

&lt;h3 id=&#34;concluding-thoughts&#34;&gt;Concluding Thoughts&lt;/h3&gt;

&lt;p&gt;This is mostly a think piece, I do not mean to imply that this is the only way to get from A to Z, but I wanted to explain a bit more about how smart contract based systems could assist in further increasing verifiability for small business. I&amp;rsquo;d welcome your input as to where you see increases in verifiability for small business which I may not have included in this narrative. What did I miss? What did I get wrong? Please do let me know.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Smart Contract Writing, LLL and the creation of the Eris Standard Library</title>
      <link>http://localhost/2014/12/17/dennys-smart-contracting/</link>
      <pubDate>Wed, 17 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2014/12/17/dennys-smart-contracting/</guid>
      <description>

&lt;h3 id=&#34;doug-c3d-eris-how-it-all-began&#34;&gt;DOUG, C3D, Eris - how it all began&lt;/h3&gt;

&lt;p&gt;As some of you know, I have been writing smart contracts for Ethereum and Ethereum-like smart contract systems such as our own Thelonious for some time.&lt;/p&gt;

&lt;p&gt;Over all of this time, I have been using LLL (or Low Level Lisp-Like Language) or an LLL-derivative which we have made for utilizing Thelonious more effectively. Way back in POC3, I started with a Tic-Tac-Toe game, although few people remember that as much as they do the next contract I worked on, Denny&amp;rsquo;s Lotto - a simple automated lottery what was not controlled by any entity.
After this I moved on to work on what would turn out to be the project that grew out of control. It was supposed to be an un-shutdownable magnet link site. The very basic one had users, admins and would store a small description of the magnet link on chain. It was also the very first of my smart contracts which had an actual UI, thanks to Andreas who I have worked with in the past and is a great guy. It was during this project that a lot of the fundamental pieces of how I have developed dapps and smart contract suites from then on have worked. For one, this was the first time I created &lt;strong&gt;DOUG&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;What is DOUG? For those less familiar with the smart contract writing space, DOUG is the solution I came up with to a problem I was repeatedly encountering: namely, as soon as your smart contract writing moves from one or two contracts to many contracts you face a problem of how to find things. You have a bunch of contracts all with APIs that you know, but you don&amp;rsquo;t know what their addresses are and you certainly can&amp;rsquo;t hardcode them all in before deploying.&lt;/p&gt;

&lt;p&gt;This is where DOUG -the Decentralized Organization Upgrade Guy, comes in. The name - a backronym - of this contract reflects its role, which is to track the resources or contracts which exist in your &lt;strong&gt;decentralized application&lt;/strong&gt;, or &lt;strong&gt;DApp&lt;/strong&gt;. You can think of him as a kernel or maybe phone operator: his main role is to track resources (contracts), global variables, or anything else the DApp might need in order to give context to your individual smart contracts.&lt;/p&gt;

&lt;p&gt;At his most basic form, he is just a name registry and a permissions table of who can edit the name registry. When a contract, Contract A needs to send a message to Contract B, Instead of hard coding Contract B&amp;rsquo;s address into A, Contract A calls DOUG and requests for Contract B by name. The name being what Contract B was registered with DOUG under. This allows for Contract A to only know about DOUG and yet still be able to obtain all the information it needs to function.&lt;/p&gt;

&lt;p&gt;An added side bonus to these named resources is that if at some point Contract B was found to be defective, a new Contract B - (satisfying the same API) - Contract C - could be registered with DOUG. This is where the upgrade part of DOUG comes in. By making smart contracts flexible and having a core component from which all other smart contracts request information, DOUG makes smart contract suites much simpler.&lt;/p&gt;

&lt;p&gt;Another component that was formed in those early days was the UI which, in some abstract way, is the ideological ancestor to the Decerver we have today.&lt;/p&gt;

&lt;p&gt;And the last idea was from the the project purpose itself: a magnet Link database. As I was working on it I could help but think&amp;hellip; what if we could pull out the magnet links directly and put them into a torrent client? If we could automatically download and display material obtained in this way then we could extend the capabilities of the blockchain by giving it control over other less trusted content.&lt;/p&gt;

&lt;p&gt;I shared this idea with Casey and we worked out the contract controlled content dissemination - or &lt;a href=&#34;https://github.com/project-douglas/c3d&#34; target=&#34;_blank&#34;&gt;C3D&lt;/a&gt; - spec over the course of a couple of months. During this time Andreas had continued the work with DOUG in a new direction, creating the infamous &lt;a href=&#34;https://www.youtube.com/watch?v=hS_N_0bGc_Y&amp;amp;list=UUulC9g1l43PdTThQ_J1CBAA&amp;amp;index=10&#34; target=&#34;_blank&#34;&gt;People&amp;rsquo;s Republic of DOUG&lt;/a&gt;. It was also around this time that the &lt;a href=&#34;http://www.reddit.com/r/Bitcoin/comments/25sf4f/100000_bounty_for_software_platform_that_can/&#34; target=&#34;_blank&#34;&gt;Bitcoin Foundation Replacement Bounty&lt;/a&gt; came up. Its not well known, but replacing an organization like the Foundation with a distributed autonomous organization - or a &lt;strong&gt;DAO&lt;/strong&gt; - was my original goal in getting into smart contracts. So when a bounty came up for it, Casey, Preston and I decided to take what we were already building and build the original &lt;a href=&#34;https://github.com/project-douglas/eris&#34; target=&#34;_blank&#34;&gt;Eris&lt;/a&gt; platform, a serverless Reddit-like DAO complete with automated moderator selection processes and abuse protection.&lt;/p&gt;

&lt;p&gt;It could run itself completely automatically. It was also the first application of C3D which, since we were using BitTorrent back then and we did not have the Decerver, was a life saver, giving us fine-grained control over what the DApp downloaded, all encoded into a tree structure. It was important back then to encode the instructions in the tree because the lack of a Decerver meant we could not script control of the data we were handling.&lt;/p&gt;

&lt;p&gt;The original Eris was a beast of a smart contract suite. DOUG really shined, and made it at all possible. And the ideas of &amp;ldquo;Bylaws&amp;rdquo; - modular rights-granting contracts which could be used in conjunction with DOUG and evolve with the organization - all allowed for something that up till then had neve been built before, and not been repeated since: a platform which not only was completely decentralized but also &lt;strong&gt;decentrally upgradable&lt;/strong&gt;. The DApp designer did not need to know everything about how the platform was going to be used beforehand because the platform could upgrade itself if a need was seen later on.&lt;/p&gt;

&lt;p&gt;Of course, someone human had to actually write the upgrades. It was not, as some people suspected, Skynet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BUT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eris was a hulking mess. I was barely able to maintain it, let alone anyone who had not spent a month day and night programming the thing. This wasn&amp;rsquo;t because it was poorly designed. At the time it was the best I could do. It was because&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;lll-sucks&#34;&gt;LLL Sucks&lt;/h3&gt;

&lt;p&gt;I can admit it. I have gotten used to LLL and it comes naturally to me now. But that does not mean it&amp;rsquo;s a good language. Many things are unintuitive about it and it can be down-right impossible to read if you haven&amp;rsquo;t been writing in it for months. When I first started, I had to comment every single line of code just so I could remember what it did. I was also overly concerned about extreme optimization back then, which didn&amp;rsquo;t help. I would even place the if statements in the order I thought would be accessed most frequently just to save a little extra gas. It was impractical to work at that highly of an optimized level.&lt;/p&gt;

&lt;p&gt;What I have learned in the past months is that the &amp;ldquo;Low-Level&amp;rdquo; moniker should not be taken lightly. It gives a high degree of control over your smart contract. I eventually grew to appreciate that. The reason I never made the switch to Serpent was (aside from the fact I never got it working and was less stable than even LLL) was, after going through the specification, I felt that Serpent was not a true higher level language. Serpent was a low-level language with some of the control removed and most importantly it did not offer new features in exchange for this loss of control. So I remained with LLL dispite its readability issues.&lt;/p&gt;

&lt;p&gt;As I worked with LLL I found tricks to improve readability. Standards that I would stick to. For example whenever calling a contract the first 32 bytes of calldata was always the command I wanted to use followed by the data i wanted to supply to that command. In the lll code I had a bunch of segments like&lt;/p&gt;


(when (= (Calldataload 0x0) &#34;Command-name&#34;)
	{
		Stuff the command does
	}
)


&lt;p&gt;When defs were introduced I mapped (def &amp;lsquo;cmd () (Calldataload 0x0)) so I could use (cmd) instead of (calldataload 0x0) which improved readability somewhat.&lt;/p&gt;

&lt;p&gt;These standards continued to grow in complexity such as the form of linked lists I would use. Where I would store the pointer to the tail of the list etc. The more I worked on these problems the more I realized was implementing some standard chunks over and over. My main difficulty when it came to writing smart contracts was becoming that I ensure that there were no collisions in storage which could result in buggy or insecure operation. In addition as smart contracts were increasingly becoming the bottom of a stack.&lt;/p&gt;

&lt;p&gt;I was finding that explaining repeatedly to my co-workers how I chose to store information was increasingly difficult and a waste of time when I was using essentially the same code repeatedly.&lt;/p&gt;

&lt;h3 id=&#34;meet-the-eris-standard-library-and-dtt&#34;&gt;Meet the Eris Standard Library and DTT&lt;/h3&gt;

&lt;p&gt;This is where the &lt;strong&gt;Eris Standard Library&lt;/strong&gt; (ESL) comes into play, in particular the subset of the ESL which has come to be known internally as &amp;ldquo;Denny&amp;rsquo;s Type Templates&amp;rdquo; (DTT if you want to abbreiviate&amp;hellip; this space loves its abreiviations!).&lt;/p&gt;

&lt;p&gt;As mentioned, The majority of my code at this point was mostly identical implementations of what were essentially higher level variable types. But LLL does not have native support for these much like Assembly does not know an array from a character. Instead I was repeatedly constructing the code to implement them, and quite often I would make some small mistake in the implementation and spend 2 days debugging. My solution to this was much like my early usage of (cmd) to make the code more readable. I took the time to standardize a few of my &amp;ldquo;types&amp;rdquo; I had been using, Single Storage, Double Storage, Linked Lists, Arrays and Key Value pairs and I took the time to figure out a mapping from a name of a variable to a contract storage slot which I could be fairly certain would not allow for conflicts. You can read about the specifics of the implementations elsewhere, the result of this standardization was however that I now had fully-fledged, and much easier to use, data types which I could access through a set of definitions defining the type. Which meant:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;no longer would I need to worry about actually implementing the same old code for high level types in every contract I write, It would already be available;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;no longer would I need to spend excessive time debugging the contracts or analyzing whether or not conflicts could cause security issues since all the code was standardized and I had already taken the time to ensure that the storage space of a contract was partitioned to make conflicts impossible; and&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;no longer would I need to spend excessive time explaining how I was storing information in a contract. All I needed was to tell them the name of the variable and they could (in theory) figure out the rest since variables store their types in a well defined storage address. In practice it is just easier to tell them that its stored in a linked list or a key value.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Denny&amp;rsquo;s Types also helps with the readability of the smart contract code once you get familiar with them. While the syntax is still Lisp based and so a little awkward, since DTT encapsulates the variable data manipulation in one line &amp;ldquo;operations&amp;rdquo;, &lt;strong&gt;you can focus on the logic of your DApp and not the nitty gritty details of how to implement your data storage.&lt;/strong&gt; Its basically me in a bottle :)&lt;/p&gt;

&lt;h3 id=&#34;the-downsides&#34;&gt;The Downsides&lt;/h3&gt;

&lt;p&gt;Nothing is perfect and DTT is no exception.&lt;/p&gt;

&lt;p&gt;First off, it&amp;rsquo;s an extension of LLL (In particular the Eris brand of LLL which has a few minor changes which are documented) so you will need to be able to write LLL code. I have a guide to writing LLL available. Something I have been meaning to do for a long time but simply never found the chance before now.&lt;/p&gt;

&lt;p&gt;Secondly, while these types make perfect sense to me, they do encapsulate rather complex interactions and structures. While it&amp;rsquo;s not necessary to read and understand Denny&amp;rsquo;s Type Templates when debugging using &lt;a href=&#34;https://erisindustries.com/components/epm&#34; target=&#34;_blank&#34;&gt;EPM&lt;/a&gt;, reading the storage addresses are not that easy. Even I, being familiar with how the DTT works, can have trouble parsing it. For this, very soon we will have an EPM addition which will allow for &amp;ldquo;Pretty Print&amp;rdquo; of the Denny&amp;rsquo;s Types in EPM. This will parse things like diffs and show what have happened in terms of variables instead of storage slots. We&amp;rsquo;re sorry this will not be immediately available, but rest assured that this is a high priority for me.&lt;/p&gt;

&lt;p&gt;Thirdly, using DTT causes some contract bloat. I will be continuously optimizing the DTT, especially over Christmas, to cut down on the amount of code it generates. In addition we have plans to place the DTT on the blockchain itself as an accessible resource to other contracts. This will not change ease of use but it will greatly reduce contract sizes as most type operations related code will be located in just one place. This is another goal for early in the new year.&lt;/p&gt;

&lt;p&gt;And finally, it&amp;rsquo;s a rather different framework then the rest of LLL. This is only natural as LLL is Low-Level and so when you want to do something, you just do it. With DTT you have to interact with the types in preset ways. This is not terribly different from most languages people are familiar with. Especially those which do not have dynamic type allocation.&lt;/p&gt;

&lt;p&gt;In short, before you can use a variable, you need to init it. this is no different from type declarations or anything else. It just sets aside space for a variable of that type. Every type has an init &amp;ldquo;function&amp;rdquo; which is called through (type&amp;rdquo;Init&amp;rdquo; &amp;ldquo;name&amp;rdquo; &amp;hellip;) for example (llInit &amp;ldquo;variablename1&amp;rdquo;) would initialize a linked list (ll is short for linked list, kv is short for key value). After you initialize you have to use various &amp;ldquo;set&amp;rdquo; routines made available by the type definitions to set the variables and use &amp;ldquo;get&amp;rdquo; operations to retrieve the information. The necessity for these is due to the complexity of the encoding of the type into storage. These functions make it so you don&amp;rsquo;t need to learn the details of Denny&amp;rsquo;s Types in order to use them.&lt;/p&gt;

&lt;h3 id=&#34;what-about-c3d&#34;&gt;What about C3D?&lt;/h3&gt;

&lt;p&gt;I hear you ask. C3D has been implemented as a Type. It is technically in a different &amp;ldquo;namespace&amp;rdquo; then the variables. This means you never have to worry about C3D and a variable colliding either. You are more then welcome to use C3D if you prefer the tree framework and indeed in many instances it can simplify multi-contract data structures. Do to the decerver and the wonderful work on ate by Andreas however, Dapps are scriptable allowing for access of smart contract storage in arbitrary manners. You don&amp;rsquo;t have to stick to C3D if you don&amp;rsquo;t want to. In Order to ease the process, Javascript based equivalents for accessing DTT has been written which allow for access of storagage in ate using Denny&amp;rsquo;s Types without having to know how they work.&lt;/p&gt;

&lt;p&gt;I am just one smart contract writer, and of course a little biased, but I love Denny&amp;rsquo;s Type Templates and am looking forward to teaching you how to use them to make your DApp writing cleaner and easier to read. Look for my Tutorials on LLL contract writting, both Basic and advanced, and usage of the Eris Standard Library.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll have you writing DApps far more complex then the original Eris in no time!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Eris &#43; IPFS</title>
      <link>http://localhost/blog/1/01/01/eris-&#43;-ipfs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/blog/1/01/01/eris-&#43;-ipfs/</guid>
      <description>&lt;p&gt;By changing the way different parties cooperate, smart contracts radically improve how complex processes are run. This new paradigm will have wide-reaching effects in many areas.&lt;/p&gt;

&lt;p&gt;When we envision the smart contract stack of the future, some of the components involve radically new paradigms in their own right. The best example of this is the peer-to-peer distributed InterPlanetary File System (IPFS). At once a simple protocol for how to name, host and transfer files in a distributed manner, it also offers an audacious vision of what the fabric of the internet should look like in the future.&lt;/p&gt;

&lt;p&gt;&lt;h1&gt;What is IPFS?&lt;/h1&gt;
IPFS took some of the most successful ideas of existing systems and formed them into a single, cohesive system. These precursors to IPFS include distributed hash tables (DHT), BitTorrent, the version control system Git, and the Self-Certified Filesystem (SFS).&lt;/p&gt;

&lt;p&gt;The fundamental concept of IPFS is that instead of looking for locations, as with HTTP, you look for the content of a file. As an example, let&amp;rsquo;s say I link to a picture of a baby marmot on Flickr. Now, what your computer does now is call the IP address of Flickr&amp;rsquo;s server and ask for the file hosted at that path. Flickr then hopefully responds with &lt;a href=&#34;https://www.flickr.com/photos/53541558@N00/521987371&#34; target=&#34;_blank&#34;&gt;a picture of baby marmots&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are two big downsides to this. First, if at some point Flickr stops hosting that picture because of a sudden surge of anti-marmot sentiment, the image will be gone and requests to the path will simply fail. Second, this way of requesting files actually provides very little security. We have no way of making sure that the image that Flickr ends up delivering to you is actually the same as the one that I saw when I originally linked to it.&lt;/p&gt;

&lt;p&gt;IPFS uses the idea of content-addressing to turn this upside down. Content-addressing means that you look for a file by its content and where it’s located. Who delivers it to you is irrelevant. This is accomplished using the hash of a file as the file name. On IPFS each file has a unique name, and if multiple parties were to host the same file, it would also have the same name. Each IPFS node maintains a distributed hash table (DHT) that contains all the hashes of files and all the IP addresses of the nodes that host those files. So by pinging IPFS for a file, it is not only able to located it, but it can simultaneously make sure that the file the node delivers is the correct file by checking its hash.&lt;/p&gt;

&lt;p&gt;&lt;h1&gt;The IPFS Vision&lt;/h1&gt;
Ultimately, IPFS aims to change the fabric of the internet and replace HTTP. No problem, right? There are several reasons why replacing HTTP could be a good thing, and IPFS has illustrated the benefits through the vision of a Permanent Web. With HTTP the burden of hosting content generally falls on the person who published it. If someone were to create a popular site about comics (see the &lt;a href=&#34;https://ipfs.io/ipfs/QmNhFJjGcMPqpuYfxL62VVB9528NXqDNMFXiqN5bgFYiZ1/its-time-for-the-permanent-web.html&#34; target=&#34;_blank&#34;&gt;great Neocities post about IPFS&lt;/a&gt;), then that content would only continue to be available at the original location if the publisher continued to host it. But over time, interests change, companies go bankrupt, servers fail and content ends up disappearing. The result tends to be that old sites start to look like graveyards, linking to places that have long gone.&lt;/p&gt;

&lt;p&gt;With IPFS, on the other hand, anyone can host content. If you want to make sure a website continues to persist, you can simply host it yourself. No need to ask anyone for permission, and for someone browsing the site no difference would be noticeable. So, if a blogger can host all the pages to which his site links, even years later when some of these other sites have started disintegrating, readers can still access content he references without noticing any change.&lt;/p&gt;

&lt;p&gt;The other reason why HTTP is no longer up to the task is that it simply can’t handle today’s traffic loads and patterns well. With &amp;lsquo;lots of data, accessible everywhere&amp;rsquo;, efficient ways of moving data are needed. Comparing HTTP to BitTorrent makes it easy to see its shortcomings. The more popular a file is on BitTorrent, the more peers host it and the faster the download speed becomes. With HTTP, an increase in popularity results in an increasing number of machines hitting the same server. If this can’t be managed with a costly increase of bandwidth or server capacity, the user is left with slow speed and a disintegration of quality. With IPFS, as with BitTorrent, more popularity means more peers hosting the file and more sources from which different parts of the file can be downloaded simultaneously. This dramatically cuts down redundancy in terms of how often data is moved around the web. It also means less time wasted waiting for downloads. Popular files can also be downloaded from peers near you, ideally on the same network, instead of being sent again and again from a large data center to various users on the same network.&lt;/p&gt;

&lt;p&gt;On a larger scale, IPFS is also about creating a more decentralized internet. This means reducing our reliance on the massive companies that have the economies of scale to move lots of data efficiently under the HTTP paradigm. Agile startups will be able to compete better with cloud computing giants, and government censorship and &lt;a href=&#34;https://blog.erisindustries.com/2015/11/02/IPBill/&#34; target=&#34;_blank&#34;&gt;unlawful mass surveillance&lt;/a&gt; will become much harder.&lt;/p&gt;

&lt;p&gt;&lt;h1&gt;Smart Contracts and IPFS&lt;/h1&gt;
Where do smart contracts and Eris come in? While blockchains are great at providing verifiability and transparent processes, they are unsuited to hosting large amounts of data. When contracts depend on lots of data, that data needs to be referenced from within the contracts. Such data could range from scans of real-world documents, to images, media files or data sets.&lt;/p&gt;

&lt;p&gt;IPFS is ideally suited for this. The integrity of files that smart contracts reference is often critical. With IPFS&amp;rsquo; content-addressing, the process of automatically verifying files comes out of the box. With a traditional file system, each contract needs to additionally verify the hash of a file that was delivered. IPFS circumnavigates this requirement,  which gets rid of possible attacks. Since anyone can host a file, any party that has an economic interest in the contract can simply choose to host all file dependencies. Using HTTP, you have to either trust the service hosting the file or program complicated fall-back procedures in case a file isn&amp;rsquo;t hosted anymore by the default host or in case the default host delivers the wrong file.&lt;/p&gt;

&lt;p&gt;In the enterprise context, enabling any party to host files is often the best option. In addition, third party companies could potentially provide hosting specifically for smart-contract related files and provide guarantees through SLAs.&lt;/p&gt;

&lt;p&gt;In the future, Protocol Labs, the company behind IPFS, plans to add an incentive layer to the protocol called Filecoin. With Filecoin, nodes hosting content will be compensated for their work. Thus smart contracts will hold Filecoin balances and pay the network for hosting their dependencies. This is particularly interesting for permissionless chains like Ethereum and when censorship resistance is a high priority.&lt;/p&gt;

&lt;p&gt;&lt;h1&gt;Conclusion&lt;/h1&gt;
IPFS is an exciting prospect for the future of the internet, and it’s an amazing fit for smart contracts. That’s why we have integrated IPFS as an Eris service and why it is the file system of choice for Eris smart contract applications. We look forward to seeing many interesting applications combining the two paradigms in the future. If you want to start playing around with IPFS and Eris, you can get started with &lt;a href=&#34;https://eng.erisindustries.com/tutorials/2015/08/05/ipfs-as-a-service/&#34; target=&#34;_blank&#34;&gt;Zach&amp;rsquo;s IPFS walkabout&lt;/a&gt;.
&lt;h1&gt;Resources&lt;/h1&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ipfs.io/&#34; target=&#34;_blank&#34;&gt;IPFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bit.ly/1N7UdAr&#34; target=&#34;_blank&#34;&gt;IPFS Whitepaper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://filecoin.io/&#34; target=&#34;_blank&#34;&gt;Filecoin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bit.ly/1LfB2lq&#34; target=&#34;_blank&#34;&gt;Filecoin Whitepaper PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://letstalkbitcoin.com/blog/post/epicenter-bitcoin-100-juan-benet-decentralizing-the-web-with-the-inter-planetary-file-system-ipfs&#34; target=&#34;_blank&#34;&gt;Epicenter Bitcoin Episode with Juan Benet about IPFS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>