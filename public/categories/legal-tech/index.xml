<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
&lt;?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Legal Tech on Monax Industries</title>
    <link>http://localhost/categories/legal-tech/</link>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Sep 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost/categories/legal-tech/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Self-driving banks: industrial verification without industrial capex</title>
      <link>http://localhost/2015/09/17/selfdrivingbanks/</link>
      <pubDate>Thu, 17 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/09/17/selfdrivingbanks/</guid>
      <description>

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/marmot.jpg&amp;rsquo; | img }}&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt;:
&lt;blockquote class=&#34;twitter-tweet&#34; lang=&#34;en&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I&amp;#39;m pro-robot.&amp;#10;I think they should just destroy us all at this point.&lt;/p&gt;&amp;mdash; SecuriTay (@SwiftOnSecurity) &lt;a href=&#34;https://twitter.com/SwiftOnSecurity/status/644338254096039936&#34;&gt;September 17, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&#34;the&#34;&gt;&amp;ldquo;The&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;Because Bitcoin does not require a central server whirring away, or direct human oversight, to run, its earliest adopters have long referred to it in quasi-religious, almost magical terms. Immutable. Indestructible. &amp;ldquo;The&amp;rdquo; blockchain.&lt;/p&gt;

&lt;p&gt;Of course, I co-founded a business that, at least to my knowledge, was &lt;a href=&#34;https://blog.erisindustries.com/products/2014/12/17/eris-what-are-we-building/&#34; target=&#34;_blank&#34;&gt;the first in the world&lt;/a&gt; to take the &amp;ldquo;bitcoin&amp;rdquo;/cryptocurrency piece out of the equation - resulting in the datastructure now referred to as &amp;ldquo;a&amp;rdquo; blockchain.&lt;/p&gt;

&lt;p&gt;This was not a political decision, but a practical one. Make no mistake, I started - as we all did - as a Bitcoin guy before I became a smart contract guy. However, it bears mentioning that back in the day Bitcoin was the only game in town. Thanks to permissioning (which allows us to control our blockchains), we now have options.&lt;/p&gt;

&lt;p&gt;Bitcoin is a bunch of cryptographic primitives skinned with a UI and hooked up with a networking protocol over TCP-IP. I liked Bitcoin from the day I met it. But, much like everyone&amp;rsquo;s proverbial erstwhile ex, if we don&amp;rsquo;t look at Bitcoin as &amp;ldquo;the one&amp;rdquo; but look at it as an archetype (daresay a proof-of-concept), we realise that it is entirely possible to fall in love again.&lt;/p&gt;

&lt;p&gt;My own love affair with Bitcoin transmogrified very suddenly one day in September of 2013. I was corresponding with an acquaintance of mine named Zachary Caceres (of the &lt;a href=&#34;http://www.startupcities.org/&#34; target=&#34;_blank&#34;&gt;Startup Cities Institute&lt;/a&gt; in Guatemala) about a proposal for a government accounting system he called &amp;ldquo;MuniBit&amp;rdquo;. The argument for such a system, as Zach put it, was that the same security properties which allowed Bitcoin to self-regulate in a secure way could be very useful to bootstrap an interdepartmental funds transfer system for developing nations that would&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;run itself, on simple hardware like laptops or desktop PCs; and&lt;/li&gt;
&lt;li&gt;cost next to nothing to operate and replicate; but&lt;/li&gt;
&lt;li&gt;which would be just as effective as an Oracle server (at least, for the kinds of latencies that a government accounting system requires) and&lt;/li&gt;
&lt;li&gt;being tamper-proof and perfectly transparent, thus be extremely effective in reducing corruption.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was at that moment that I realised maybe it wasn&amp;rsquo;t Bitcoin itself I was in love with, but certain parts of its personality. Specifically, its blockchain.&lt;/p&gt;

&lt;p&gt;However, distributed databases have been around for a very long time – the first of which, SDD-1, was &lt;a href=&#34;http://www.eecs.berkeley.edu/~wong/wong_pubs/wong63.pdf&#34; target=&#34;_blank&#34;&gt;invented in 1980&lt;/a&gt;. So what turns everyone on about &lt;a href=&#34;https://www.youtube.com/watch?v=aENX1Sf3fgQ&#34; target=&#34;_blank&#34;&gt;every little thing a &amp;ldquo;blockchain&amp;rdquo; does&lt;/a&gt; as distinguished from every little thing a distributed database does?&lt;/p&gt;

&lt;h3 id=&#34;every-little-thing-she-does-is-magic&#34;&gt;Every little thing she does is magic&lt;/h3&gt;

&lt;p&gt;Well, I think I&amp;rsquo;ve figured it out. It&amp;rsquo;s the way in which these DBs:&lt;/p&gt;

&lt;p&gt;a) batch data into blocks instead of achieving consensus bit-by-bit,&lt;/p&gt;

&lt;p&gt;b) merkle-ise &lt;a href=&#34;https://www.google.co.uk/webhp?sourceid=chrome-instant&amp;amp;ion=1&amp;amp;espv=2&amp;amp;ie=UTF-8#q=all%20the%20things&#34; target=&#34;_blank&#34;&gt;all the things&lt;/a&gt;  (EDIT: the use of merkle trees - merkleisation - is what makes a blockchain&amp;rsquo;s audit log unforgeable); and&lt;/p&gt;

&lt;p&gt;c) utilise a public/private key signature infrastructure to control writes,&lt;/p&gt;

&lt;p&gt;means, if we&amp;rsquo;re looking at Bitcoin &lt;em&gt;qua&lt;/em&gt; proof-of-concept, that a blockchain data structure makes it possible to achieve industrial levels of verifiability without industrial levels of capex.&lt;/p&gt;

&lt;p&gt;This is the big deal.&lt;/p&gt;

&lt;p&gt;Thanks to blockchains, a laptop or a mobile phone is, today, as effective at running a globally-accessible application as a datacentre or a mainframe. Furthermore, &lt;a href=&#34;http://localhost/2015/06/16/tbtm/&#34;&gt;with the permissioned chains, the &amp;ldquo;mining&amp;rdquo; process can be dispensed with entirely&lt;/a&gt;, allowing a user to run such a network with only the latent capacity of hardware you already have (in relation to which, 99% of the time it is not being used anywhere near full capacity.&lt;/p&gt;

&lt;p&gt;In the future, we will leverage this excess capacity to both increase the reliability and uptime of our systems, and bring the &lt;a href=&#34;https://www.youtube.com/watch?v=KOrXep9f3Z8&#34; target=&#34;_blank&#34;&gt;marginal costs&lt;/a&gt; of computing to nearly zero. This will be a world in which data infrastructure runs itself without physical infrastructure.&lt;/p&gt;

&lt;p&gt;Because of this, I&amp;rsquo;m a bit puzzled at the direction the early blockchain space seems to be taking.&lt;/p&gt;

&lt;p&gt;One of these directions is the proprietary-chain tack, which doesn&amp;rsquo;t make a whole lot of sense. Apart from being bad business, any cryptographic primitive worth a damn is going to be open-source.&lt;/p&gt;

&lt;p&gt;The other one is why new businesses are entering, and bitcoin businesses are pivoting hard, into the winner-take-all clearing and settlement game.&lt;/p&gt;

&lt;p&gt;Both approaches strike me as terribly unimaginative. Straight ownership transfers are already machine-driven (see: &lt;a href=&#34;http://www.fasterpayments.org.uk/&#34; target=&#34;_blank&#34;&gt;Faster Payments&lt;/a&gt;). They are also extremely simple from a logic perspective; it&amp;rsquo;s possible to draft a legally binding instrument of transfer in a minute or so using nothing more than a napkin and a pen (or, if you prefer, five lines of smart contract code).&lt;/p&gt;

&lt;p&gt;The introduction of a blockchain into the settlement equation is not, on its own, sufficiently compelling to justify the wholesale replacement of existing infrastructure - where it strikes me that uniform standards running on existing DB designs would be better (especially given that clearing and settlement require privacy among market participants, which blockchains do not do especially well). The inappropriateness of using a single blockchain is even clearer to see anywhere high volumes or low latencies (e.g. HFT, credit cards) are involved.&lt;/p&gt;

&lt;p&gt;“Smart contracts,” on the other hand, allow us to do some different things with blockchains - most of which are distinctly not related to straight clearing.&lt;/p&gt;

&lt;h3 id=&#34;smart-contracts&#34;&gt;Smart Contracts&lt;/h3&gt;

&lt;p&gt;As Casey puts it, &lt;strong&gt;“smart contracts” are not smart and they are not contracts&lt;/strong&gt;. As Brian retorts,  &lt;a href=&#34;http://localhost/2015/09/15/smart-contracts-intro/&#34;&gt;“they should really just be called dumb scripts.”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dumb or not, being computer code, you can write these scripts to do more or less whatever the hell you want. As a result, smart contracts can run virtually anything in the same way that Bitcoin automates payments. On smart contract chains this sort of stuff is trivial (Tyler and I did our first smart asset-backed loan back in April of 2014.)&lt;/p&gt;

&lt;p&gt;How then, should we use blockchains in practice? The answer actually was put quite succinctly by an analyst at &lt;a href=&#34;http://securities.bnpparibas.com/quintessence/hot-topics/beyond/bitcoin-and-blockchain-what-you.html#.VfqJNp1Viko&#34; target=&#34;_blank&#34;&gt;BNP Paribas&lt;/a&gt;: a blockchain is to existing infrastructure as an internal combustion engine was to the steam train. But just as we would not want to try to pile 300 people in a car, we will have to optimise our approach to blockchains in order to account for their inherent limitations.&lt;/p&gt;

&lt;p&gt;As the lead marmot superfan of the entire world, let&amp;rsquo;s suppose I want to create a marmot supply chain finance application. Let us also suppose I will call this application “Uber for Marmots.” If I should code it up, at the conclusion of this exercise I will have a piece of software which can run itself from my laptop, across a network of global users, any of which I can securely onboard - through the issuance of a single key pair - in seconds.&lt;/p&gt;

&lt;p&gt;Furthermore, if these chains are permissioned, such as ours (specifically the collaboratively-written Tendermint design) are, these services are infinitely repeatable at, again, almost zero expense and in seconds. Someone wishing to create Uber for (Marmosets/Skunks/Puppies) of their own can simply copy my code, tweak some parameters to fit their particular use-case, and have their own particular application running, for a cute animal of their choice, with one command.&lt;/p&gt;

&lt;p&gt;And this application will run in a web browser.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s like being able to download a server instead of having to get a data centre to run one on your behalf.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Whether we can&lt;/strong&gt; run a blockchain for a given application is one question, the answer to which - at least in principle - is almost always yes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Whether we should&lt;/strong&gt; run one is quite another. I like to say that the only thing a blockchain can do that a server cannot is not need a server. For this reason, it strikes me that blockchains are destined to be fundamentally &lt;em&gt;micro&lt;/em&gt; in nature: to address specific groups of users with specific applications when those users need to bootstrap a network, and need to obtain a high degree of data verification, without spending piles of cash on IT equipment.&lt;/p&gt;

&lt;h3 id=&#34;self-driving-banks&#34;&gt;Self-driving banks&lt;/h3&gt;

&lt;p&gt;Should we use such an infrastructure to clear industrial volumes of interbank transactions, such as international payments? I’m not so sure (this would not be the first time Eris Industries has &lt;a href=&#34;http://blogs.wsj.com/moneybeat/2015/04/14/bitbeat-blockchains-without-coins-stir-tensions-in-bitcoin-community/&#34; target=&#34;_blank&#34;&gt;gone against the grain of conventional wisdom&lt;/a&gt; in the blockchain space). Why do we need replication - or even PKI - to get us where we need to go in such circumstances? Would adopting that infrastructure for these applications only slow the banks down?&lt;/p&gt;

&lt;p&gt;By contrast, how many times can someone get KYC&amp;rsquo;d in a day? How many marmots, or syndicated loan participations, can someone move in a day? The answer (I know as I have cornered the marmot market) is rather fewer. This is a strong hint that these kinds of use-cases are a good place to start.&lt;/p&gt;

&lt;p&gt;Within the banks themselves, there are plenty of applications which fit this profile – but they are primarily non-transactional and relate to back-office process or event control and scheduling (as one might see, e.g., in a securitisation). Businesses, including banks, deal with considerably more process logic  on a daily basis than just payments – hiring and firing, paying salaries, calculating taxes, keeping track of holiday entitlement, internal audit – all of which are managed by legions of “knowledge economy” employees, such as lawyers and auditors.&lt;/p&gt;

&lt;p&gt;In other words, manual labour.&lt;/p&gt;

&lt;p&gt;Winning applications reduce friction. &lt;strong&gt;Uber&amp;rsquo;s killer value proposition isn&amp;rsquo;t automating payment&lt;/strong&gt; - though they did that as well - &lt;strong&gt;it&amp;rsquo;s going after the humans&lt;/strong&gt; and automating the (not scalable) taxi dispatcher by turning him into a (scalable, repeatable) communication protocol. Perhaps we blockchain folks might be better off adopting the same approach to business process as Silicon Valley adopted to hailing cabs: delegate execution to the machines so we can get on with making decisions.&lt;/p&gt;

&lt;p&gt;This idea – which we call, for now, the “&lt;strong&gt;self-driving bank&lt;/strong&gt;” – is an intriguing one. It is also a double-edged sword. For all the benefits any one institution (or group of them) will obtain from adopting this tech, its also true that new entrants will be able to leverage them as well at nearly nil cost.&lt;/p&gt;

&lt;p&gt;Just as P2P lending allows ordinary people to stand toe-to-toe with the banks in the capital markets, blockchain allows people to stand toe-to-toe with them in the verification and process assurance markets.&lt;/p&gt;

&lt;p&gt;Which begs the question: what will it mean to be a bank, which presently has 150,000 employees, if open-source tech can do the same job for free? I have some ideas - but I&amp;rsquo;ll save that for another day.&lt;/p&gt;

&lt;p&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/marmot2.jpg&amp;rsquo; | img }}&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WTF Are Smart Contracts Anyway?</title>
      <link>http://localhost/2015/09/15/smart-contracts-intro/</link>
      <pubDate>Tue, 15 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/09/15/smart-contracts-intro/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/stevensnodgrass/5480863464/&#34; target=&#34;_blank&#34;&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/contract.jpg&amp;rsquo; | img }}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Folks are both fascinated and confused by the term &amp;ldquo;smart contracts&amp;rdquo;. Many across the general peer-to-peer tech space have had their imaginations captured by what is, fundamentally, a super fascinating idea. The idea that we can have processes and procedures, with rules we agree to, running, automatically, on our behalf. This is a powerful idea.&lt;/p&gt;

&lt;p&gt;For many the power of the &lt;code&gt;idea&lt;/code&gt; leads them &amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://33.media.tumblr.com/6c6d7a976bfe30324d656f0465cd7add/tumblr_nk1e8rM4ie1u17yx1o1_500.gif&#34; target=&#34;_blank&#34;&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/neverland.gif&amp;rsquo; | img }}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As inspiring a fantasy as Peter Pan is, it is still a fantasy. With all deference to the dreamers amongst us, there is enough that is intriguing about this technology for us all to explore it together; the difference being that the doers may focus more on the near term stuff.&lt;/p&gt;

&lt;p&gt;On behalf of the doers, here is how I explain smart contract technology to executives and researchers.&lt;/p&gt;

&lt;p&gt;This post is a &lt;a href=&#34;http://localhost/2015/08/10/how-i-current-explain-blockchains/&#34;&gt;semi-follow on to my WTF is going on with blockchains post&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;preface&#34;&gt;Preface&lt;/h2&gt;

&lt;p&gt;Smart contracts is a loaded term of which I&amp;rsquo;ve been a reluctant user.&lt;/p&gt;

&lt;p&gt;Coming from a #legalhacker background these &amp;ldquo;things&amp;rdquo; are clearly neither &lt;code&gt;smart&lt;/code&gt; (indeed their logic capabilities have only recently reached turing complete capacity), nor are they &lt;code&gt;contracts&lt;/code&gt; (they are, afterall, &lt;em&gt;just scripts&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;As Brian, our Head of BizDev says, they should really just be called &lt;code&gt;dumb scripts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;My own issues with pedanticism aside, &lt;code&gt;smart contracts&lt;/code&gt; is the term which the community has adopted and it is more important to communicate using the same language than it is to be fascist about such matters.&lt;/p&gt;

&lt;h2 id=&#34;smart-v-dumb-or-are-they-better-than-just-a-python-script&#34;&gt;&lt;code&gt;smart v. dumb&lt;/code&gt; &lt;em&gt;or&lt;/em&gt; are they better than just a python script?&lt;/h2&gt;

&lt;p&gt;This is a question which in the early days of Eris we fielded often. This is a debatable subject. And I think it turns on two axes.&lt;/p&gt;

&lt;h3 id=&#34;axis-1-spectrum-of-verifiability&#34;&gt;Axis 1 =&amp;gt; spectrum of verifiability&lt;/h3&gt;

&lt;p&gt;A python script is &lt;em&gt;somewhat&lt;/em&gt; verifiable I would say. If a python script is running on somebody else&amp;rsquo;s metal your ability to verify what its doing is usually limited to observing its results. You can always see what the script is doing if, for example it is managing an API. You know that you send that API a request and then you will get a response. But what is happening between the request and the response is very difficult to verify.&lt;/p&gt;

&lt;p&gt;Even if you could verify &lt;em&gt;the code that was being ran&lt;/em&gt; via some fingerprinting mechanism you still wouldn&amp;rsquo;t necessarily be able to verify &lt;em&gt;the execution environment&lt;/em&gt; of that script. What I mean here is that every file which exists is really just a series of numbers assembled in such a way that a computer can interpret it to be an executable script, the markdown which renders into this blog post, or a marmot photo.&lt;/p&gt;

&lt;p&gt;Since every files is, at its most fundamental level, a series of numbers, every file can have a mathmatical formula applied to it which will produce a short sting of letters and numbers called its fingerprint. The same formula can be applied to the same &amp;ldquo;series of numbers&amp;rdquo; (meaning, a file) and that will produce the same result if (and only if) the &amp;ldquo;series of numbers&amp;rdquo; (again, meaning the file) is the exact same.&lt;/p&gt;

&lt;p&gt;The upshot here is that if a script builder wants to make sure that the scripts which folks run on their machines are the scripts the script maker made, then a fingerprinting mechanism is often used as a quick, but verifiable way to ensure that all the numbers in the file(s) are all the same. This procedure is called &lt;code&gt;checksum&lt;/code&gt; &amp;ndash; meaning, check the sum of the numbers of the file &amp;ndash; and this procedure is routinely used behind the scenes when your computer is installing files.&lt;/p&gt;

&lt;p&gt;While it is true that it is a relatively straight-forward problem to verify a script being run &lt;em&gt;on your machines&lt;/em&gt; is the same script which was produced by Skype, Microsoft, or whomever; it is not necessarily a simple problem to verify that a script being run &lt;em&gt;on someone else&amp;rsquo;s machine&lt;/em&gt; is the same script produced. To illustrate this problem, if you were using a version of Microsoft Word which was being &amp;ldquo;hosted&amp;rdquo; and you were using it in a webbrowser, you may have an ability to check the version number from the Word Help menus. But this only gets at part of the problem of being able to verify code which is running on someone else&amp;rsquo;s metal.&lt;/p&gt;

&lt;p&gt;Scripts can read top level environment variables, and run differently on a different version of their language; therefore they can have differing &lt;strong&gt;outcomes&lt;/strong&gt; depending on what the environment variables of the Operating System are or what version of the language is &amp;ldquo;running&amp;rdquo; (or compiling) the language. What this means is that when a computer script is ran it can be told by the operating system &amp;ldquo;how&amp;rdquo; it should run in some instances and in other instances various versions of a language will operate differently. As a result of this script makers have an ability to make their scripts run differently on different versions of the language.&lt;/p&gt;

&lt;p&gt;The execution environment in which the script runs is important because the same script can run different ways depending on its environment. This is important to understand because even if you can verify that the script a machine is running is the same script that was produced by a script maker, what you are &lt;em&gt;really&lt;/em&gt; trying to verify is the predictability of what its &lt;strong&gt;doing&lt;/strong&gt; (not only what its numbers, meaning its code, is).&lt;/p&gt;

&lt;p&gt;The practical upshot here is that nobody really has a capability to verify code that&amp;rsquo;s running on someone else&amp;rsquo;s metal.&lt;/p&gt;

&lt;p&gt;And this is one of the most powerful capabilities which smart contract backed systems offer to their users. Smart contracts completely isolate the logic and data into a &amp;ldquo;casing&amp;rdquo; (provided by a blockchain) which is utterly verifiable. Every compute step along the logic sequence is verified by every node on the network.&lt;/p&gt;

&lt;p&gt;Those nodes could be other banks within a consortium, internal audit, external audit, the business&amp;rsquo;s accounting department, your grandmother, or whomever is in the network. But all of these nodes will be checking each other&amp;rsquo;s work.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Simply put, all of the computation is performed (and, checked) by all of the (full) nodes on the network.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Down to &lt;code&gt;pop-off-the-stack&lt;/code&gt; computes.&lt;/p&gt;

&lt;p&gt;Now this is overkill for many, many computing requirements which an enterprise may have (indeed the &lt;strong&gt;vast&lt;/strong&gt; majority of an enterprise&amp;rsquo;s computing requirements do not need this level of computation verifiability).&lt;/p&gt;

&lt;p&gt;But for instances where one has a &lt;strong&gt;data driven relationship&lt;/strong&gt; &amp;ndash; whether that is a compliance relationship with a regulator, a customer relationship, or a peer relationship &amp;ndash; it may be a price which institutions are willing to pay. In some contexts.&lt;/p&gt;

&lt;p&gt;But. And this is the key. It is &lt;code&gt;certainly&lt;/code&gt; very different that a simple python script running on someone else&amp;rsquo;s metal.&lt;/p&gt;

&lt;h3 id=&#34;axis-2-spectrum-of-privacy&#34;&gt;Axis 2 =&amp;gt; spectrum of privacy&lt;/h3&gt;

&lt;p&gt;While a python script is not highly verifiable, it &lt;strong&gt;is&lt;/strong&gt; easy to hide and to keep protected. I&amp;rsquo;ve said it over and over again, blockchains are transparency machines, they are not privacy machines. There currently is no blockchain backed smart contract mechanism which can provide the level of verifiability described above &lt;strong&gt;and&lt;/strong&gt; that can also provide &lt;em&gt;any&lt;/em&gt; level of privacy beyond simple obscuration of the data on the blockchain.&lt;/p&gt;

&lt;p&gt;It is true that there are &lt;strong&gt;highly theoretical&lt;/strong&gt; ideas, such as MIT&amp;rsquo;s Enigma among others, to increase the privacy of blockchain stored data. Maybe some of these will go to market and/or become community adopted in the near term and this problem will be short term. But it certainly is the reality for folks wanting to build smart contracts now.&lt;/p&gt;

&lt;p&gt;It may also be possible in the medium term to separate the verifiability spectrum of the data (e.g., what&amp;rsquo;s cool about a blockchain; but also its downside in contexts where privacy is paramount) and the verifiability spectrum of the logic (smart contracts), but at this point they go together. As an example of what I&amp;rsquo;m talking about, Ethan and I have discussed what it would take to be able to run an EVM as a containerized computation engine that could provide the high level of logic verifiability while not &lt;em&gt;requiring&lt;/em&gt; the low level of blockchain privacy.&lt;/p&gt;

&lt;p&gt;Alas, we have not had time to pursue this idea. Yet! :-)&lt;/p&gt;

&lt;h2 id=&#34;contracts-v-scripts-or-why-do-i-keep-telling-folks-this-is-legal-tech&#34;&gt;&lt;code&gt;contracts v. scripts&lt;/code&gt; &lt;em&gt;or&lt;/em&gt; why do I keep telling folks this is legal tech?&lt;/h2&gt;

&lt;p&gt;One of the ways in which these &lt;code&gt;scripts&lt;/code&gt; are, kind of, sort of, &lt;code&gt;contracts&lt;/code&gt; (at least they can be programmed to fulfill many of the legal requirements of real world commercial contracts) is that counter-parties to an agreement have never had an ability to regulate their data driven &lt;em&gt;relationships&lt;/em&gt; via a mechanism which they did not wholly control.&lt;/p&gt;

&lt;p&gt;Great strides have been made in industry around automation of a broad range of business &lt;em&gt;processes&lt;/em&gt;, but the range of business processes which has been automated for the most part stops at the rotating glass door. And the reason for that is simple (see, above).&lt;/p&gt;

&lt;p&gt;In other words, if you&amp;rsquo;re the big player and you can run the computation sequence on your metal then great, but everybody else either has to duplicate the work of formulating the automation and process management components on &lt;em&gt;their side&lt;/em&gt; of the data driven relationship &amp;ndash; or they have to just trust you.&lt;/p&gt;

&lt;p&gt;And, to be clear, both are viable choices for a business depending on its circumstances. I am not really gonna bug Amazon to let me come verify physically all of the AWS resources Eris consumed last month because it is a ridiculous request and it is not important enough to our business. We&amp;rsquo;re happy to trust AWS to report correctly our resource usage, calculate what we owe them, and to pull that amount from the credit card they keep on file.&lt;/p&gt;

&lt;p&gt;But, smart contracts offer a third way, a semi-new paradigm, wherein legally binding agreements (&lt;a href=&#34;https://erisindustries.com/components/erislegal/&#34; target=&#34;_blank&#34;&gt;backed up by real world agreements&lt;/a&gt;) can be built to run within a network of computers which no single party can pull the plug on and in which all parties to the agreement &lt;strong&gt;participate&lt;/strong&gt; in the management and supervision of the computers which have automated the agreement. Smart contractifying the data driven relationship which Eris and AWS maintain wouldn&amp;rsquo;t mean that I could &lt;em&gt;necessarily&lt;/em&gt; verify the resources we used (physically), but it would certainly get us much closer than the current state of affairs.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Simply put, smart contracts provide the backbone for automating business processes which reach &lt;em&gt;outside&lt;/em&gt; of the rotating glass doors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In other words, the sweet spot for smart contracts is data driven &lt;em&gt;relationships&lt;/em&gt; &amp;ndash; or business processes across organizations.&lt;/p&gt;

&lt;p&gt;Despite being uneasy with the &lt;code&gt;contracts&lt;/code&gt; part of &lt;code&gt;smart contracts&lt;/code&gt; I still do tell people quite regularly that Eris is a legal tech company. And I&amp;rsquo;ve believed that all along. Even before this company existed, this technology has always &amp;ldquo;been&amp;rdquo; legal tech to me.&lt;/p&gt;

&lt;p&gt;The reason this tech has &amp;ldquo;been&amp;rdquo; legalTech to me is because I firmly believe smart contracts will be at least one enabler of a movement which was already formulating and bubbling up. A movement of legally capable technologists and technically capable lawyers bringing their skills and talents to a new generation of business process automation tools which focus not on automating intra-enterprise data driven &lt;em&gt;processes&lt;/em&gt; but rather on inter-enterprise data driven &lt;em&gt;relationships&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;At Eris we definitely are not the only group at the intersection of law and technology who sees this power. I have noticed, and welcome, a distinct increase in understanding from various law professors I know, have talked to, or follow on twitter which mirror what our friend Houman said:&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Why I&amp;#39;m now teaching basics of &lt;a href=&#34;https://twitter.com/hashtag/coding?src=hash&#34;&gt;#coding&lt;/a&gt; and CS concepts in my introductory Contracts course. &lt;a href=&#34;http://t.co/6addHYNyAi&#34;&gt;http://t.co/6addHYNyAi&lt;/a&gt; &lt;a href=&#34;http://t.co/a6w47psJ3M&#34;&gt;pic.twitter.com/a6w47psJ3M&lt;/a&gt;&lt;/p&gt;&amp;mdash; Houman Shadab (@HoumanShadab) &lt;a href=&#34;https://twitter.com/HoumanShadab/status/643541718734868480&#34;&gt;September 14, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m a bit skeptical as to whether &lt;code&gt;dumb scripts&lt;/code&gt; will ever replace human lawyers, but they may very well change how lawyers operate when advising information age enterprises as to how to regulate their data driven relationships with their peers and customers. So the future is definitely bright for the intersection of law (the regulation of our relationships) with technology!&lt;/p&gt;

&lt;h2 id=&#34;postface&#34;&gt;Postface&lt;/h2&gt;

&lt;p&gt;The bottom line is that these &amp;ldquo;things&amp;rdquo; (no matter what we call them) can be made to regulate agreements just as easily as they can be made to regulate governance just as easily as they can be made to regulate professional relationships. And therein lies their power and their USP.&lt;/p&gt;

&lt;p&gt;What we are just at the beginning stages of learning is this. When you put some lawyers and technologists together and give them this technology amazingly impactful things start to happen.&lt;/p&gt;

&lt;p&gt;Happy &lt;code&gt;dumb script&lt;/code&gt;ing!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Photo Credit&lt;/strong&gt; &amp;ndash; &lt;a href=&#34;https://www.flickr.com/photos/stevensnodgrass/5480863464/&#34; target=&#34;_blank&#34;&gt;Steve Snodgrass @ Flickr&lt;/a&gt; (Licensed CC-By)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tracking Digits: How to Design Your Smart Contract Tracking System</title>
      <link>http://localhost/2015/05/01/tracking-digits/</link>
      <pubDate>Fri, 01 May 2015 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2015/05/01/tracking-digits/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/tom-margie/1299414993/&#34; target=&#34;_blank&#34;&gt;{{ page.date | date: &amp;ldquo;%Y&amp;rdquo; | append:&amp;lsquo;/racer.jpg&amp;rsquo; | img }}&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lots of folks are thinking about interesting ways to track digital goods and information back to some vendor of authenticity using blockchains and distributed file storage systems. A number of folks have been working in this area around the idea of physical goods and information as well.&lt;/p&gt;

&lt;p&gt;My background as a lawyer makes me think instantly of a problem legal information systems have, which is authenticity of authorship. In other words, can I rely that the words I&amp;rsquo;m reading are actually what the judge wrote and published? Traditionally the role of assurer of authenticity of authorship was taken by large publishing houses with lucrative contracts. Lately this role has been taken by signed PDF&amp;rsquo;s. But, what about blockchains?&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;I&amp;#39;m really hyped up on block chain tech right now and its legal info applications. Can&amp;#39;t wait to look more into it. Thanks, &lt;a href=&#34;https://twitter.com/hashtag/futurelaw?src=hash&#34;&gt;#futurelaw&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sarah Glassmeyer (@sglassmeyer) &lt;a href=&#34;https://twitter.com/sglassmeyer/status/594157266091147264&#34;&gt;May 1, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;The rest of this post will speak to a subset of that paradigm (a court decision publishing system) but with minor modifications could be adapted for other types of digital files which are by default public (there&amp;rsquo;s no encryption here, this is built for &lt;strong&gt;public&lt;/strong&gt; data) and require some fount of authenticity.&lt;/p&gt;

&lt;h2 id=&#34;file-sharing&#34;&gt;File Sharing&lt;/h2&gt;

&lt;p&gt;We use a system called &lt;a href=&#34;http://ipfs.io&#34; target=&#34;_blank&#34;&gt;IPFS&lt;/a&gt; which is a significantly improved &lt;code&gt;git&lt;/code&gt; + &lt;code&gt;bit torrent&lt;/code&gt; to share the raw content blobs between nodes on a network using a peer-to-peer paradigm rather than a costly server-client paradigm. In other words, a globally unified, content addressable storage system. Behind the scenes, IPFS understands who has what files and how to get files you need to your computer as fast as possible. Files within IPFS are retrievable from the distributed peer network via their hash, which means when getting files from the distributed peer network via the IPFS protocol, any recipient of the file will have assurances of bit for bit consistency of the file itself because the file hash is a cryptographic fingerprint unique to each file.&lt;/p&gt;

&lt;p&gt;IPFS can be run nearly everywhere and it makes it super simple to &amp;ldquo;hook&amp;rdquo; into a globally distributed file sharing solution. However because it is simply a bunch of hashes (what&amp;rsquo;s called a &lt;code&gt;data lake&lt;/code&gt;), it needs structure. That&amp;rsquo;s where the data schema shared on a blockchain (to utilize its public key architecture and other verifiability characteristics) comes into play.&lt;/p&gt;

&lt;h2 id=&#34;the-data-schema&#34;&gt;The Data Schema&lt;/h2&gt;

&lt;p&gt;In a very simple system like this, we need to really track two things: &lt;code&gt;authenticator&lt;/code&gt; and &lt;code&gt;contentBlob&lt;/code&gt;. That is really all we need to track for this. In the context of a court reporting mechanism &lt;code&gt;authenticator&lt;/code&gt; would be the &lt;strong&gt;court&lt;/strong&gt; (who would have a given public-private keypair of which the public key was known). Similarly, in the same context the &lt;code&gt;contentBlob&lt;/code&gt; would be the &lt;a href=&#34;http://en.wikipedia.org/wiki/Checksum&#34; target=&#34;_blank&#34;&gt;checksum hash&lt;/a&gt; of the file containing the &lt;strong&gt;decision&lt;/strong&gt;. The file could be available in &lt;em&gt;any&lt;/em&gt; format. Plain text, markdown, the dreaded word, the feared pdf. It matters not what the file is, because from the blockchain&amp;rsquo;s perspective its all just hashes.&lt;/p&gt;

&lt;p&gt;Specifically we would form two &lt;code&gt;maps&lt;/code&gt; (which are key:value storage systems). One data mapping would track &lt;code&gt;authenticator&lt;/code&gt; to &lt;code&gt;contentBlob&lt;/code&gt; mappings and be available based on the &lt;code&gt;authenticator&lt;/code&gt;&amp;rsquo;s public key address via a simple &lt;code&gt;get_blob_by_authenticator&lt;/code&gt; function (or a &lt;code&gt;get_decision_by_court&lt;/code&gt; function in this context). The other data mapping would do the reverse and be available via a simple &lt;code&gt;get_blob_autenticator&lt;/code&gt; (or &lt;code&gt;get_decision_author&lt;/code&gt;) function.&lt;/p&gt;

&lt;p&gt;This is a simple minimum viable data schema. Indeed whatever additional information one wanted to add into the data schema would be possible with Eris, because our turing complete smart contract machine housed in &lt;code&gt;eris:db&lt;/code&gt; can do basically any thing programmers tell it to do.&lt;/p&gt;

&lt;h2 id=&#34;the-blockchain&#34;&gt;The Blockchain&lt;/h2&gt;

&lt;p&gt;The blockchain you would design here would be a very simple blockchain. The court itself could make a single node blockchain which only it could amend or write to (for more about blockchain design &lt;a href=&#34;https://docs.erisindustries.com/explainers/blockchains/&#34; target=&#34;_blank&#34;&gt;see this here&lt;/a&gt;). Alternatively, a library or consortium of courts could pool their resources together to run a collective blockchain which was amended or written to by any of the known and registered members.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;eris:db&lt;/code&gt; makes all that &lt;a href=&#34;https://eng.erisindustries.com/tutorials/2015/04/25/make-thelonious-chain/&#34; target=&#34;_blank&#34;&gt;super simple&lt;/a&gt;. And, by the way, our solution will run on nearly &lt;a href=&#34;https://eng.erisindustries.com/blockchains/2015/04/01/peer-server-networks-current-paradigm/&#34; target=&#34;_blank&#34;&gt;anything&lt;/a&gt; (except Windows outside of Docker).&lt;/p&gt;

&lt;h2 id=&#34;the-application-layer&#34;&gt;The Application Layer&lt;/h2&gt;

&lt;p&gt;Functionally the application will work nearly the same as our &lt;a href=&#34;https://eng.erisindustries.com/tutorials/2015/04/07/2gather/&#34; target=&#34;_blank&#34;&gt;2gather&lt;/a&gt; video sharing application works. The basic workflow would look something like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Judge finalizes opinion&lt;/li&gt;
&lt;li&gt;Judge gives finalized opinion to clerk&lt;/li&gt;
&lt;li&gt;Clerk goes to web browser and uploads the decision&lt;/li&gt;
&lt;li&gt;(from here on out the humans do nothing) The application layer adds the file to the distributed file storage system (with its built in authenticity of the &lt;em&gt;information&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;The application layer takes the file&amp;rsquo;s hash and adds it to the smart contracts&amp;rsquo; held data schema (with its built in authenticity of &lt;em&gt;identity&lt;/em&gt; &amp;ndash; to a public key address).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That&amp;rsquo;s it. Now anyone who has access to the blockchain and distributed file storage system has assurances of (a) content has not been changed since entering into the distributed file storage system (thus mitigating man in the middle type attacks) and (b) that the the public key address &amp;ldquo;publishing&amp;rdquo; the content actually added it to the system (via their private key signature on the transactions which entered the ipfs hashes into the blockchain).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;eris:server&lt;/code&gt; makes it ultra simple to make this application layer and have it usable for non-technical team members from a web browser (with whatever web based interface is needed for the application). Using &lt;code&gt;eris:server&lt;/code&gt; developers are able to build the backend of the application that would perform all of that functionality in about five lines of javascript.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;At Eris we make it super simple to start building these systems. Today. In three (easy) steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install (the tools)&lt;/li&gt;
&lt;li&gt;Roll (your blockchain)&lt;/li&gt;
&lt;li&gt;Build (your application)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For more information as to how to get started &lt;a href=&#34;https://erisserver.erisindustries.com/tutorials/&#34; target=&#34;_blank&#34;&gt;see here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(Photo credit to: &lt;a href=&#34;https://www.flickr.com/photos/tom-margie/1299414993/&#34; target=&#34;_blank&#34;&gt;Board Track Racer by Insomnia Cured Here @ flickr&lt;/a&gt; &amp;ndash; CC-BY-SA to the author.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why We Built the Best #Legalhack ing Tool I Know Of</title>
      <link>http://localhost/2014/12/17/the-best-legal-hacking-tool-i-know/</link>
      <pubDate>Wed, 17 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid isPermaLink="true">http://localhost/2014/12/17/the-best-legal-hacking-tool-i-know/</guid>
      <description>

&lt;p&gt;Over a year ago, I was working on sketches and outlines for a product I was very interested in working on called RMOC (short for Research-Read-Map-Outline-Compose-Consider) which was meant to be an integrated document environment (IDE) for people who work on developing documents, but mostly for lawyers. The sketches of why I thought this was an important project are available on &lt;a href=&#34;https://github.com/rmoc&#34; target=&#34;_blank&#34;&gt;RMOC&amp;rsquo;s Github&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;

&lt;p&gt;One of the key components of RMOC was the ability for individual lawyers to take notes on a particular document and to share either those notes or the document itself in a peer-to-peer manner. The &lt;a href=&#34;https://casetext.com/&#34; target=&#34;_blank&#34;&gt;CaseText&lt;/a&gt; guys are doing a pretty good job at the sharing of notes part of this, albeit in a server design paradigm rather than a peer-to-peer based environment which I was going for with RMOC.&lt;/p&gt;

&lt;p&gt;The biggest challenge at that time was that I did not have either the skills or the experience or the tools to really pull off RMOC. Making that distributed application (which it was, even though I didn&amp;rsquo;t know that term at the time I was working on the application) shine required a few things that I did not have at the time.&lt;/p&gt;

&lt;h2 id=&#34;distributed-file-systems&#34;&gt;Distributed File Systems&lt;/h2&gt;

&lt;p&gt;The first thing which the application needed was a handy peer-to-peer file system which could enable the distribution of documents between individual lawyers rather than simply downloading the same document a bunch of times from a siloed server &amp;ndash; and then billing your client for that.&lt;/p&gt;

&lt;p&gt;The second thing which the application needed was a way to harmonize and manage the data driven interactions. In particular the encrypting of the notes files and sharing those with a predefined group of peer nodes. Sharing in this context is really about key management rather than sharing in the sense of &amp;ldquo;giving to&amp;rdquo; because a real distributed file store is able to separate the distribution function from the access function. This is why encryption makes so much sense when dealing with peer-to-peer technology where it is more difficult to regulate the passing of bits around the internet than in a server-based environment.&lt;/p&gt;

&lt;h2 id=&#34;law-as-code&#34;&gt;Law as Code&lt;/h2&gt;

&lt;p&gt;At its essence, the &lt;a href=&#34;https://twitter.com/hashtag/legalhack&#34; target=&#34;_blank&#34;&gt;#legalhack&lt;/a&gt; movement is about using the processes and tools which developers (hackers) to develop new tools or processes which assist the practice of law. That is my definition, I&amp;rsquo;m sure that others have their own definitions. Many within the #legalhackers movement feel that the power, connectivity, and precision which software has provided to other industries should be embraced by the legal industry. There are few things in life which I could agree with more.&lt;/p&gt;

&lt;p&gt;But here is where things may go all wonky for some. What if law &lt;strong&gt;became&lt;/strong&gt; code? Seriously. Now, I know the counter arguments well; indeed, I&amp;rsquo;ve made many of them. Mostly they boil down to something similar to, &amp;ldquo;humans are complex and you cannot distill the entirety of human experience to code so as to regulate it in a sufficiently flexible manner&amp;rdquo;. In other words, while we like due diligence, we also like mercy, flexibility, and contextual understanding of fact patterns.&lt;/p&gt;

&lt;p&gt;Despite whether some lawyers want to deal with it or not, law &lt;strong&gt;will become&lt;/strong&gt; code &amp;ndash; to a certain extent. I say this with certainty because I believe it is a certainty. Why? The internet of things will drive rule making frameworks toward code. How else will city counsels tell the self-driving cars not to park on main street between the hours of 8am and 4pm on 01 January because the town is having a New Years parade?  How else will a water district or board be able to communicate to automated irrigation systems that the district is experiencing a drought right now and all non-essential irrigation activities need to be done either in the night or turned off?&lt;/p&gt;

&lt;p&gt;One significant advantage in the convergence of code and law largely does away with an entire set of litigation: what I&amp;rsquo;ve been calling textual ambiguity within agreements. Now, granted, this is not a significant burden on most court systems that I&amp;rsquo;m aware of, but still there are greater than zero cases which dispute the language of an agreement. The precision required to build rules as code will largely do away with such cases. Indeed, there are other  advantages in the convergence of code and law for rule making rule dissemination, rule implementation, and rule enforcement processes which I hope to elucidate over the coming months.&lt;/p&gt;

&lt;p&gt;There are also some disadvantages, or put more properly, there are real and clear reasons why I do not think that &lt;strong&gt;all&lt;/strong&gt; law should be reduced to code. For one, computers will &amp;ndash; for the foreseeable future &amp;ndash; have a difficulty determining whether an event has occurred in a particular manner, or what I call: factual ambiguity. This is the other stream of litigation which flows from contractual disputes (as well as regulatory disputes) and it is unlikely that computers and robots will be very good at the level of reasoning and contextual awareness required to parse out such disputes at any point in the next two to three generations.&lt;/p&gt;

&lt;h2 id=&#34;law-as-code-is-now-possible&#34;&gt;Law as Code is Now Possible&lt;/h2&gt;

&lt;p&gt;Smart contracts are the first technology I&amp;rsquo;m aware of which actually makes law as code possible. This is probably the single most exciting thing about smart contract from my perspective.&lt;/p&gt;

&lt;p&gt;Escrow agreements as code? Simple. Trusts and SPVs as code? Not simple, but certainly possible. Any type of agreement which can easily be measured and for which enforcement is covered within the four corners of the contract can possibly be reduced to code in the form of smart contracts. Exciting indeed.&lt;/p&gt;

&lt;p&gt;Now, any lawyer worth their salt would not (for the foreseeable future) recommend to their client to simply put in place smart contracts because at this particular moment I would guess there are less than five judges in all jurisdictions on earth which would be able and willing to actually enforce a smart contract in the real world.&lt;/p&gt;

&lt;p&gt;As some late night shows tend to say, but wait, there&amp;rsquo;s more! There is a paradigm which I&amp;rsquo;ve been calling &lt;strong&gt;dual integration&lt;/strong&gt; which will allow lawyers to develop agreements which have a real world contract component and a computer world contract component with the documents reciprocally integrating one another. This allows the lawyer&amp;rsquo;s clients to gain the enforcement power which is currently well known and mature (e.g., go to court) along with the lesser known and less mature automation and precision advantages which smart contracts provide.&lt;/p&gt;

&lt;p&gt;When I first built &lt;a href=&#34;https://github.com/compleatang/legal-markdown&#34; target=&#34;_blank&#34;&gt;legal markdown&lt;/a&gt; the idea was to take contracts and to reduce those into templates as a coder would. This process extracts the parameters of the contract into front matter which any programming language can deal with and leaves the template text to render as it normally would after the parameters have been provided. In the original version of legal markdown, which I built in Ruby, these parameters were in the form of YAML front matter. In the completely &lt;a href=&#34;https://github.com/eris-ltd/legalmarkdown&#34; target=&#34;_blank&#34;&gt;updated version of legal markdown&lt;/a&gt; parameters can be in the form of YAML front matter or passed separately as json or yaml.&lt;/p&gt;

&lt;p&gt;At Eris Industries, we have been building systems of smart contracts using a very similar paradigm. We use what we call factories, which are similar to legal markdown templates. These factories are passed a set of parameters and from that they derive an individual smart contract which matches the template and is responsive to the parameters. This process exactly mirrors what legal markdown does.&lt;/p&gt;

&lt;p&gt;So when smart contract factories are combined with legal markdown templates, lawyers are able to have the best of all worlds. Legal applications can be developed which accept a single set of parameters and from that set a real world legal contract (in PDF or other form) can be outputted as well as a smart contract can also be deployed. And, oh by the way, the real world contract PDFs can be encrypted and disseminated in a peer-to-peer manner using a distributed file system. Indeed, we have developed the sequencing for dual integration of real world and computer world contracts for our MarketPlace application.&lt;/p&gt;

&lt;h2 id=&#34;putting-it-together&#34;&gt;Putting It Together&lt;/h2&gt;

&lt;p&gt;Not all of the above has been built at this current time. However, a great portion of the first tools which will make law as code and distributed, encrypted file sharing a possibility are now built. If this is interesting to you, please do read more about our &lt;a href=&#34;https://erisindustries.com/components/erisdb&#34; target=&#34;_blank&#34;&gt;distributed application server&lt;/a&gt; and our &lt;a href=&#34;https://erisindustries.com/components/erisdb&#34; target=&#34;_blank&#34;&gt;smart contract systems&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are having a legal hackathon or other legal hacking event and you wish help in getting acquainted with smart contract or distributed systems please send us an &lt;a href=&#34;mailto:contact@erisindustries.com&#34; target=&#34;_blank&#34;&gt;email&lt;/a&gt; or let us know on &lt;a href=&#34;https://twitter.com/eris_ltd&#34; target=&#34;_blank&#34;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>