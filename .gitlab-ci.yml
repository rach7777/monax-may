image: docker:17.09-git

stages:
- build
- deploy

before_script:
- echo $CI_BUILD_TOKEN | docker login --username gitlab-ci-token --password-stdin registry.code.monax.io

variables:
  BUILD_DIR: "/build"
  CLOUDSDK_BIN_PATH: "/root/google-cloud-sdk/bin"
  CLOUDSDK_CORE_DISABLE_PROMPTS: "yes"
  DOCKER_BUILD_IMAGE: "registry.code.monax.io/monax/monax.io/site"
  DOCKER_BUILDER_IMAGE: "registry.code.monax.io/monax/monax.io/builder:latest"
  DOCKER_DRIVER: "overlay2"
  GCS_BUCKET: "sites.monax.io"

# Variable packages
.variables_staging: &vars_staging
  only:
    - staging
  variables:
    SITE_NAME: "staging.monax.io"

.variables_production: &vars_production
  only:
    - production
  variables:
    SITE_NAME: "monax.io"

# Job templates
.build_site_template: &build_template
  stage: build
  services:
  - docker:17.09-dind
  except:
  - schedules
  script:
  - |
    docker build \
      --tag $DOCKER_BUILD_IMAGE:$CI_BUILD_REF_NAME \
      --build-arg SITE_NAME=$SITE_NAME \
      --build-arg BUILD_DIR=$BUILD_DIR `pwd`
    docker push "$DOCKER_BUILD_IMAGE:$CI_BUILD_REF_NAME" &>/dev/null

.deploy_template: &deploy_template
  image: $DOCKER_BUILD_IMAGE:$CI_BUILD_REF_NAME
  stage: deploy
  except:
  - schedules
  before_script:
  - apk add --no-cache --update bash python
  script:
  - |
    curl -sSL https://sdk.cloud.google.com | bash &>/dev/null
    # [csk] I know, I know, but you try it without.... ^^^
    echo $GCS_CLIENT_SECRET_SITES > client-secret.json
    $CLOUDSDK_BIN_PATH/gcloud auth activate-service-account --key-file client-secret.json
    rm client-secret.json
    $CLOUDSDK_BIN_PATH/gsutil -m \
      rsync -r -d \
      $BUILD_DIR gs://$GCS_BUCKET/$SITE_NAME

# Builder jobs
# We use a separate site builder to optimize for the npm install && bower install paths
# because they take so f-ing long it is easier to build up to that point and cache
# a docker image. This happens on a once-a-week schedule as managed by gitlab.
# The fresh build cache image is then use by the normal build jobs (which refresh the
# npm install; but it is much quicker since all the packages are, at most, a week old).
build_site_buildr:
  only:
  - schedules
  services:
    - docker:17.09-dind
  stage: build
  script:
  - |
    docker pull $DOCKER_BUILDER_IMAGE || true
    docker build \
      --cache-from $DOCKER_BUILDER_IMAGE \
      --tag $DOCKER_BUILDER_IMAGE \
      --file Dockerfile.buildr `pwd`
    docker push $DOCKER_BUILDER_IMAGE

# Build jobs
build_site_staging:
  <<: *vars_staging
  <<: *build_template

build_site_production:
  <<: *vars_production
  <<: *build_template

# Deploy jobs
deploy_staging:
  environment:
    name: staging
    url: https://staging.monax.io
  <<: *vars_staging
  <<: *deploy_template

deploy_production:
  environment:
    name: production
    url: https://monax.io
  <<: *vars_production
  <<: *deploy_template

