#!/usr/bin/env bash
# this is to be used for local development
static_dir=`pwd`/static

setup() {
  if [[ `docker images site_buildr -q` == "" ]]
  then
    `pwd`/scripts/build buildr
  elif [[ `docker images site -q` == "" ]]
  then
    `pwd`/scripts/build
  fi

  if [ ! -d "$static_dir" ]; then
    mkdir $static_dir &>/dev/null
  fi

  echo -e "=====================\nserving & waiting\n====================="
}

cleanup() {
  echo "Cleaning"

  if [ "$1" == "dev" ]
  then
    docker rm --force site_gulp_watch
  fi
  docker rm --force site_hugo_serve

  echo
cat << EOF
  Imma gonna finish up now.

  If you change any of the files outside of the directories:

    * content (used by the hugo watching container)
    * layouts (used by the hugo watching container)
    * source/js (used by the gulp watching container)
    * source/css (used by the gulp watching container)

  then you will need to rebuild the docker image.
  To do so please run [docker rmi site] and then rerun me.

  If you changed anything on the gulp / npm / bower area then
  you will need to rebuild the site_buildr docker image.
  To do so please run [docker rmi site site_buildr] and then
  rerun me. (Note, this takes forever.)

  If you only change things within the above listed directories
  then you can simply rerun me.

  Good-bye!

EOF
}

serve_gulp() {
  docker run --name site_gulp_watch \
    --volume `pwd`/source/js:/site/source/js \
    --volume `pwd`/source/css:/site/source/css \
    --volume `pwd`/source/images:/site/source/images \
    --volume `pwd`/source/data:/site/source/data \
    --volume /site/static \
    site \
    gulp watch-no-build &
}

serve_hugo() {
  docker run --name site_hugo_serve \
    --volume `pwd`/content:/site/content \
    --volume `pwd`/layouts:/site/layouts \
    --volumes-from site_gulp_watch \
    --publish 0.0.0.0:1313:1313 \
    site \
    hugo serve --appendPort --baseURL http://192.168.99.100 --bind 0.0.0.0 &
}

main() {
  if [ "$1" == "dev" ]
  then
    # note, we may need to do a dump from the docker build here
    serve_gulp
    sleep 5
  fi
  setup
  serve_hugo
  trap "trap - SIGTERM; cleanup $@; kill -- -$$" SIGINT SIGTERM EXIT
  tail -f /dev/null & wait
}

main $@
